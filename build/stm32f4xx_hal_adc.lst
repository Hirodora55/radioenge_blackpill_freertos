ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_hal_adc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c"
  20              		.section	.text.HAL_ADC_Init,"ax",%progbits
  21              		.align	1
  22              		.global	HAL_ADC_Init
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	HAL_ADC_Init:
  28              	.LFB216:
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @file    stm32f4xx_hal_adc.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following 
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          functionalities of the Analog to Digital Converter (ADC) peripheral:
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           + Initialization and de-initialization functions
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           + Peripheral Control functions
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           + Peripheral State functions
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ******************************************************************************
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @attention
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * Copyright (c) 2017 STMicroelectronics.
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * All rights reserved.
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * in the root directory of this software component.
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ******************************************************************************
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   @verbatim
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                     ##### ADC Peripheral features #####
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..] 
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) 12-bit, 10-bit, 8-bit or 6-bit configurable resolution.
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Interrupt generation at the end of conversion, end of injected conversion,  
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       and in case of analog watchdog or overrun events
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Single and continuous conversion modes.
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 2


  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Scan mode for automatic conversion of channel 0 to channel x.
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Data alignment with in-built data coherency.
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Channel-wise programmable sampling time.
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) External trigger option with configurable polarity for both regular and 
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       injected conversion.
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Dual/Triple mode (on devices with 2 ADCs or more).
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Configurable DMA data storage in Dual/Triple ADC mode. 
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Configurable delay between conversions in Dual/Triple interleaved mode.
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC conversion type (refer to the datasheets).
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC supply requirements: 2.4 V to 3.6 V at full speed and down to 1.8 V at 
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       slower speed.
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC input range: VREF(minus) = VIN = VREF(plus).
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) DMA request generation during regular channel conversion.
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                      ##### How to use this driver #####
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..]
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#)Initialize the ADC low level resources by implementing the HAL_ADC_MspInit():
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (##) Enable the ADC interface clock using __HAL_RCC_ADC_CLK_ENABLE()
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (##) ADC pins configuration
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Enable the clock for the ADC GPIOs using the following function:
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                    __HAL_RCC_GPIOx_CLK_ENABLE()  
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Configure these ADC pins in analog mode using HAL_GPIO_Init() 
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (##) In case of using interrupts (e.g. HAL_ADC_Start_IT())
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Configure the ADC interrupt priority using HAL_NVIC_SetPriority()
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Enable the ADC IRQ handler using HAL_NVIC_EnableIRQ()
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) In ADC IRQ handler, call HAL_ADC_IRQHandler()
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (##) In case of using DMA to control data transfer (e.g. HAL_ADC_Start_DMA())
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Enable the DMAx interface clock using __HAL_RCC_DMAx_CLK_ENABLE()
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Configure and enable two DMA streams stream for managing data
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                  transfer from peripheral to memory (output stream)
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Associate the initialized DMA handle to the CRYP DMA handle
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                  using  __HAL_LINKDMA()
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Configure the priority and enable the NVIC for the transfer complete
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                  interrupt on the two DMA Streams. The output stream should have higher
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                  priority than the input stream.
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                        
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     *** Configuration of ADC, groups regular/injected, channels parameters ***
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..]
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Configure the ADC parameters (resolution, data alignment, ...)
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       and regular group parameters (conversion trigger, sequencer, ...)
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       using function HAL_ADC_Init().
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Configure the channels for regular group parameters (channel number, 
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       channel rank into sequencer, ..., into regular group)
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       using function HAL_ADC_ConfigChannel().
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, configure the injected group parameters (conversion trigger, 
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       sequencer, ..., of injected group)
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       and the channels for injected group parameters (channel number, 
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       channel rank into sequencer, ..., into injected group)
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       using function HAL_ADCEx_InjectedConfigChannel().
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, configure the analog watchdog parameters (channels
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       monitored, thresholds, ...) using function HAL_ADC_AnalogWDGConfig().
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 3


  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, for devices with several ADC instances: configure the 
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       multimode parameters using function HAL_ADCEx_MultiModeConfigChannel().
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                        *** Execution of ADC conversions ***
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..]  
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC driver can be used among three modes: polling, interruption,
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       transfer by DMA.    
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      *** Polling mode IO operation ***
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      =================================
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]    
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Start the ADC peripheral using HAL_ADC_Start() 
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Wait for end of conversion using HAL_ADC_PollForConversion(), at this stage
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            user can specify the value of timeout according to his end application      
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) To read the ADC converted values, use the HAL_ADC_GetValue() function.
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Stop the ADC peripheral using HAL_ADC_Stop()
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      *** Interrupt mode IO operation ***    
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      ===================================
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]    
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Start the ADC peripheral using HAL_ADC_Start_IT() 
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Use HAL_ADC_IRQHandler() called under ADC_IRQHandler() Interrupt subroutine
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) At ADC end of conversion HAL_ADC_ConvCpltCallback() function is executed and user can 
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ConvCpltCallback 
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) In case of ADC Error, HAL_ADC_ErrorCallback() function is executed and user can 
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ErrorCallback
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Stop the ADC peripheral using HAL_ADC_Stop_IT()     
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      *** DMA mode IO operation ***    
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      ==============================
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]    
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Start the ADC peripheral using HAL_ADC_Start_DMA(), at this stage the user specify the l
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            of data to be transferred at each end of conversion 
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) At The end of data transfer by HAL_ADC_ConvCpltCallback() function is executed and user 
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ConvCpltCallback 
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) In case of transfer Error, HAL_ADC_ErrorCallback() function is executed and user can 
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ErrorCallback
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Stop the ADC peripheral using HAL_ADC_Stop_DMA()
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                     
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      *** ADC HAL driver macros list ***
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      ============================================= 
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        Below the list of most used macros in ADC HAL driver.
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_ENABLE : Enable the ADC peripheral
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_DISABLE : Disable the ADC peripheral
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_ENABLE_IT: Enable the ADC end of conversion interrupt
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_DISABLE_IT: Disable the ADC end of conversion interrupt
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_GET_IT_SOURCE: Check if the specified ADC interrupt source is enabled or disabl
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_CLEAR_FLAG: Clear the ADC's pending flags
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_GET_FLAG: Get the selected ADC's flag status
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) ADC_GET_RESOLUTION: Return resolution bits in CR1 register 
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..] 
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (@) You can refer to the ADC HAL driver header file for more useful macros 
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 4


 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       *** Deinitialization of ADC ***
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..]
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Disable the ADC interface
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) ADC clock can be hard reset and disabled at RCC top level.
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) Hard reset of ADC peripherals
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           using macro __HAL_RCC_ADC_FORCE_RESET(), __HAL_RCC_ADC_RELEASE_RESET().
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) ADC clock disable using the equivalent macro/functions as configuration step.
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) Example:
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                    other device clock parameters configuration:
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) HAL_RCC_GetOscConfig(&RCC_OscInitStructure);
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) RCC_OscInitStructure.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) RCC_OscInitStructure.HSIState = RCC_HSI_OFF; (if not used for system clock)
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) HAL_RCC_OscConfig(&RCC_OscInitStructure);
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC pins configuration
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) Disable the clock for the ADC GPIOs using macro __HAL_RCC_GPIOx_CLK_DISABLE()
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, in case of usage of ADC with interruptions:
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) Disable the NVIC for ADC using function HAL_NVIC_DisableIRQ(ADCx_IRQn)
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, in case of usage of DMA:
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (++) Deinitialize the DMA using function HAL_DMA_DeInit().
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (++) Disable the NVIC for DMA using function HAL_NVIC_DisableIRQ(DMAx_Channelx_IRQn)   
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       *** Callback registration ***
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      The compilation flag USE_HAL_ADC_REGISTER_CALLBACKS, when set to 1,
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      allows the user to configure dynamically the driver callbacks.
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      Use Functions HAL_ADC_RegisterCallback()
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      to register an interrupt callback.
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      Function HAL_ADC_RegisterCallback() allows to register following callbacks:
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) InjectedQueueOverflowCallback  : ADC group injected context queue overflow callback
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      This function takes as parameters the HAL peripheral handle, the Callback ID
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      and a pointer to the user callback function.
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      Use function HAL_ADC_UnRegisterCallback to reset a callback to the default
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      weak function.
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      HAL_ADC_UnRegisterCallback takes as parameters the HAL peripheral handle,
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 5


 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      and the Callback ID.
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      This function allows to reset following callbacks:
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) InjectedQueueOverflowCallback  : ADC group injected context queue overflow callback
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      By default, after the HAL_ADC_Init() and when the state is HAL_ADC_STATE_RESET
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      all callbacks are set to the corresponding weak functions:
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      examples HAL_ADC_ConvCpltCallback(), HAL_ADC_ErrorCallback().
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      Exception done for MspInit and MspDeInit functions that are
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      reset to the legacy weak functions in the HAL_ADC_Init()/ HAL_ADC_DeInit() only when
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      these callbacks are null (not registered beforehand).
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      If MspInit or MspDeInit are not null, the HAL_ADC_Init()/ HAL_ADC_DeInit()
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state.
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      Callbacks can be registered/unregistered in HAL_ADC_STATE_READY state only.
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      Exception done MspInit/MspDeInit functions that can be registered/unregistered
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      in HAL_ADC_STATE_READY or HAL_ADC_STATE_RESET state,
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      Then, the user first registers the MspInit/MspDeInit user callbacks
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      using HAL_ADC_RegisterCallback() before calling HAL_ADC_DeInit()
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      or HAL_ADC_Init() function.
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      When the compilation flag USE_HAL_ADC_REGISTER_CALLBACKS is set to 0 or
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      not defined, the callback registration feature is not available and all callbacks
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      are set to the corresponding weak functions.
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     @endverbatim
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */ 
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #include "stm32f4xx_hal.h"
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @addtogroup STM32F4xx_HAL_Driver
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC ADC
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief ADC driver modules
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */ 
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 6


 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @addtogroup ADC_Private_Functions
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_Init(ADC_HandleTypeDef* hadc);
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma);
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma);
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma);
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Exported functions --------------------------------------------------------*/
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization and de-initialization functions 
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *  @brief    Initialization and Configuration functions 
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @verbatim    
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Initialize and configure the ADC. 
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) De-initialize the ADC. 
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****          
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @endverbatim
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Initializes the ADCx peripheral according to the specified parameters 
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         in the ADC_InitStruct and initializes the ADC MSP.
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   This function is used to configure the global features of the ADC ( 
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         ClockPrescaler, Resolution, Data Alignment and number of conversion), however,
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the rest of the configuration parameters are specific to the regular
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         channels group (scan mode activation, continuous mode activation,
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         External trigger source and edge, DMA continuous request after the  
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         last transfer and End of conversion selection).
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *             
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
  29              		.loc 1 312 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 7


  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 84B0     		sub	sp, sp, #16
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 24
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  45              		.loc 1 313 21
  46 0008 0023     		movs	r3, #0
  47 000a FB73     		strb	r3, [r7, #15]
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check ADC handle */
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc == NULL)
  48              		.loc 1 316 5
  49 000c 7B68     		ldr	r3, [r7, #4]
  50 000e 002B     		cmp	r3, #0
  51 0010 01D1     		bne	.L2
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     return HAL_ERROR;
  52              		.loc 1 318 12
  53 0012 0123     		movs	r3, #1
  54 0014 33E0     		b	.L3
  55              	.L2:
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ScanConvMode));
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG(hadc->Init.ExternalTrigConv));
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_LENGTH(hadc->Init.NbrOfConversion));
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EOCSelection(hadc->Init.EOCSelection));
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc->State == HAL_ADC_STATE_RESET)
  56              		.loc 1 339 10
  57 0016 7B68     		ldr	r3, [r7, #4]
  58 0018 1B6C     		ldr	r3, [r3, #64]
  59              		.loc 1 339 5
  60 001a 002B     		cmp	r3, #0
  61 001c 09D1     		bne	.L4
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 8


 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Init the ADC Callback settings */
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->ConvCpltCallback              = HAL_ADC_ConvCpltCallback;                 /* Legacy weak 
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->ConvHalfCpltCallback          = HAL_ADC_ConvHalfCpltCallback;             /* Legacy weak 
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback      = HAL_ADC_LevelOutOfWindowCallback;         /* Legacy weak 
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->ErrorCallback                 = HAL_ADC_ErrorCallback;                    /* Legacy weak 
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->InjectedConvCpltCallback      = HAL_ADCEx_InjectedConvCpltCallback;       /* Legacy weak 
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (hadc->MspInitCallback == NULL)
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit  */
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Init the low level hardware */
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->MspInitCallback(hadc);
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Init the low level hardware */
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
  62              		.loc 1 357 5
  63 001e 7868     		ldr	r0, [r7, #4]
  64 0020 FFF7FEFF 		bl	HAL_ADC_MspInit
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Initialize ADC error code */
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
  65              		.loc 1 361 5
  66 0024 7B68     		ldr	r3, [r7, #4]
  67 0026 0022     		movs	r2, #0
  68 0028 5A64     		str	r2, [r3, #68]
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Allocate lock resource and initialize it */
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
  69              		.loc 1 364 16
  70 002a 7B68     		ldr	r3, [r7, #4]
  71 002c 0022     		movs	r2, #0
  72 002e 83F83C20 		strb	r2, [r3, #60]
  73              	.L4:
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* correctly completed.                                                     */
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
  74              		.loc 1 369 7
  75 0032 7B68     		ldr	r3, [r7, #4]
  76 0034 1B6C     		ldr	r3, [r3, #64]
  77 0036 03F01003 		and	r3, r3, #16
  78              		.loc 1 369 6
  79 003a 002B     		cmp	r3, #0
  80 003c 18D1     		bne	.L5
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
  81              		.loc 1 372 5
  82 003e 7B68     		ldr	r3, [r7, #4]
  83 0040 1B6C     		ldr	r3, [r3, #64]
  84 0042 23F48853 		bic	r3, r3, #4352
  85 0046 23F00203 		bic	r3, r3, #2
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 9


  86 004a 43F00202 		orr	r2, r3, #2
  87 004e 7B68     		ldr	r3, [r7, #4]
  88 0050 1A64     		str	r2, [r3, #64]
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC parameters */
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_Init(hadc);
  89              		.loc 1 377 5
  90 0052 7868     		ldr	r0, [r7, #4]
  91 0054 FFF7FEFF 		bl	ADC_Init
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC error code to none */
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
  92              		.loc 1 380 5
  93 0058 7B68     		ldr	r3, [r7, #4]
  94 005a 0022     		movs	r2, #0
  95 005c 5A64     		str	r2, [r3, #68]
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the ADC state */
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
  96              		.loc 1 383 5
  97 005e 7B68     		ldr	r3, [r7, #4]
  98 0060 1B6C     		ldr	r3, [r3, #64]
  99 0062 23F00303 		bic	r3, r3, #3
 100 0066 43F00102 		orr	r2, r3, #1
 101 006a 7B68     		ldr	r3, [r7, #4]
 102 006c 1A64     		str	r2, [r3, #64]
 103 006e 01E0     		b	.L6
 104              	.L5:
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 105              		.loc 1 389 20
 106 0070 0123     		movs	r3, #1
 107 0072 FB73     		strb	r3, [r7, #15]
 108              	.L6:
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Release Lock */
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 109              		.loc 1 393 3
 110 0074 7B68     		ldr	r3, [r7, #4]
 111 0076 0022     		movs	r2, #0
 112 0078 83F83C20 		strb	r2, [r3, #60]
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return tmp_hal_status;
 113              		.loc 1 396 10
 114 007c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 115              	.L3:
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 116              		.loc 1 397 1
 117 007e 1846     		mov	r0, r3
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 10


 118 0080 1037     		adds	r7, r7, #16
 119              	.LCFI3:
 120              		.cfi_def_cfa_offset 8
 121 0082 BD46     		mov	sp, r7
 122              	.LCFI4:
 123              		.cfi_def_cfa_register 13
 124              		@ sp needed
 125 0084 80BD     		pop	{r7, pc}
 126              		.cfi_endproc
 127              	.LFE216:
 129              		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 130              		.align	1
 131              		.global	HAL_ADC_DeInit
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 136              	HAL_ADC_DeInit:
 137              	.LFB217:
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Deinitializes the ADCx peripheral registers to their default reset values. 
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef* hadc)
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 138              		.loc 1 406 1
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 16
 141              		@ frame_needed = 1, uses_anonymous_args = 0
 142 0000 80B5     		push	{r7, lr}
 143              	.LCFI5:
 144              		.cfi_def_cfa_offset 8
 145              		.cfi_offset 7, -8
 146              		.cfi_offset 14, -4
 147 0002 84B0     		sub	sp, sp, #16
 148              	.LCFI6:
 149              		.cfi_def_cfa_offset 24
 150 0004 00AF     		add	r7, sp, #0
 151              	.LCFI7:
 152              		.cfi_def_cfa_register 7
 153 0006 7860     		str	r0, [r7, #4]
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 154              		.loc 1 407 21
 155 0008 0023     		movs	r3, #0
 156 000a FB73     		strb	r3, [r7, #15]
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check ADC handle */
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc == NULL)
 157              		.loc 1 410 5
 158 000c 7B68     		ldr	r3, [r7, #4]
 159 000e 002B     		cmp	r3, #0
 160 0010 01D1     		bne	.L8
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     return HAL_ERROR;
 161              		.loc 1 412 12
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 11


 162 0012 0123     		movs	r3, #1
 163 0014 22E0     		b	.L9
 164              	.L8:
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC state */
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 165              		.loc 1 419 3
 166 0016 7B68     		ldr	r3, [r7, #4]
 167 0018 1B6C     		ldr	r3, [r3, #64]
 168 001a 43F00202 		orr	r2, r3, #2
 169 001e 7B68     		ldr	r3, [r7, #4]
 170 0020 1A64     		str	r2, [r3, #64]
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Disable ADC peripheral */
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
 171              		.loc 1 423 3
 172 0022 7B68     		ldr	r3, [r7, #4]
 173 0024 1B68     		ldr	r3, [r3]
 174 0026 9A68     		ldr	r2, [r3, #8]
 175 0028 7B68     		ldr	r3, [r7, #4]
 176 002a 1B68     		ldr	r3, [r3]
 177 002c 22F00102 		bic	r2, r2, #1
 178 0030 9A60     		str	r2, [r3, #8]
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* correctly completed.                                                     */
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 179              		.loc 1 427 6
 180 0032 7B68     		ldr	r3, [r7, #4]
 181 0034 1B68     		ldr	r3, [r3]
 182 0036 9B68     		ldr	r3, [r3, #8]
 183 0038 03F00103 		and	r3, r3, #1
 184              		.loc 1 427 5
 185 003c 002B     		cmp	r3, #0
 186 003e 08D1     		bne	.L10
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (hadc->MspDeInitCallback == NULL)
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit  */
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* DeInit the low level hardware: RCC clock, NVIC */
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->MspDeInitCallback(hadc);
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* DeInit the low level hardware: RCC clock, NVIC */
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_ADC_MspDeInit(hadc);
 187              		.loc 1 439 3
 188 0040 7868     		ldr	r0, [r7, #4]
 189 0042 FFF7FEFF 		bl	HAL_ADC_MspDeInit
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 12


 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC error code to none */
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 190              		.loc 1 443 5
 191 0046 7B68     		ldr	r3, [r7, #4]
 192 0048 0022     		movs	r2, #0
 193 004a 5A64     		str	r2, [r3, #68]
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->State = HAL_ADC_STATE_RESET;
 194              		.loc 1 446 17
 195 004c 7B68     		ldr	r3, [r7, #4]
 196 004e 0022     		movs	r2, #0
 197 0050 1A64     		str	r2, [r3, #64]
 198              	.L10:
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 199              		.loc 1 450 3
 200 0052 7B68     		ldr	r3, [r7, #4]
 201 0054 0022     		movs	r2, #0
 202 0056 83F83C20 		strb	r2, [r3, #60]
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return tmp_hal_status;
 203              		.loc 1 453 10
 204 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 205              	.L9:
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 206              		.loc 1 454 1
 207 005c 1846     		mov	r0, r3
 208 005e 1037     		adds	r7, r7, #16
 209              	.LCFI8:
 210              		.cfi_def_cfa_offset 8
 211 0060 BD46     		mov	sp, r7
 212              	.LCFI9:
 213              		.cfi_def_cfa_register 13
 214              		@ sp needed
 215 0062 80BD     		pop	{r7, pc}
 216              		.cfi_endproc
 217              	.LFE217:
 219              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 220              		.align	1
 221              		.weak	HAL_ADC_MspInit
 222              		.syntax unified
 223              		.thumb
 224              		.thumb_func
 226              	HAL_ADC_MspInit:
 227              	.LFB218:
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Register a User ADC Callback
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         To be used instead of the weak predefined callback
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *                the configuration information for the specified ADC.
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be registered
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 13


 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         This parameter can be one of the following values:
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  pCallback pointer to the Callback function
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_RegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Callb
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (pCallback == NULL)
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update the error code */
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     return HAL_ERROR;
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     switch (CallbackID)
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ConvCpltCallback = pCallback;
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = pCallback;
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = pCallback;
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ErrorCallback = pCallback;
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->InjectedConvCpltCallback = pCallback;
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       default :
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Update the error code */
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 14


 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Return error status */
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         status = HAL_ERROR;
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     switch (CallbackID)
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       default :
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Update the error code */
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Return error status */
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         status = HAL_ERROR;
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update the error code */
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Return error status */
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     status =  HAL_ERROR;
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return status;
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Unregister a ADC Callback
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         ADC callback is redirected to the weak predefined callback
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *                the configuration information for the specified ADC.
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be unregistered
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         This parameter can be one of the following values:
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_UnRegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Cal
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 15


 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     switch (CallbackID)
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ConvCpltCallback = HAL_ADC_ConvCpltCallback;
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = HAL_ADC_ConvHalfCpltCallback;
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = HAL_ADC_LevelOutOfWindowCallback;
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ErrorCallback = HAL_ADC_ErrorCallback;
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->InjectedConvCpltCallback = HAL_ADCEx_InjectedConvCpltCallback;
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit              */
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit            */
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       default :
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Update the error code */
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Return error status */
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         status =  HAL_ERROR;
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     switch (CallbackID)
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit;                   /* Legacy weak MspInit          
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit;               /* Legacy weak MspDeInit        
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       default :
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 16


 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Update the error code */
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Return error status */
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         status =  HAL_ERROR;
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update the error code */
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Return error status */
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     status =  HAL_ERROR;
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return status;
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Initializes the ADC MSP.
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 228              		.loc 1 663 1
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 8
 231              		@ frame_needed = 1, uses_anonymous_args = 0
 232              		@ link register save eliminated.
 233 0000 80B4     		push	{r7}
 234              	.LCFI10:
 235              		.cfi_def_cfa_offset 4
 236              		.cfi_offset 7, -4
 237 0002 83B0     		sub	sp, sp, #12
 238              	.LCFI11:
 239              		.cfi_def_cfa_offset 16
 240 0004 00AF     		add	r7, sp, #0
 241              	.LCFI12:
 242              		.cfi_def_cfa_register 7
 243 0006 7860     		str	r0, [r7, #4]
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_MspInit could be implemented in the user file
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */ 
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 244              		.loc 1 669 1
 245 0008 00BF     		nop
 246 000a 0C37     		adds	r7, r7, #12
 247              	.LCFI13:
 248              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 17


 249 000c BD46     		mov	sp, r7
 250              	.LCFI14:
 251              		.cfi_def_cfa_register 13
 252              		@ sp needed
 253 000e 5DF8047B 		ldr	r7, [sp], #4
 254              	.LCFI15:
 255              		.cfi_restore 7
 256              		.cfi_def_cfa_offset 0
 257 0012 7047     		bx	lr
 258              		.cfi_endproc
 259              	.LFE218:
 261              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 262              		.align	1
 263              		.weak	HAL_ADC_MspDeInit
 264              		.syntax unified
 265              		.thumb
 266              		.thumb_func
 268              	HAL_ADC_MspDeInit:
 269              	.LFB219:
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  DeInitializes the ADC MSP.
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef* hadc)
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 270              		.loc 1 678 1
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 8
 273              		@ frame_needed = 1, uses_anonymous_args = 0
 274              		@ link register save eliminated.
 275 0000 80B4     		push	{r7}
 276              	.LCFI16:
 277              		.cfi_def_cfa_offset 4
 278              		.cfi_offset 7, -4
 279 0002 83B0     		sub	sp, sp, #12
 280              	.LCFI17:
 281              		.cfi_def_cfa_offset 16
 282 0004 00AF     		add	r7, sp, #0
 283              	.LCFI18:
 284              		.cfi_def_cfa_register 7
 285 0006 7860     		str	r0, [r7, #4]
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_MspDeInit could be implemented in the user file
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */ 
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 286              		.loc 1 684 1
 287 0008 00BF     		nop
 288 000a 0C37     		adds	r7, r7, #12
 289              	.LCFI19:
 290              		.cfi_def_cfa_offset 4
 291 000c BD46     		mov	sp, r7
 292              	.LCFI20:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 18


 293              		.cfi_def_cfa_register 13
 294              		@ sp needed
 295 000e 5DF8047B 		ldr	r7, [sp], #4
 296              	.LCFI21:
 297              		.cfi_restore 7
 298              		.cfi_def_cfa_offset 0
 299 0012 7047     		bx	lr
 300              		.cfi_endproc
 301              	.LFE219:
 303              		.section	.text.HAL_ADC_Start,"ax",%progbits
 304              		.align	1
 305              		.global	HAL_ADC_Start
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 310              	HAL_ADC_Start:
 311              	.LFB220:
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 IO operation functions
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *  @brief    IO operation functions 
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @verbatim   
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              ##### IO operation functions #####
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================  
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Start conversion of regular channel.
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Stop conversion of regular channel.
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Start conversion of regular channel and enable interrupt.
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Stop conversion of regular channel and disable interrupt.
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Start conversion of regular channel and enable DMA transfer.
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Stop conversion of regular channel and disable DMA transfer.
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Handle ADC interrupt request. 
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @endverbatim
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Enables ADC and starts conversion of the regular channels.
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 312              		.loc 1 717 1
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 16
 315              		@ frame_needed = 1, uses_anonymous_args = 0
 316              		@ link register save eliminated.
 317 0000 80B4     		push	{r7}
 318              	.LCFI22:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 19


 319              		.cfi_def_cfa_offset 4
 320              		.cfi_offset 7, -4
 321 0002 85B0     		sub	sp, sp, #20
 322              	.LCFI23:
 323              		.cfi_def_cfa_offset 24
 324 0004 00AF     		add	r7, sp, #0
 325              	.LCFI24:
 326              		.cfi_def_cfa_register 7
 327 0006 7860     		str	r0, [r7, #4]
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 328              		.loc 1 718 17
 329 0008 0023     		movs	r3, #0
 330 000a BB60     		str	r3, [r7, #8]
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 331              		.loc 1 726 3
 332 000c 7B68     		ldr	r3, [r7, #4]
 333 000e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 334 0012 012B     		cmp	r3, #1
 335 0014 01D1     		bne	.L14
 336              		.loc 1 726 3 is_stmt 0 discriminator 1
 337 0016 0223     		movs	r3, #2
 338              		.loc 1 726 3
 339 0018 97E0     		b	.L15
 340              	.L14:
 341              		.loc 1 726 3 discriminator 2
 342 001a 7B68     		ldr	r3, [r7, #4]
 343 001c 0122     		movs	r2, #1
 344 001e 83F83C20 		strb	r2, [r3, #60]
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable the ADC peripheral */
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC peripheral is disabled in order to enable it and wait during 
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   Tstab time the ADC's stabilization */
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 345              		.loc 1 731 11 is_stmt 1
 346 0022 7B68     		ldr	r3, [r7, #4]
 347 0024 1B68     		ldr	r3, [r3]
 348              		.loc 1 731 21
 349 0026 9B68     		ldr	r3, [r3, #8]
 350              		.loc 1 731 27
 351 0028 03F00103 		and	r3, r3, #1
 352              		.loc 1 731 5
 353 002c 012B     		cmp	r3, #1
 354 002e 18D0     		beq	.L16
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {  
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the Peripheral */
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE(hadc);
 355              		.loc 1 734 5
 356 0030 7B68     		ldr	r3, [r7, #4]
 357 0032 1B68     		ldr	r3, [r3]
 358 0034 9A68     		ldr	r2, [r3, #8]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 20


 359 0036 7B68     		ldr	r3, [r7, #4]
 360 0038 1B68     		ldr	r3, [r3]
 361 003a 42F00102 		orr	r2, r2, #1
 362 003e 9A60     		str	r2, [r3, #8]
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Delay for ADC stabilization time */
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Compute number of CPU cycles to wait for */
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 363              		.loc 1 738 53
 364 0040 454B     		ldr	r3, .L25
 365 0042 1B68     		ldr	r3, [r3]
 366 0044 454A     		ldr	r2, .L25+4
 367 0046 A2FB0323 		umull	r2, r3, r2, r3
 368 004a 9A0C     		lsrs	r2, r3, #18
 369              		.loc 1 738 34
 370 004c 1346     		mov	r3, r2
 371 004e 5B00     		lsls	r3, r3, #1
 372 0050 1344     		add	r3, r3, r2
 373              		.loc 1 738 13
 374 0052 BB60     		str	r3, [r7, #8]
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 375              		.loc 1 739 10
 376 0054 02E0     		b	.L17
 377              	.L18:
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       counter--;
 378              		.loc 1 741 14
 379 0056 BB68     		ldr	r3, [r7, #8]
 380 0058 013B     		subs	r3, r3, #1
 381 005a BB60     		str	r3, [r7, #8]
 382              	.L17:
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 383              		.loc 1 739 19
 384 005c BB68     		ldr	r3, [r7, #8]
 385 005e 002B     		cmp	r3, #0
 386 0060 F9D1     		bne	.L18
 387              	.L16:
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 388              		.loc 1 746 6
 389 0062 7B68     		ldr	r3, [r7, #4]
 390 0064 1B68     		ldr	r3, [r3]
 391 0066 9B68     		ldr	r3, [r3, #8]
 392 0068 03F00103 		and	r3, r3, #1
 393              		.loc 1 746 5
 394 006c 012B     		cmp	r3, #1
 395 006e 5FD1     		bne	.L19
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state                                                          */
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Set state bitfield related to regular group operation                */
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 396              		.loc 1 751 5
 397 0070 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 21


 398 0072 1B6C     		ldr	r3, [r3, #64]
 399 0074 23F4E063 		bic	r3, r3, #1792
 400 0078 23F00103 		bic	r3, r3, #1
 401 007c 43F48072 		orr	r2, r3, #256
 402 0080 7B68     		ldr	r3, [r7, #4]
 403 0082 1A64     		str	r2, [r3, #64]
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* If conversions on group regular are also triggering group injected,    */
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* update ADC state.                                                      */
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 404              		.loc 1 757 9
 405 0084 7B68     		ldr	r3, [r7, #4]
 406 0086 1B68     		ldr	r3, [r3]
 407 0088 5B68     		ldr	r3, [r3, #4]
 408 008a 03F48063 		and	r3, r3, #1024
 409              		.loc 1 757 8
 410 008e 002B     		cmp	r3, #0
 411 0090 07D0     		beq	.L20
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 412              		.loc 1 759 7
 413 0092 7B68     		ldr	r3, [r7, #4]
 414 0094 1B6C     		ldr	r3, [r3, #64]
 415 0096 23F44053 		bic	r3, r3, #12288
 416 009a 43F48052 		orr	r2, r3, #4096
 417 009e 7B68     		ldr	r3, [r7, #4]
 418 00a0 1A64     		str	r2, [r3, #64]
 419              	.L20:
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 420              		.loc 1 763 9
 421 00a2 7B68     		ldr	r3, [r7, #4]
 422 00a4 1B6C     		ldr	r3, [r3, #64]
 423 00a6 03F48053 		and	r3, r3, #4096
 424              		.loc 1 763 8
 425 00aa B3F5805F 		cmp	r3, #4096
 426 00ae 06D1     		bne	.L21
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 427              		.loc 1 766 7
 428 00b0 7B68     		ldr	r3, [r7, #4]
 429 00b2 5B6C     		ldr	r3, [r3, #68]
 430 00b4 23F00602 		bic	r2, r3, #6
 431 00b8 7B68     		ldr	r3, [r7, #4]
 432 00ba 5A64     		str	r2, [r3, #68]
 433 00bc 02E0     		b	.L22
 434              	.L21:
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC all error code fields */
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 22


 435              		.loc 1 771 7
 436 00be 7B68     		ldr	r3, [r7, #4]
 437 00c0 0022     		movs	r2, #0
 438 00c2 5A64     		str	r2, [r3, #68]
 439              	.L22:
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     } 
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Process unlocked */
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 440              		.loc 1 777 5
 441 00c4 7B68     		ldr	r3, [r7, #4]
 442 00c6 0022     		movs	r2, #0
 443 00c8 83F83C20 		strb	r2, [r3, #60]
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Pointer to the common control register to which is belonging hadc    */
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* control register)                                                    */
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 444              		.loc 1 782 19
 445 00cc 244B     		ldr	r3, .L25+8
 446 00ce FB60     		str	r3, [r7, #12]
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear regular group conversion flag and overrun flag */
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 447              		.loc 1 786 5
 448 00d0 7B68     		ldr	r3, [r7, #4]
 449 00d2 1B68     		ldr	r3, [r3]
 450 00d4 6FF02202 		mvn	r2, #34
 451 00d8 1A60     		str	r2, [r3]
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check if Multimode enabled */
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 452              		.loc 1 789 8
 453 00da FB68     		ldr	r3, [r7, #12]
 454 00dc 5B68     		ldr	r3, [r3, #4]
 455 00de 03F01F03 		and	r3, r3, #31
 456              		.loc 1 789 7
 457 00e2 002B     		cmp	r3, #0
 458 00e4 0FD1     		bne	.L23
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if defined(ADC2) && defined(ADC3)
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) <
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                                   || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) <
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* ADC2 || ADC3 */
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* if no external trigger present enable software conversion of regular channels */
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 459              		.loc 1 797 17
 460 00e6 7B68     		ldr	r3, [r7, #4]
 461 00e8 1B68     		ldr	r3, [r3]
 462              		.loc 1 797 27
 463 00ea 9B68     		ldr	r3, [r3, #8]
 464              		.loc 1 797 33
 465 00ec 03F04053 		and	r3, r3, #805306368
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 23


 466              		.loc 1 797 11
 467 00f0 002B     		cmp	r3, #0
 468 00f2 29D1     		bne	.L24
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         {
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           /* Enable the selected ADC software conversion for regular group */
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 469              		.loc 1 800 15
 470 00f4 7B68     		ldr	r3, [r7, #4]
 471 00f6 1B68     		ldr	r3, [r3]
 472              		.loc 1 800 25
 473 00f8 9A68     		ldr	r2, [r3, #8]
 474              		.loc 1 800 15
 475 00fa 7B68     		ldr	r3, [r7, #4]
 476 00fc 1B68     		ldr	r3, [r3]
 477              		.loc 1 800 31
 478 00fe 42F08042 		orr	r2, r2, #1073741824
 479 0102 9A60     		str	r2, [r3, #8]
 480 0104 20E0     		b	.L24
 481              	.L23:
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         }
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if defined(ADC2) && defined(ADC3)
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* ADC2 || ADC3 */
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* if instance of handle correspond to ADC1 and  no external trigger present enable software 
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 482              		.loc 1 809 15
 483 0106 7B68     		ldr	r3, [r7, #4]
 484 0108 1B68     		ldr	r3, [r3]
 485              		.loc 1 809 9
 486 010a 164A     		ldr	r2, .L25+12
 487 010c 9342     		cmp	r3, r2
 488 010e 1BD1     		bne	.L24
 489              		.loc 1 809 44 discriminator 1
 490 0110 7B68     		ldr	r3, [r7, #4]
 491 0112 1B68     		ldr	r3, [r3]
 492              		.loc 1 809 54 discriminator 1
 493 0114 9B68     		ldr	r3, [r3, #8]
 494              		.loc 1 809 60 discriminator 1
 495 0116 03F04053 		and	r3, r3, #805306368
 496              		.loc 1 809 35 discriminator 1
 497 011a 002B     		cmp	r3, #0
 498 011c 14D1     		bne	.L24
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 499              		.loc 1 812 15
 500 011e 7B68     		ldr	r3, [r7, #4]
 501 0120 1B68     		ldr	r3, [r3]
 502              		.loc 1 812 25
 503 0122 9A68     		ldr	r2, [r3, #8]
 504              		.loc 1 812 15
 505 0124 7B68     		ldr	r3, [r7, #4]
 506 0126 1B68     		ldr	r3, [r3]
 507              		.loc 1 812 31
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 24


 508 0128 42F08042 		orr	r2, r2, #1073741824
 509 012c 9A60     		str	r2, [r3, #8]
 510 012e 0BE0     		b	.L24
 511              	.L19:
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update ADC state machine to error */
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 512              		.loc 1 819 5
 513 0130 7B68     		ldr	r3, [r7, #4]
 514 0132 1B6C     		ldr	r3, [r3, #64]
 515 0134 43F01002 		orr	r2, r3, #16
 516 0138 7B68     		ldr	r3, [r7, #4]
 517 013a 1A64     		str	r2, [r3, #64]
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC error code to ADC IP internal error */
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 518              		.loc 1 822 5
 519 013c 7B68     		ldr	r3, [r7, #4]
 520 013e 5B6C     		ldr	r3, [r3, #68]
 521 0140 43F00102 		orr	r2, r3, #1
 522 0144 7B68     		ldr	r3, [r7, #4]
 523 0146 5A64     		str	r2, [r3, #68]
 524              	.L24:
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 525              		.loc 1 826 10
 526 0148 0023     		movs	r3, #0
 527              	.L15:
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 528              		.loc 1 827 1
 529 014a 1846     		mov	r0, r3
 530 014c 1437     		adds	r7, r7, #20
 531              	.LCFI25:
 532              		.cfi_def_cfa_offset 4
 533 014e BD46     		mov	sp, r7
 534              	.LCFI26:
 535              		.cfi_def_cfa_register 13
 536              		@ sp needed
 537 0150 5DF8047B 		ldr	r7, [sp], #4
 538              	.LCFI27:
 539              		.cfi_restore 7
 540              		.cfi_def_cfa_offset 0
 541 0154 7047     		bx	lr
 542              	.L26:
 543 0156 00BF     		.align	2
 544              	.L25:
 545 0158 00000000 		.word	SystemCoreClock
 546 015c 83DE1B43 		.word	1125899907
 547 0160 00230140 		.word	1073816320
 548 0164 00200140 		.word	1073815552
 549              		.cfi_endproc
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 25


 550              	.LFE220:
 552              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 553              		.align	1
 554              		.global	HAL_ADC_Stop
 555              		.syntax unified
 556              		.thumb
 557              		.thumb_func
 559              	HAL_ADC_Stop:
 560              	.LFB221:
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Disables ADC and stop conversion of regular channels.
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * 
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   Caution: This function will stop also injected channels.  
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status.
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef* hadc)
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 561              		.loc 1 840 1
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 8
 564              		@ frame_needed = 1, uses_anonymous_args = 0
 565              		@ link register save eliminated.
 566 0000 80B4     		push	{r7}
 567              	.LCFI28:
 568              		.cfi_def_cfa_offset 4
 569              		.cfi_offset 7, -4
 570 0002 83B0     		sub	sp, sp, #12
 571              	.LCFI29:
 572              		.cfi_def_cfa_offset 16
 573 0004 00AF     		add	r7, sp, #0
 574              	.LCFI30:
 575              		.cfi_def_cfa_register 7
 576 0006 7860     		str	r0, [r7, #4]
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 577              		.loc 1 845 3
 578 0008 7B68     		ldr	r3, [r7, #4]
 579 000a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 580 000e 012B     		cmp	r3, #1
 581 0010 01D1     		bne	.L28
 582              		.loc 1 845 3 is_stmt 0 discriminator 1
 583 0012 0223     		movs	r3, #2
 584              		.loc 1 845 3
 585 0014 21E0     		b	.L29
 586              	.L28:
 587              		.loc 1 845 3 discriminator 2
 588 0016 7B68     		ldr	r3, [r7, #4]
 589 0018 0122     		movs	r2, #1
 590 001a 83F83C20 		strb	r2, [r3, #60]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 26


 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Disable ADC peripheral */
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
 591              		.loc 1 849 3 is_stmt 1
 592 001e 7B68     		ldr	r3, [r7, #4]
 593 0020 1B68     		ldr	r3, [r3]
 594 0022 9A68     		ldr	r2, [r3, #8]
 595 0024 7B68     		ldr	r3, [r7, #4]
 596 0026 1B68     		ldr	r3, [r3]
 597 0028 22F00102 		bic	r2, r2, #1
 598 002c 9A60     		str	r2, [r3, #8]
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 599              		.loc 1 852 6
 600 002e 7B68     		ldr	r3, [r7, #4]
 601 0030 1B68     		ldr	r3, [r3]
 602 0032 9B68     		ldr	r3, [r3, #8]
 603 0034 03F00103 		and	r3, r3, #1
 604              		.loc 1 852 5
 605 0038 002B     		cmp	r3, #0
 606 003a 09D1     		bne	.L30
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 607              		.loc 1 855 5
 608 003c 7B68     		ldr	r3, [r7, #4]
 609 003e 1B6C     		ldr	r3, [r3, #64]
 610 0040 23F48853 		bic	r3, r3, #4352
 611 0044 23F00103 		bic	r3, r3, #1
 612 0048 43F00102 		orr	r2, r3, #1
 613 004c 7B68     		ldr	r3, [r7, #4]
 614 004e 1A64     		str	r2, [r3, #64]
 615              	.L30:
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 616              		.loc 1 861 3
 617 0050 7B68     		ldr	r3, [r7, #4]
 618 0052 0022     		movs	r2, #0
 619 0054 83F83C20 		strb	r2, [r3, #60]
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 620              		.loc 1 864 10
 621 0058 0023     		movs	r3, #0
 622              	.L29:
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 623              		.loc 1 865 1
 624 005a 1846     		mov	r0, r3
 625 005c 0C37     		adds	r7, r7, #12
 626              	.LCFI31:
 627              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 27


 628 005e BD46     		mov	sp, r7
 629              	.LCFI32:
 630              		.cfi_def_cfa_register 13
 631              		@ sp needed
 632 0060 5DF8047B 		ldr	r7, [sp], #4
 633              	.LCFI33:
 634              		.cfi_restore 7
 635              		.cfi_def_cfa_offset 0
 636 0064 7047     		bx	lr
 637              		.cfi_endproc
 638              	.LFE221:
 640              		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 641              		.align	1
 642              		.global	HAL_ADC_PollForConversion
 643              		.syntax unified
 644              		.thumb
 645              		.thumb_func
 647              	HAL_ADC_PollForConversion:
 648              	.LFB222:
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Poll for regular conversion complete
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   ADC conversion flags EOS (end of sequence) and EOC (end of
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         conversion) are cleared by this function.
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   This function cannot be used in a particular setup: ADC configured 
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         in DMA mode and polling for end of each conversion (ADC init
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SINGLE_CONV).
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         performed on each conversion. Nevertheless, polling can still 
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         be performed on the complete sequence.
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  Timeout Timeout value in millisecond.  
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 649              		.loc 1 883 1
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 16
 652              		@ frame_needed = 1, uses_anonymous_args = 0
 653 0000 80B5     		push	{r7, lr}
 654              	.LCFI34:
 655              		.cfi_def_cfa_offset 8
 656              		.cfi_offset 7, -8
 657              		.cfi_offset 14, -4
 658 0002 84B0     		sub	sp, sp, #16
 659              	.LCFI35:
 660              		.cfi_def_cfa_offset 24
 661 0004 00AF     		add	r7, sp, #0
 662              	.LCFI36:
 663              		.cfi_def_cfa_register 7
 664 0006 7860     		str	r0, [r7, #4]
 665 0008 3960     		str	r1, [r7]
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tickstart = 0U;
 666              		.loc 1 884 12
 667 000a 0023     		movs	r3, #0
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 28


 668 000c FB60     		str	r3, [r7, #12]
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Verification that ADC configuration is compliant with polling for      */
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* each conversion:                                                       */
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* several ranks and polling for end of each conversion.                  */
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* For code simplicity sake, this particular case is generalized to       */
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* ADC configured in DMA mode and polling for end of each conversion.     */
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 669              		.loc 1 892 7
 670 000e 7B68     		ldr	r3, [r7, #4]
 671 0010 1B68     		ldr	r3, [r3]
 672 0012 9B68     		ldr	r3, [r3, #8]
 673 0014 03F48063 		and	r3, r3, #1024
 674              		.loc 1 892 6
 675 0018 B3F5806F 		cmp	r3, #1024
 676 001c 13D1     		bne	.L32
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 677              		.loc 1 893 7
 678 001e 7B68     		ldr	r3, [r7, #4]
 679 0020 1B68     		ldr	r3, [r3]
 680 0022 9B68     		ldr	r3, [r3, #8]
 681 0024 03F48073 		and	r3, r3, #256
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 682              		.loc 1 892 57 discriminator 1
 683 0028 B3F5807F 		cmp	r3, #256
 684 002c 0BD1     		bne	.L32
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update ADC state machine to error */
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 685              		.loc 1 896 5
 686 002e 7B68     		ldr	r3, [r7, #4]
 687 0030 1B6C     		ldr	r3, [r3, #64]
 688 0032 43F02002 		orr	r2, r3, #32
 689 0036 7B68     		ldr	r3, [r7, #4]
 690 0038 1A64     		str	r2, [r3, #64]
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Process unlocked */
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 691              		.loc 1 899 5
 692 003a 7B68     		ldr	r3, [r7, #4]
 693 003c 0022     		movs	r2, #0
 694 003e 83F83C20 		strb	r2, [r3, #60]
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     return HAL_ERROR;
 695              		.loc 1 901 12
 696 0042 0123     		movs	r3, #1
 697 0044 63E0     		b	.L33
 698              	.L32:
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Get tick */ 
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tickstart = HAL_GetTick();
 699              		.loc 1 905 15
 700 0046 FFF7FEFF 		bl	HAL_GetTick
 701 004a F860     		str	r0, [r7, #12]
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 29


 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check End of conversion flag */
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 702              		.loc 1 908 8
 703 004c 21E0     		b	.L35
 704              	.L38:
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(Timeout != HAL_MAX_DELAY)
 705              		.loc 1 911 7
 706 004e 3B68     		ldr	r3, [r7]
 707 0050 B3F1FF3F 		cmp	r3, #-1
 708 0054 1DD0     		beq	.L35
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 709              		.loc 1 913 9
 710 0056 3B68     		ldr	r3, [r7]
 711 0058 002B     		cmp	r3, #0
 712 005a 07D0     		beq	.L36
 713              		.loc 1 913 31 discriminator 1
 714 005c FFF7FEFF 		bl	HAL_GetTick
 715 0060 0246     		mov	r2, r0
 716              		.loc 1 913 45 discriminator 1
 717 0062 FB68     		ldr	r3, [r7, #12]
 718 0064 D31A     		subs	r3, r2, r3
 719              		.loc 1 913 26 discriminator 1
 720 0066 3A68     		ldr	r2, [r7]
 721 0068 9A42     		cmp	r2, r3
 722 006a 12D2     		bcs	.L35
 723              	.L36:
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         if(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 724              		.loc 1 916 14
 725 006c 7B68     		ldr	r3, [r7, #4]
 726 006e 1B68     		ldr	r3, [r3]
 727 0070 1B68     		ldr	r3, [r3]
 728 0072 03F00203 		and	r3, r3, #2
 729              		.loc 1 916 11
 730 0076 022B     		cmp	r3, #2
 731 0078 0BD0     		beq	.L35
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         {
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           /* Update ADC state machine to timeout */
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 732              		.loc 1 919 11
 733 007a 7B68     		ldr	r3, [r7, #4]
 734 007c 1B6C     		ldr	r3, [r3, #64]
 735 007e 43F00402 		orr	r2, r3, #4
 736 0082 7B68     		ldr	r3, [r7, #4]
 737 0084 1A64     		str	r2, [r3, #64]
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           /* Process unlocked */
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           __HAL_UNLOCK(hadc);
 738              		.loc 1 922 11
 739 0086 7B68     		ldr	r3, [r7, #4]
 740 0088 0022     		movs	r2, #0
 741 008a 83F83C20 		strb	r2, [r3, #60]
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 30


 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           return HAL_TIMEOUT;
 742              		.loc 1 924 18
 743 008e 0323     		movs	r3, #3
 744 0090 3DE0     		b	.L33
 745              	.L35:
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 746              		.loc 1 908 11
 747 0092 7B68     		ldr	r3, [r7, #4]
 748 0094 1B68     		ldr	r3, [r3]
 749 0096 1B68     		ldr	r3, [r3]
 750 0098 03F00203 		and	r3, r3, #2
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 751              		.loc 1 908 9
 752 009c 022B     		cmp	r3, #2
 753 009e D6D1     		bne	.L38
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         }
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Clear regular group conversion flag */
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 754              		.loc 1 931 3
 755 00a0 7B68     		ldr	r3, [r7, #4]
 756 00a2 1B68     		ldr	r3, [r3]
 757 00a4 6FF01202 		mvn	r2, #18
 758 00a8 1A60     		str	r2, [r3]
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Update ADC state machine */
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 759              		.loc 1 934 3
 760 00aa 7B68     		ldr	r3, [r7, #4]
 761 00ac 1B6C     		ldr	r3, [r3, #64]
 762 00ae 43F40072 		orr	r2, r3, #512
 763 00b2 7B68     		ldr	r3, [r7, #4]
 764 00b4 1A64     		str	r2, [r3, #64]
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Determine whether any further conversion upcoming on group regular       */
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Note: On STM32F4, there is no independent flag of end of sequence.       */
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       The test of scan sequence on going is done either with scan        */
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       sequence disabled or with end of conversion flag set to            */
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       of end of sequence.                                                */
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 765              		.loc 1 942 6
 766 00b6 7B68     		ldr	r3, [r7, #4]
 767 00b8 1B68     		ldr	r3, [r3]
 768 00ba 9B68     		ldr	r3, [r3, #8]
 769 00bc 03F04053 		and	r3, r3, #805306368
 770              		.loc 1 942 5
 771 00c0 002B     		cmp	r3, #0
 772 00c2 23D1     		bne	.L39
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 773              		.loc 1 943 17
 774 00c4 7B68     		ldr	r3, [r7, #4]
 775 00c6 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)            &&
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 31


 776              		.loc 1 942 60 discriminator 1
 777 00c8 002B     		cmp	r3, #0
 778 00ca 1FD1     		bne	.L39
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 779              		.loc 1 944 7
 780 00cc 7B68     		ldr	r3, [r7, #4]
 781 00ce 1B68     		ldr	r3, [r3]
 782 00d0 DB6A     		ldr	r3, [r3, #44]
 783 00d2 03F47003 		and	r3, r3, #15728640
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 784              		.loc 1 943 60
 785 00d6 002B     		cmp	r3, #0
 786 00d8 06D0     		beq	.L40
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 787              		.loc 1 945 7
 788 00da 7B68     		ldr	r3, [r7, #4]
 789 00dc 1B68     		ldr	r3, [r3]
 790 00de 9B68     		ldr	r3, [r3, #8]
 791 00e0 03F48063 		and	r3, r3, #1024
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 792              		.loc 1 944 56
 793 00e4 002B     		cmp	r3, #0
 794 00e6 11D1     		bne	.L39
 795              	.L40:
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 796              		.loc 1 948 5
 797 00e8 7B68     		ldr	r3, [r7, #4]
 798 00ea 1B6C     		ldr	r3, [r3, #64]
 799 00ec 23F48072 		bic	r2, r3, #256
 800 00f0 7B68     		ldr	r3, [r7, #4]
 801 00f2 1A64     		str	r2, [r3, #64]
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 802              		.loc 1 950 9
 803 00f4 7B68     		ldr	r3, [r7, #4]
 804 00f6 1B6C     		ldr	r3, [r3, #64]
 805 00f8 03F48053 		and	r3, r3, #4096
 806              		.loc 1 950 8
 807 00fc 002B     		cmp	r3, #0
 808 00fe 05D1     		bne	.L39
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     { 
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 809              		.loc 1 952 7
 810 0100 7B68     		ldr	r3, [r7, #4]
 811 0102 1B6C     		ldr	r3, [r3, #64]
 812 0104 43F00102 		orr	r2, r3, #1
 813 0108 7B68     		ldr	r3, [r7, #4]
 814 010a 1A64     		str	r2, [r3, #64]
 815              	.L39:
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return ADC state */
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 816              		.loc 1 957 10
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 32


 817 010c 0023     		movs	r3, #0
 818              	.L33:
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 819              		.loc 1 958 1
 820 010e 1846     		mov	r0, r3
 821 0110 1037     		adds	r7, r7, #16
 822              	.LCFI37:
 823              		.cfi_def_cfa_offset 8
 824 0112 BD46     		mov	sp, r7
 825              	.LCFI38:
 826              		.cfi_def_cfa_register 13
 827              		@ sp needed
 828 0114 80BD     		pop	{r7, pc}
 829              		.cfi_endproc
 830              	.LFE222:
 832              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 833              		.align	1
 834              		.global	HAL_ADC_PollForEvent
 835              		.syntax unified
 836              		.thumb
 837              		.thumb_func
 839              	HAL_ADC_PollForEvent:
 840              	.LFB223:
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Poll for conversion event
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  EventType the ADC event type.
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          This parameter can be one of the following values:
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *            @arg ADC_AWD_EVENT: ADC Analog watch Dog event.
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *            @arg ADC_OVR_EVENT: ADC Overrun event.
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  Timeout Timeout value in millisecond.   
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef* hadc, uint32_t EventType, uint32_t Timeou
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 841              		.loc 1 972 1
 842              		.cfi_startproc
 843              		@ args = 0, pretend = 0, frame = 24
 844              		@ frame_needed = 1, uses_anonymous_args = 0
 845 0000 80B5     		push	{r7, lr}
 846              	.LCFI39:
 847              		.cfi_def_cfa_offset 8
 848              		.cfi_offset 7, -8
 849              		.cfi_offset 14, -4
 850 0002 86B0     		sub	sp, sp, #24
 851              	.LCFI40:
 852              		.cfi_def_cfa_offset 32
 853 0004 00AF     		add	r7, sp, #0
 854              	.LCFI41:
 855              		.cfi_def_cfa_register 7
 856 0006 F860     		str	r0, [r7, #12]
 857 0008 B960     		str	r1, [r7, #8]
 858 000a 7A60     		str	r2, [r7, #4]
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tickstart = 0U;
 859              		.loc 1 973 12
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 33


 860 000c 0023     		movs	r3, #0
 861 000e 7B61     		str	r3, [r7, #20]
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Get tick */
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tickstart = HAL_GetTick();
 862              		.loc 1 980 15
 863 0010 FFF7FEFF 		bl	HAL_GetTick
 864 0014 7861     		str	r0, [r7, #20]
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check selected event flag */
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   while(!(__HAL_ADC_GET_FLAG(hadc,EventType)))
 865              		.loc 1 983 8
 866 0016 22E0     		b	.L43
 867              	.L47:
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check for the Timeout */
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(Timeout != HAL_MAX_DELAY)
 868              		.loc 1 986 7
 869 0018 7B68     		ldr	r3, [r7, #4]
 870 001a B3F1FF3F 		cmp	r3, #-1
 871 001e 1ED0     		beq	.L43
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 872              		.loc 1 988 9
 873 0020 7B68     		ldr	r3, [r7, #4]
 874 0022 002B     		cmp	r3, #0
 875 0024 07D0     		beq	.L44
 876              		.loc 1 988 31 discriminator 1
 877 0026 FFF7FEFF 		bl	HAL_GetTick
 878 002a 0246     		mov	r2, r0
 879              		.loc 1 988 45 discriminator 1
 880 002c 7B69     		ldr	r3, [r7, #20]
 881 002e D31A     		subs	r3, r2, r3
 882              		.loc 1 988 26 discriminator 1
 883 0030 7A68     		ldr	r2, [r7, #4]
 884 0032 9A42     		cmp	r2, r3
 885 0034 13D2     		bcs	.L43
 886              	.L44:
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         if(!(__HAL_ADC_GET_FLAG(hadc,EventType)))
 887              		.loc 1 991 14
 888 0036 FB68     		ldr	r3, [r7, #12]
 889 0038 1B68     		ldr	r3, [r3]
 890 003a 1A68     		ldr	r2, [r3]
 891 003c BB68     		ldr	r3, [r7, #8]
 892 003e 1340     		ands	r3, r3, r2
 893              		.loc 1 991 11
 894 0040 BA68     		ldr	r2, [r7, #8]
 895 0042 9A42     		cmp	r2, r3
 896 0044 0BD0     		beq	.L43
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         {
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           /* Update ADC state machine to timeout */
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 34


 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 897              		.loc 1 994 11
 898 0046 FB68     		ldr	r3, [r7, #12]
 899 0048 1B6C     		ldr	r3, [r3, #64]
 900 004a 43F00402 		orr	r2, r3, #4
 901 004e FB68     		ldr	r3, [r7, #12]
 902 0050 1A64     		str	r2, [r3, #64]
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           /* Process unlocked */
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           __HAL_UNLOCK(hadc);
 903              		.loc 1 997 11
 904 0052 FB68     		ldr	r3, [r7, #12]
 905 0054 0022     		movs	r2, #0
 906 0056 83F83C20 		strb	r2, [r3, #60]
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           return HAL_TIMEOUT;
 907              		.loc 1 999 18
 908 005a 0323     		movs	r3, #3
 909 005c 28E0     		b	.L46
 910              	.L43:
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 911              		.loc 1 983 11
 912 005e FB68     		ldr	r3, [r7, #12]
 913 0060 1B68     		ldr	r3, [r3]
 914 0062 1A68     		ldr	r2, [r3]
 915 0064 BB68     		ldr	r3, [r7, #8]
 916 0066 1340     		ands	r3, r3, r2
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 917              		.loc 1 983 9
 918 0068 BA68     		ldr	r2, [r7, #8]
 919 006a 9A42     		cmp	r2, r3
 920 006c D4D1     		bne	.L47
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         }
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Analog watchdog (level out of window) event */
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(EventType == ADC_AWD_EVENT)
 921              		.loc 1 1006 5
 922 006e BB68     		ldr	r3, [r7, #8]
 923 0070 012B     		cmp	r3, #1
 924 0072 0BD1     		bne	.L48
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 925              		.loc 1 1009 5
 926 0074 FB68     		ldr	r3, [r7, #12]
 927 0076 1B6C     		ldr	r3, [r3, #64]
 928 0078 43F48032 		orr	r2, r3, #65536
 929 007c FB68     		ldr	r3, [r7, #12]
 930 007e 1A64     		str	r2, [r3, #64]
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
 931              		.loc 1 1012 5
 932 0080 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 35


 933 0082 1B68     		ldr	r3, [r3]
 934 0084 6FF00102 		mvn	r2, #1
 935 0088 1A60     		str	r2, [r3]
 936 008a 10E0     		b	.L49
 937              	.L48:
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Overrun event */
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
 938              		.loc 1 1018 5
 939 008c FB68     		ldr	r3, [r7, #12]
 940 008e 1B6C     		ldr	r3, [r3, #64]
 941 0090 43F48062 		orr	r2, r3, #1024
 942 0094 FB68     		ldr	r3, [r7, #12]
 943 0096 1A64     		str	r2, [r3, #64]
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC error code to overrun */
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
 944              		.loc 1 1020 5
 945 0098 FB68     		ldr	r3, [r7, #12]
 946 009a 5B6C     		ldr	r3, [r3, #68]
 947 009c 43F00202 		orr	r2, r3, #2
 948 00a0 FB68     		ldr	r3, [r7, #12]
 949 00a2 5A64     		str	r2, [r3, #68]
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear ADC overrun flag */
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 950              		.loc 1 1023 5
 951 00a4 FB68     		ldr	r3, [r7, #12]
 952 00a6 1B68     		ldr	r3, [r3]
 953 00a8 6FF02002 		mvn	r2, #32
 954 00ac 1A60     		str	r2, [r3]
 955              	.L49:
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return ADC state */
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 956              		.loc 1 1027 10
 957 00ae 0023     		movs	r3, #0
 958              	.L46:
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 959              		.loc 1 1028 1
 960 00b0 1846     		mov	r0, r3
 961 00b2 1837     		adds	r7, r7, #24
 962              	.LCFI42:
 963              		.cfi_def_cfa_offset 8
 964 00b4 BD46     		mov	sp, r7
 965              	.LCFI43:
 966              		.cfi_def_cfa_register 13
 967              		@ sp needed
 968 00b6 80BD     		pop	{r7, pc}
 969              		.cfi_endproc
 970              	.LFE223:
 972              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 973              		.align	1
 974              		.global	HAL_ADC_Start_IT
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 36


 975              		.syntax unified
 976              		.thumb
 977              		.thumb_func
 979              	HAL_ADC_Start_IT:
 980              	.LFB224:
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Enables the interrupt and starts ADC conversion of regular channels.
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status.
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef* hadc)
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 981              		.loc 1 1038 1
 982              		.cfi_startproc
 983              		@ args = 0, pretend = 0, frame = 16
 984              		@ frame_needed = 1, uses_anonymous_args = 0
 985              		@ link register save eliminated.
 986 0000 80B4     		push	{r7}
 987              	.LCFI44:
 988              		.cfi_def_cfa_offset 4
 989              		.cfi_offset 7, -4
 990 0002 85B0     		sub	sp, sp, #20
 991              	.LCFI45:
 992              		.cfi_def_cfa_offset 24
 993 0004 00AF     		add	r7, sp, #0
 994              	.LCFI46:
 995              		.cfi_def_cfa_register 7
 996 0006 7860     		str	r0, [r7, #4]
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 997              		.loc 1 1039 17
 998 0008 0023     		movs	r3, #0
 999 000a BB60     		str	r3, [r7, #8]
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 1000              		.loc 1 1047 3
 1001 000c 7B68     		ldr	r3, [r7, #4]
 1002 000e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1003 0012 012B     		cmp	r3, #1
 1004 0014 01D1     		bne	.L51
 1005              		.loc 1 1047 3 is_stmt 0 discriminator 1
 1006 0016 0223     		movs	r3, #2
 1007              		.loc 1 1047 3
 1008 0018 A1E0     		b	.L52
 1009              	.L51:
 1010              		.loc 1 1047 3 discriminator 2
 1011 001a 7B68     		ldr	r3, [r7, #4]
 1012 001c 0122     		movs	r2, #1
 1013 001e 83F83C20 		strb	r2, [r3, #60]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 37


1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable the ADC peripheral */
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC peripheral is disabled in order to enable it and wait during 
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   Tstab time the ADC's stabilization */
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 1014              		.loc 1 1052 11 is_stmt 1
 1015 0022 7B68     		ldr	r3, [r7, #4]
 1016 0024 1B68     		ldr	r3, [r3]
 1017              		.loc 1 1052 21
 1018 0026 9B68     		ldr	r3, [r3, #8]
 1019              		.loc 1 1052 27
 1020 0028 03F00103 		and	r3, r3, #1
 1021              		.loc 1 1052 5
 1022 002c 012B     		cmp	r3, #1
 1023 002e 18D0     		beq	.L53
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {  
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the Peripheral */
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE(hadc);
 1024              		.loc 1 1055 5
 1025 0030 7B68     		ldr	r3, [r7, #4]
 1026 0032 1B68     		ldr	r3, [r3]
 1027 0034 9A68     		ldr	r2, [r3, #8]
 1028 0036 7B68     		ldr	r3, [r7, #4]
 1029 0038 1B68     		ldr	r3, [r3]
 1030 003a 42F00102 		orr	r2, r2, #1
 1031 003e 9A60     		str	r2, [r3, #8]
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Delay for ADC stabilization time */
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Compute number of CPU cycles to wait for */
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 1032              		.loc 1 1059 53
 1033 0040 4A4B     		ldr	r3, .L62
 1034 0042 1B68     		ldr	r3, [r3]
 1035 0044 4A4A     		ldr	r2, .L62+4
 1036 0046 A2FB0323 		umull	r2, r3, r2, r3
 1037 004a 9A0C     		lsrs	r2, r3, #18
 1038              		.loc 1 1059 34
 1039 004c 1346     		mov	r3, r2
 1040 004e 5B00     		lsls	r3, r3, #1
 1041 0050 1344     		add	r3, r3, r2
 1042              		.loc 1 1059 13
 1043 0052 BB60     		str	r3, [r7, #8]
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 1044              		.loc 1 1060 10
 1045 0054 02E0     		b	.L54
 1046              	.L55:
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       counter--;
 1047              		.loc 1 1062 14
 1048 0056 BB68     		ldr	r3, [r7, #8]
 1049 0058 013B     		subs	r3, r3, #1
 1050 005a BB60     		str	r3, [r7, #8]
 1051              	.L54:
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 1052              		.loc 1 1060 19
 1053 005c BB68     		ldr	r3, [r7, #8]
 1054 005e 002B     		cmp	r3, #0
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 38


 1055 0060 F9D1     		bne	.L55
 1056              	.L53:
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 1057              		.loc 1 1067 6
 1058 0062 7B68     		ldr	r3, [r7, #4]
 1059 0064 1B68     		ldr	r3, [r3]
 1060 0066 9B68     		ldr	r3, [r3, #8]
 1061 0068 03F00103 		and	r3, r3, #1
 1062              		.loc 1 1067 5
 1063 006c 012B     		cmp	r3, #1
 1064 006e 69D1     		bne	.L56
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state                                                          */
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Set state bitfield related to regular group operation                */
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 1065              		.loc 1 1072 5
 1066 0070 7B68     		ldr	r3, [r7, #4]
 1067 0072 1B6C     		ldr	r3, [r3, #64]
 1068 0074 23F4E063 		bic	r3, r3, #1792
 1069 0078 23F00103 		bic	r3, r3, #1
 1070 007c 43F48072 		orr	r2, r3, #256
 1071 0080 7B68     		ldr	r3, [r7, #4]
 1072 0082 1A64     		str	r2, [r3, #64]
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* If conversions on group regular are also triggering group injected,    */
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* update ADC state.                                                      */
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 1073              		.loc 1 1078 9
 1074 0084 7B68     		ldr	r3, [r7, #4]
 1075 0086 1B68     		ldr	r3, [r3]
 1076 0088 5B68     		ldr	r3, [r3, #4]
 1077 008a 03F48063 		and	r3, r3, #1024
 1078              		.loc 1 1078 8
 1079 008e 002B     		cmp	r3, #0
 1080 0090 07D0     		beq	.L57
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 1081              		.loc 1 1080 7
 1082 0092 7B68     		ldr	r3, [r7, #4]
 1083 0094 1B6C     		ldr	r3, [r3, #64]
 1084 0096 23F44053 		bic	r3, r3, #12288
 1085 009a 43F48052 		orr	r2, r3, #4096
 1086 009e 7B68     		ldr	r3, [r7, #4]
 1087 00a0 1A64     		str	r2, [r3, #64]
 1088              	.L57:
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 1089              		.loc 1 1084 9
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 39


 1090 00a2 7B68     		ldr	r3, [r7, #4]
 1091 00a4 1B6C     		ldr	r3, [r3, #64]
 1092 00a6 03F48053 		and	r3, r3, #4096
 1093              		.loc 1 1084 8
 1094 00aa B3F5805F 		cmp	r3, #4096
 1095 00ae 06D1     		bne	.L58
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 1096              		.loc 1 1087 7
 1097 00b0 7B68     		ldr	r3, [r7, #4]
 1098 00b2 5B6C     		ldr	r3, [r3, #68]
 1099 00b4 23F00602 		bic	r2, r3, #6
 1100 00b8 7B68     		ldr	r3, [r7, #4]
 1101 00ba 5A64     		str	r2, [r3, #68]
 1102 00bc 02E0     		b	.L59
 1103              	.L58:
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC all error code fields */
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 1104              		.loc 1 1092 7
 1105 00be 7B68     		ldr	r3, [r7, #4]
 1106 00c0 0022     		movs	r2, #0
 1107 00c2 5A64     		str	r2, [r3, #68]
 1108              	.L59:
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Process unlocked */
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 1109              		.loc 1 1098 5
 1110 00c4 7B68     		ldr	r3, [r7, #4]
 1111 00c6 0022     		movs	r2, #0
 1112 00c8 83F83C20 		strb	r2, [r3, #60]
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Pointer to the common control register to which is belonging hadc    */
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* control register)                                                    */
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 1113              		.loc 1 1103 19
 1114 00cc 294B     		ldr	r3, .L62+8
 1115 00ce FB60     		str	r3, [r7, #12]
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear regular group conversion flag and overrun flag */
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 1116              		.loc 1 1107 5
 1117 00d0 7B68     		ldr	r3, [r7, #4]
 1118 00d2 1B68     		ldr	r3, [r3]
 1119 00d4 6FF02202 		mvn	r2, #34
 1120 00d8 1A60     		str	r2, [r3]
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable end of conversion interrupt for regular group */
1110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_OVR));
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 40


 1121              		.loc 1 1110 5
 1122 00da 7B68     		ldr	r3, [r7, #4]
 1123 00dc 1B68     		ldr	r3, [r3]
 1124 00de 5B68     		ldr	r3, [r3, #4]
 1125 00e0 7A68     		ldr	r2, [r7, #4]
 1126 00e2 1268     		ldr	r2, [r2]
 1127 00e4 43F08063 		orr	r3, r3, #67108864
 1128 00e8 43F02003 		orr	r3, r3, #32
 1129 00ec 5360     		str	r3, [r2, #4]
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check if Multimode enabled */
1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 1130              		.loc 1 1113 8
 1131 00ee FB68     		ldr	r3, [r7, #12]
 1132 00f0 5B68     		ldr	r3, [r3, #4]
 1133 00f2 03F01F03 		and	r3, r3, #31
 1134              		.loc 1 1113 7
 1135 00f6 002B     		cmp	r3, #0
 1136 00f8 0FD1     		bne	.L60
1114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if defined(ADC2) && defined(ADC3)
1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) <
1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                                   || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) <
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* ADC2 || ADC3 */
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* if no external trigger present enable software conversion of regular channels */
1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 1137              		.loc 1 1121 17
 1138 00fa 7B68     		ldr	r3, [r7, #4]
 1139 00fc 1B68     		ldr	r3, [r3]
 1140              		.loc 1 1121 27
 1141 00fe 9B68     		ldr	r3, [r3, #8]
 1142              		.loc 1 1121 33
 1143 0100 03F04053 		and	r3, r3, #805306368
 1144              		.loc 1 1121 11
 1145 0104 002B     		cmp	r3, #0
 1146 0106 29D1     		bne	.L61
1122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         {
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           /* Enable the selected ADC software conversion for regular group */
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 1147              		.loc 1 1124 15
 1148 0108 7B68     		ldr	r3, [r7, #4]
 1149 010a 1B68     		ldr	r3, [r3]
 1150              		.loc 1 1124 25
 1151 010c 9A68     		ldr	r2, [r3, #8]
 1152              		.loc 1 1124 15
 1153 010e 7B68     		ldr	r3, [r7, #4]
 1154 0110 1B68     		ldr	r3, [r3]
 1155              		.loc 1 1124 31
 1156 0112 42F08042 		orr	r2, r2, #1073741824
 1157 0116 9A60     		str	r2, [r3, #8]
 1158 0118 20E0     		b	.L61
 1159              	.L60:
1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         }
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if defined(ADC2) && defined(ADC3)
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* ADC2 || ADC3 */
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 41


1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* if instance of handle correspond to ADC1 and  no external trigger present enable software 
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 1160              		.loc 1 1133 15
 1161 011a 7B68     		ldr	r3, [r7, #4]
 1162 011c 1B68     		ldr	r3, [r3]
 1163              		.loc 1 1133 9
 1164 011e 164A     		ldr	r2, .L62+12
 1165 0120 9342     		cmp	r3, r2
 1166 0122 1BD1     		bne	.L61
 1167              		.loc 1 1133 44 discriminator 1
 1168 0124 7B68     		ldr	r3, [r7, #4]
 1169 0126 1B68     		ldr	r3, [r3]
 1170              		.loc 1 1133 54 discriminator 1
 1171 0128 9B68     		ldr	r3, [r3, #8]
 1172              		.loc 1 1133 60 discriminator 1
 1173 012a 03F04053 		and	r3, r3, #805306368
 1174              		.loc 1 1133 35 discriminator 1
 1175 012e 002B     		cmp	r3, #0
 1176 0130 14D1     		bne	.L61
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 1177              		.loc 1 1136 15
 1178 0132 7B68     		ldr	r3, [r7, #4]
 1179 0134 1B68     		ldr	r3, [r3]
 1180              		.loc 1 1136 25
 1181 0136 9A68     		ldr	r2, [r3, #8]
 1182              		.loc 1 1136 15
 1183 0138 7B68     		ldr	r3, [r7, #4]
 1184 013a 1B68     		ldr	r3, [r3]
 1185              		.loc 1 1136 31
 1186 013c 42F08042 		orr	r2, r2, #1073741824
 1187 0140 9A60     		str	r2, [r3, #8]
 1188 0142 0BE0     		b	.L61
 1189              	.L56:
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update ADC state machine to error */
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 1190              		.loc 1 1143 5
 1191 0144 7B68     		ldr	r3, [r7, #4]
 1192 0146 1B6C     		ldr	r3, [r3, #64]
 1193 0148 43F01002 		orr	r2, r3, #16
 1194 014c 7B68     		ldr	r3, [r7, #4]
 1195 014e 1A64     		str	r2, [r3, #64]
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC error code to ADC IP internal error */
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 1196              		.loc 1 1146 5
 1197 0150 7B68     		ldr	r3, [r7, #4]
 1198 0152 5B6C     		ldr	r3, [r3, #68]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 42


 1199 0154 43F00102 		orr	r2, r3, #1
 1200 0158 7B68     		ldr	r3, [r7, #4]
 1201 015a 5A64     		str	r2, [r3, #68]
 1202              	.L61:
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 1203              		.loc 1 1150 10
 1204 015c 0023     		movs	r3, #0
 1205              	.L52:
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1206              		.loc 1 1151 1
 1207 015e 1846     		mov	r0, r3
 1208 0160 1437     		adds	r7, r7, #20
 1209              	.LCFI47:
 1210              		.cfi_def_cfa_offset 4
 1211 0162 BD46     		mov	sp, r7
 1212              	.LCFI48:
 1213              		.cfi_def_cfa_register 13
 1214              		@ sp needed
 1215 0164 5DF8047B 		ldr	r7, [sp], #4
 1216              	.LCFI49:
 1217              		.cfi_restore 7
 1218              		.cfi_def_cfa_offset 0
 1219 0168 7047     		bx	lr
 1220              	.L63:
 1221 016a 00BF     		.align	2
 1222              	.L62:
 1223 016c 00000000 		.word	SystemCoreClock
 1224 0170 83DE1B43 		.word	1125899907
 1225 0174 00230140 		.word	1073816320
 1226 0178 00200140 		.word	1073815552
 1227              		.cfi_endproc
 1228              	.LFE224:
 1230              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 1231              		.align	1
 1232              		.global	HAL_ADC_Stop_IT
 1233              		.syntax unified
 1234              		.thumb
 1235              		.thumb_func
 1237              	HAL_ADC_Stop_IT:
 1238              	.LFB225:
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Disables the interrupt and stop ADC conversion of regular channels.
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * 
1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   Caution: This function will stop also injected channels.  
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status.
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef* hadc)
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 1239              		.loc 1 1163 1
 1240              		.cfi_startproc
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 43


 1241              		@ args = 0, pretend = 0, frame = 8
 1242              		@ frame_needed = 1, uses_anonymous_args = 0
 1243              		@ link register save eliminated.
 1244 0000 80B4     		push	{r7}
 1245              	.LCFI50:
 1246              		.cfi_def_cfa_offset 4
 1247              		.cfi_offset 7, -4
 1248 0002 83B0     		sub	sp, sp, #12
 1249              	.LCFI51:
 1250              		.cfi_def_cfa_offset 16
 1251 0004 00AF     		add	r7, sp, #0
 1252              	.LCFI52:
 1253              		.cfi_def_cfa_register 7
 1254 0006 7860     		str	r0, [r7, #4]
1164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 1255              		.loc 1 1168 3
 1256 0008 7B68     		ldr	r3, [r7, #4]
 1257 000a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1258 000e 012B     		cmp	r3, #1
 1259 0010 01D1     		bne	.L65
 1260              		.loc 1 1168 3 is_stmt 0 discriminator 1
 1261 0012 0223     		movs	r3, #2
 1262              		.loc 1 1168 3
 1263 0014 2BE0     		b	.L66
 1264              	.L65:
 1265              		.loc 1 1168 3 discriminator 2
 1266 0016 7B68     		ldr	r3, [r7, #4]
 1267 0018 0122     		movs	r2, #1
 1268 001a 83F83C20 		strb	r2, [r3, #60]
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Disable ADC peripheral */
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
 1269              		.loc 1 1172 3 is_stmt 1
 1270 001e 7B68     		ldr	r3, [r7, #4]
 1271 0020 1B68     		ldr	r3, [r3]
 1272 0022 9A68     		ldr	r2, [r3, #8]
 1273 0024 7B68     		ldr	r3, [r7, #4]
 1274 0026 1B68     		ldr	r3, [r3]
 1275 0028 22F00102 		bic	r2, r2, #1
 1276 002c 9A60     		str	r2, [r3, #8]
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 1277              		.loc 1 1175 6
 1278 002e 7B68     		ldr	r3, [r7, #4]
 1279 0030 1B68     		ldr	r3, [r3]
 1280 0032 9B68     		ldr	r3, [r3, #8]
 1281 0034 03F00103 		and	r3, r3, #1
 1282              		.loc 1 1175 5
 1283 0038 002B     		cmp	r3, #0
 1284 003a 13D1     		bne	.L67
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 44


1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   	/* Disable ADC end of conversion interrupt for regular group */
1178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_OVR));
 1285              		.loc 1 1178 5
 1286 003c 7B68     		ldr	r3, [r7, #4]
 1287 003e 1B68     		ldr	r3, [r3]
 1288 0040 5B68     		ldr	r3, [r3, #4]
 1289 0042 7A68     		ldr	r2, [r7, #4]
 1290 0044 1268     		ldr	r2, [r2]
 1291 0046 23F08063 		bic	r3, r3, #67108864
 1292 004a 23F02003 		bic	r3, r3, #32
 1293 004e 5360     		str	r3, [r2, #4]
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 1294              		.loc 1 1181 5
 1295 0050 7B68     		ldr	r3, [r7, #4]
 1296 0052 1B6C     		ldr	r3, [r3, #64]
 1297 0054 23F48853 		bic	r3, r3, #4352
 1298 0058 23F00103 		bic	r3, r3, #1
 1299 005c 43F00102 		orr	r2, r3, #1
 1300 0060 7B68     		ldr	r3, [r7, #4]
 1301 0062 1A64     		str	r2, [r3, #64]
 1302              	.L67:
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
1184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 1303              		.loc 1 1187 3
 1304 0064 7B68     		ldr	r3, [r7, #4]
 1305 0066 0022     		movs	r2, #0
 1306 0068 83F83C20 		strb	r2, [r3, #60]
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 1307              		.loc 1 1190 10
 1308 006c 0023     		movs	r3, #0
 1309              	.L66:
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1310              		.loc 1 1191 1
 1311 006e 1846     		mov	r0, r3
 1312 0070 0C37     		adds	r7, r7, #12
 1313              	.LCFI53:
 1314              		.cfi_def_cfa_offset 4
 1315 0072 BD46     		mov	sp, r7
 1316              	.LCFI54:
 1317              		.cfi_def_cfa_register 13
 1318              		@ sp needed
 1319 0074 5DF8047B 		ldr	r7, [sp], #4
 1320              	.LCFI55:
 1321              		.cfi_restore 7
 1322              		.cfi_def_cfa_offset 0
 1323 0078 7047     		bx	lr
 1324              		.cfi_endproc
 1325              	.LFE225:
 1327              		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 45


 1328              		.align	1
 1329              		.global	HAL_ADC_IRQHandler
 1330              		.syntax unified
 1331              		.thumb
 1332              		.thumb_func
 1334              	HAL_ADC_IRQHandler:
 1335              	.LFB226:
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Handles ADC interrupt request  
1195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef* hadc)
1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 1336              		.loc 1 1200 1
 1337              		.cfi_startproc
 1338              		@ args = 0, pretend = 0, frame = 24
 1339              		@ frame_needed = 1, uses_anonymous_args = 0
 1340 0000 80B5     		push	{r7, lr}
 1341              	.LCFI56:
 1342              		.cfi_def_cfa_offset 8
 1343              		.cfi_offset 7, -8
 1344              		.cfi_offset 14, -4
 1345 0002 86B0     		sub	sp, sp, #24
 1346              	.LCFI57:
 1347              		.cfi_def_cfa_offset 32
 1348 0004 00AF     		add	r7, sp, #0
 1349              	.LCFI58:
 1350              		.cfi_def_cfa_register 7
 1351 0006 7860     		str	r0, [r7, #4]
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tmp1 = 0U, tmp2 = 0U;
 1352              		.loc 1 1201 12
 1353 0008 0023     		movs	r3, #0
 1354 000a 7B61     		str	r3, [r7, #20]
 1355              		.loc 1 1201 23
 1356 000c 0023     		movs	r3, #0
 1357 000e 3B61     		str	r3, [r7, #16]
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tmp_sr = hadc->Instance->SR;
 1358              		.loc 1 1203 25
 1359 0010 7B68     		ldr	r3, [r7, #4]
 1360 0012 1B68     		ldr	r3, [r3]
 1361              		.loc 1 1203 12
 1362 0014 1B68     		ldr	r3, [r3]
 1363 0016 FB60     		str	r3, [r7, #12]
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tmp_cr1 = hadc->Instance->CR1;
 1364              		.loc 1 1204 26
 1365 0018 7B68     		ldr	r3, [r7, #4]
 1366 001a 1B68     		ldr	r3, [r3]
 1367              		.loc 1 1204 12
 1368 001c 5B68     		ldr	r3, [r3, #4]
 1369 001e BB60     		str	r3, [r7, #8]
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 46


1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_LENGTH(hadc->Init.NbrOfConversion));
1209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EOCSelection(hadc->Init.EOCSelection));
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp1 = tmp_sr & ADC_FLAG_EOC;
 1370              		.loc 1 1211 8
 1371 0020 FB68     		ldr	r3, [r7, #12]
 1372 0022 03F00203 		and	r3, r3, #2
 1373 0026 7B61     		str	r3, [r7, #20]
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp2 = tmp_cr1 & ADC_IT_EOC;
 1374              		.loc 1 1212 8
 1375 0028 BB68     		ldr	r3, [r7, #8]
 1376 002a 03F02003 		and	r3, r3, #32
 1377 002e 3B61     		str	r3, [r7, #16]
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check End of conversion flag for regular channels */
1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(tmp1 && tmp2)
 1378              		.loc 1 1214 5
 1379 0030 7B69     		ldr	r3, [r7, #20]
 1380 0032 002B     		cmp	r3, #0
 1381 0034 49D0     		beq	.L69
 1382              		.loc 1 1214 11 discriminator 1
 1383 0036 3B69     		ldr	r3, [r7, #16]
 1384 0038 002B     		cmp	r3, #0
 1385 003a 46D0     		beq	.L69
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
1217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 1386              		.loc 1 1217 9
 1387 003c 7B68     		ldr	r3, [r7, #4]
 1388 003e 1B6C     		ldr	r3, [r3, #64]
 1389 0040 03F01003 		and	r3, r3, #16
 1390              		.loc 1 1217 8
 1391 0044 002B     		cmp	r3, #0
 1392 0046 05D1     		bne	.L70
1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
1220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC); 
 1393              		.loc 1 1220 7
 1394 0048 7B68     		ldr	r3, [r7, #4]
 1395 004a 1B6C     		ldr	r3, [r3, #64]
 1396 004c 43F40072 		orr	r2, r3, #512
 1397 0050 7B68     		ldr	r3, [r7, #4]
 1398 0052 1A64     		str	r2, [r3, #64]
 1399              	.L70:
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular   */
1224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going.      */
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Note: On STM32F4, there is no independent flag of end of sequence.   */
1226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       The test of scan sequence on going is done either with scan    */
1227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       sequence disabled or with end of conversion flag set to        */
1228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       of end of sequence.                                            */
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 1400              		.loc 1 1229 8
 1401 0054 7B68     		ldr	r3, [r7, #4]
 1402 0056 1B68     		ldr	r3, [r3]
 1403 0058 9B68     		ldr	r3, [r3, #8]
 1404 005a 03F04053 		and	r3, r3, #805306368
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 47


 1405              		.loc 1 1229 7
 1406 005e 002B     		cmp	r3, #0
 1407 0060 2BD1     		bne	.L71
1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 1408              		.loc 1 1230 19
 1409 0062 7B68     		ldr	r3, [r7, #4]
 1410 0064 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 1411              		.loc 1 1229 62 discriminator 1
 1412 0066 002B     		cmp	r3, #0
 1413 0068 27D1     		bne	.L71
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 1414              		.loc 1 1231 9
 1415 006a 7B68     		ldr	r3, [r7, #4]
 1416 006c 1B68     		ldr	r3, [r3]
 1417 006e DB6A     		ldr	r3, [r3, #44]
 1418 0070 03F47003 		and	r3, r3, #15728640
1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 1419              		.loc 1 1230 62
 1420 0074 002B     		cmp	r3, #0
 1421 0076 06D0     		beq	.L72
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 1422              		.loc 1 1232 9
 1423 0078 7B68     		ldr	r3, [r7, #4]
 1424 007a 1B68     		ldr	r3, [r3]
 1425 007c 9B68     		ldr	r3, [r3, #8]
 1426 007e 03F48063 		and	r3, r3, #1024
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 1427              		.loc 1 1231 58
 1428 0082 002B     		cmp	r3, #0
 1429 0084 19D1     		bne	.L71
 1430              	.L72:
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Disable ADC end of single conversion interrupt on group regular */
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Note: Overrun interrupt was enabled with EOC interrupt in          */
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* HAL_ADC_Start_IT(), but is not disabled here because can be used   */
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* by overrun IRQ process below.                                      */
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 1431              		.loc 1 1238 7
 1432 0086 7B68     		ldr	r3, [r7, #4]
 1433 0088 1B68     		ldr	r3, [r3]
 1434 008a 5A68     		ldr	r2, [r3, #4]
 1435 008c 7B68     		ldr	r3, [r7, #4]
 1436 008e 1B68     		ldr	r3, [r3]
 1437 0090 22F02002 		bic	r2, r2, #32
 1438 0094 5A60     		str	r2, [r3, #4]
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 1439              		.loc 1 1241 7
 1440 0096 7B68     		ldr	r3, [r7, #4]
 1441 0098 1B6C     		ldr	r3, [r3, #64]
 1442 009a 23F48072 		bic	r2, r3, #256
 1443 009e 7B68     		ldr	r3, [r7, #4]
 1444 00a0 1A64     		str	r2, [r3, #64]
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 48


 1445              		.loc 1 1243 11
 1446 00a2 7B68     		ldr	r3, [r7, #4]
 1447 00a4 1B6C     		ldr	r3, [r3, #64]
 1448 00a6 03F48053 		and	r3, r3, #4096
 1449              		.loc 1 1243 10
 1450 00aa 002B     		cmp	r3, #0
 1451 00ac 05D1     		bne	.L71
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 1452              		.loc 1 1245 9
 1453 00ae 7B68     		ldr	r3, [r7, #4]
 1454 00b0 1B6C     		ldr	r3, [r3, #64]
 1455 00b2 43F00102 		orr	r2, r3, #1
 1456 00b6 7B68     		ldr	r3, [r7, #4]
 1457 00b8 1A64     		str	r2, [r3, #64]
 1458              	.L71:
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Conversion complete callback */
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
 1459              		.loc 1 1253 5
 1460 00ba 7868     		ldr	r0, [r7, #4]
 1461 00bc FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear regular group conversion flag */
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 1462              		.loc 1 1257 5
 1463 00c0 7B68     		ldr	r3, [r7, #4]
 1464 00c2 1B68     		ldr	r3, [r3]
 1465 00c4 6FF01202 		mvn	r2, #18
 1466 00c8 1A60     		str	r2, [r3]
 1467              	.L69:
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp1 = tmp_sr & ADC_FLAG_JEOC;
 1468              		.loc 1 1260 8
 1469 00ca FB68     		ldr	r3, [r7, #12]
 1470 00cc 03F00403 		and	r3, r3, #4
 1471 00d0 7B61     		str	r3, [r7, #20]
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp2 = tmp_cr1 & ADC_IT_JEOC;
 1472              		.loc 1 1261 8
 1473 00d2 BB68     		ldr	r3, [r7, #8]
 1474 00d4 03F08003 		and	r3, r3, #128
 1475 00d8 3B61     		str	r3, [r7, #16]
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check End of conversion flag for injected channels */
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(tmp1 && tmp2)
 1476              		.loc 1 1263 5
 1477 00da 7B69     		ldr	r3, [r7, #20]
 1478 00dc 002B     		cmp	r3, #0
 1479 00de 57D0     		beq	.L73
 1480              		.loc 1 1263 11 discriminator 1
 1481 00e0 3B69     		ldr	r3, [r7, #16]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 49


 1482 00e2 002B     		cmp	r3, #0
 1483 00e4 54D0     		beq	.L73
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 1484              		.loc 1 1266 9
 1485 00e6 7B68     		ldr	r3, [r7, #4]
 1486 00e8 1B6C     		ldr	r3, [r3, #64]
 1487 00ea 03F01003 		and	r3, r3, #16
 1488              		.loc 1 1266 8
 1489 00ee 002B     		cmp	r3, #0
 1490 00f0 05D1     		bne	.L74
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
 1491              		.loc 1 1269 7
 1492 00f2 7B68     		ldr	r3, [r7, #4]
 1493 00f4 1B6C     		ldr	r3, [r3, #64]
 1494 00f6 43F40052 		orr	r2, r3, #8192
 1495 00fa 7B68     		ldr	r3, [r7, #4]
 1496 00fc 1A64     		str	r2, [r3, #64]
 1497              	.L74:
1270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group injected  */
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* by external trigger, scan sequence on going or by automatic injected */
1274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* conversion from group regular (same conditions as group regular      */
1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* interruption disabling above).                                       */
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_INJECTED(hadc)                    &&
 1498              		.loc 1 1276 8
 1499 00fe 7B68     		ldr	r3, [r7, #4]
 1500 0100 1B68     		ldr	r3, [r3]
 1501 0102 9B68     		ldr	r3, [r3, #8]
 1502 0104 03F44013 		and	r3, r3, #3145728
 1503              		.loc 1 1276 7
 1504 0108 002B     		cmp	r3, #0
 1505 010a 39D1     		bne	.L75
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 1506              		.loc 1 1277 9
 1507 010c 7B68     		ldr	r3, [r7, #4]
 1508 010e 1B68     		ldr	r3, [r3]
 1509 0110 9B6B     		ldr	r3, [r3, #56]
 1510 0112 03F44013 		and	r3, r3, #3145728
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 1511              		.loc 1 1276 64 discriminator 1
 1512 0116 002B     		cmp	r3, #0
 1513 0118 06D0     		beq	.L76
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)    ) &&
 1514              		.loc 1 1278 9
 1515 011a 7B68     		ldr	r3, [r7, #4]
 1516 011c 1B68     		ldr	r3, [r3]
 1517 011e 9B68     		ldr	r3, [r3, #8]
 1518 0120 03F48063 		and	r3, r3, #1024
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 1519              		.loc 1 1277 60
 1520 0124 002B     		cmp	r3, #0
 1521 0126 2BD1     		bne	.L75
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 50


 1522              	.L76:
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 1523              		.loc 1 1279 9
 1524 0128 7B68     		ldr	r3, [r7, #4]
 1525 012a 1B68     		ldr	r3, [r3]
 1526 012c 5B68     		ldr	r3, [r3, #4]
 1527 012e 03F48063 		and	r3, r3, #1024
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)    ) &&
 1528              		.loc 1 1278 64
 1529 0132 002B     		cmp	r3, #0
 1530 0134 24D1     		bne	.L75
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
 1531              		.loc 1 1280 10
 1532 0136 7B68     		ldr	r3, [r7, #4]
 1533 0138 1B68     		ldr	r3, [r3]
 1534 013a 9B68     		ldr	r3, [r3, #8]
 1535 013c 03F04053 		and	r3, r3, #805306368
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 1536              		.loc 1 1279 60
 1537 0140 002B     		cmp	r3, #0
 1538 0142 1DD1     		bne	.L75
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (hadc->Init.ContinuousConvMode == DISABLE)   )       )   )
 1539              		.loc 1 1281 20
 1540 0144 7B68     		ldr	r3, [r7, #4]
 1541 0146 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
 1542              		.loc 1 1280 52
 1543 0148 002B     		cmp	r3, #0
 1544 014a 19D1     		bne	.L75
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Disable ADC end of single conversion interrupt on group injected */
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
 1545              		.loc 1 1284 7
 1546 014c 7B68     		ldr	r3, [r7, #4]
 1547 014e 1B68     		ldr	r3, [r3]
 1548 0150 5A68     		ldr	r2, [r3, #4]
 1549 0152 7B68     		ldr	r3, [r7, #4]
 1550 0154 1B68     		ldr	r3, [r3]
 1551 0156 22F08002 		bic	r2, r2, #128
 1552 015a 5A60     		str	r2, [r3, #4]
1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
1287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);   
 1553              		.loc 1 1287 7
 1554 015c 7B68     		ldr	r3, [r7, #4]
 1555 015e 1B6C     		ldr	r3, [r3, #64]
 1556 0160 23F48052 		bic	r2, r3, #4096
 1557 0164 7B68     		ldr	r3, [r7, #4]
 1558 0166 1A64     		str	r2, [r3, #64]
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
 1559              		.loc 1 1289 11
 1560 0168 7B68     		ldr	r3, [r7, #4]
 1561 016a 1B6C     		ldr	r3, [r3, #64]
 1562 016c 03F48073 		and	r3, r3, #256
 1563              		.loc 1 1289 10
 1564 0170 002B     		cmp	r3, #0
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 51


 1565 0172 05D1     		bne	.L75
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       { 
1291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 1566              		.loc 1 1291 9
 1567 0174 7B68     		ldr	r3, [r7, #4]
 1568 0176 1B6C     		ldr	r3, [r3, #64]
 1569 0178 43F00102 		orr	r2, r3, #1
 1570 017c 7B68     		ldr	r3, [r7, #4]
 1571 017e 1A64     		str	r2, [r3, #64]
 1572              	.L75:
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Conversion complete callback */ 
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Conversion complete callback */ 
1297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       hadc->InjectedConvCpltCallback(hadc);
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
1300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_ADCEx_InjectedConvCpltCallback(hadc);
 1573              		.loc 1 1300 7
 1574 0180 7868     		ldr	r0, [r7, #4]
 1575 0182 FFF7FEFF 		bl	HAL_ADCEx_InjectedConvCpltCallback
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear injected group conversion flag */
1304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JSTRT | ADC_FLAG_JEOC));
 1576              		.loc 1 1304 5
 1577 0186 7B68     		ldr	r3, [r7, #4]
 1578 0188 1B68     		ldr	r3, [r3]
 1579 018a 6FF00C02 		mvn	r2, #12
 1580 018e 1A60     		str	r2, [r3]
 1581              	.L73:
1305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp1 = tmp_sr & ADC_FLAG_AWD;
 1582              		.loc 1 1307 8
 1583 0190 FB68     		ldr	r3, [r7, #12]
 1584 0192 03F00103 		and	r3, r3, #1
 1585 0196 7B61     		str	r3, [r7, #20]
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp2 = tmp_cr1 & ADC_IT_AWD;
 1586              		.loc 1 1308 8
 1587 0198 BB68     		ldr	r3, [r7, #8]
 1588 019a 03F04003 		and	r3, r3, #64
 1589 019e 3B61     		str	r3, [r7, #16]
1309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check Analog watchdog flag */
1310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(tmp1 && tmp2)
 1590              		.loc 1 1310 5
 1591 01a0 7B69     		ldr	r3, [r7, #20]
 1592 01a2 002B     		cmp	r3, #0
 1593 01a4 17D0     		beq	.L77
 1594              		.loc 1 1310 11 discriminator 1
 1595 01a6 3B69     		ldr	r3, [r7, #16]
 1596 01a8 002B     		cmp	r3, #0
 1597 01aa 14D0     		beq	.L77
1311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD))
 1598              		.loc 1 1312 8
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 52


 1599 01ac 7B68     		ldr	r3, [r7, #4]
 1600 01ae 1B68     		ldr	r3, [r3]
 1601 01b0 1B68     		ldr	r3, [r3]
 1602 01b2 03F00103 		and	r3, r3, #1
 1603              		.loc 1 1312 7
 1604 01b6 012B     		cmp	r3, #1
 1605 01b8 0DD1     		bne	.L77
1313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
1315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 1606              		.loc 1 1315 7
 1607 01ba 7B68     		ldr	r3, [r7, #4]
 1608 01bc 1B6C     		ldr	r3, [r3, #64]
 1609 01be 43F48032 		orr	r2, r3, #65536
 1610 01c2 7B68     		ldr	r3, [r7, #4]
 1611 01c4 1A64     		str	r2, [r3, #64]
1316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Level out of window callback */
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       hadc->LevelOutOfWindowCallback(hadc);
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
1321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_ADC_LevelOutOfWindowCallback(hadc);
 1612              		.loc 1 1321 7
 1613 01c6 7868     		ldr	r0, [r7, #4]
 1614 01c8 FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
1322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Clear the ADC analog watchdog flag */
1325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
 1615              		.loc 1 1325 7
 1616 01cc 7B68     		ldr	r3, [r7, #4]
 1617 01ce 1B68     		ldr	r3, [r3]
 1618 01d0 6FF00102 		mvn	r2, #1
 1619 01d4 1A60     		str	r2, [r3]
 1620              	.L77:
1326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp1 = tmp_sr & ADC_FLAG_OVR;
 1621              		.loc 1 1329 8
 1622 01d6 FB68     		ldr	r3, [r7, #12]
 1623 01d8 03F02003 		and	r3, r3, #32
 1624 01dc 7B61     		str	r3, [r7, #20]
1330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp2 = tmp_cr1 & ADC_IT_OVR;
 1625              		.loc 1 1330 8
 1626 01de BB68     		ldr	r3, [r7, #8]
 1627 01e0 03F08063 		and	r3, r3, #67108864
 1628 01e4 3B61     		str	r3, [r7, #16]
1331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check Overrun flag */
1332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(tmp1 && tmp2)
 1629              		.loc 1 1332 5
 1630 01e6 7B69     		ldr	r3, [r7, #20]
 1631 01e8 002B     		cmp	r3, #0
 1632 01ea 15D0     		beq	.L79
 1633              		.loc 1 1332 11 discriminator 1
 1634 01ec 3B69     		ldr	r3, [r7, #16]
 1635 01ee 002B     		cmp	r3, #0
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 53


 1636 01f0 12D0     		beq	.L79
1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Note: On STM32F4, ADC overrun can be set through other parameters    */
1335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       refer to description of parameter "EOCSelection" for more      */
1336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       details.                                                       */
1337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC error code to overrun */
1339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
 1637              		.loc 1 1339 5
 1638 01f2 7B68     		ldr	r3, [r7, #4]
 1639 01f4 5B6C     		ldr	r3, [r3, #68]
 1640 01f6 43F00202 		orr	r2, r3, #2
 1641 01fa 7B68     		ldr	r3, [r7, #4]
 1642 01fc 5A64     		str	r2, [r3, #68]
1340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear ADC overrun flag */
1342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 1643              		.loc 1 1342 5
 1644 01fe 7B68     		ldr	r3, [r7, #4]
 1645 0200 1B68     		ldr	r3, [r3]
 1646 0202 6FF02002 		mvn	r2, #32
 1647 0206 1A60     		str	r2, [r3]
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Error callback */ 
1345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
1347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
1348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
 1648              		.loc 1 1348 7
 1649 0208 7868     		ldr	r0, [r7, #4]
 1650 020a FFF7FEFF 		bl	HAL_ADC_ErrorCallback
1349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the Overrun flag */
1352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 1651              		.loc 1 1352 5
 1652 020e 7B68     		ldr	r3, [r7, #4]
 1653 0210 1B68     		ldr	r3, [r3]
 1654 0212 6FF02002 		mvn	r2, #32
 1655 0216 1A60     		str	r2, [r3]
 1656              	.L79:
1353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1657              		.loc 1 1354 1
 1658 0218 00BF     		nop
 1659 021a 1837     		adds	r7, r7, #24
 1660              	.LCFI59:
 1661              		.cfi_def_cfa_offset 8
 1662 021c BD46     		mov	sp, r7
 1663              	.LCFI60:
 1664              		.cfi_def_cfa_register 13
 1665              		@ sp needed
 1666 021e 80BD     		pop	{r7, pc}
 1667              		.cfi_endproc
 1668              	.LFE226:
 1670              		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 1671              		.align	1
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 54


 1672              		.global	HAL_ADC_Start_DMA
 1673              		.syntax unified
 1674              		.thumb
 1675              		.thumb_func
 1677              	HAL_ADC_Start_DMA:
 1678              	.LFB227:
1355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Enables ADC DMA request after last transfer (Single-ADC mode) and enables ADC periphera
1358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  pData The destination Buffer address.
1361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  Length The length of data to be transferred from ADC peripheral to memory.
1362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
1363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t Length)
1365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 1679              		.loc 1 1365 1
 1680              		.cfi_startproc
 1681              		@ args = 0, pretend = 0, frame = 24
 1682              		@ frame_needed = 1, uses_anonymous_args = 0
 1683 0000 80B5     		push	{r7, lr}
 1684              	.LCFI61:
 1685              		.cfi_def_cfa_offset 8
 1686              		.cfi_offset 7, -8
 1687              		.cfi_offset 14, -4
 1688 0002 86B0     		sub	sp, sp, #24
 1689              	.LCFI62:
 1690              		.cfi_def_cfa_offset 32
 1691 0004 00AF     		add	r7, sp, #0
 1692              	.LCFI63:
 1693              		.cfi_def_cfa_register 7
 1694 0006 F860     		str	r0, [r7, #12]
 1695 0008 B960     		str	r1, [r7, #8]
 1696 000a 7A60     		str	r2, [r7, #4]
1366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 1697              		.loc 1 1366 17
 1698 000c 0023     		movs	r3, #0
 1699 000e 3B61     		str	r3, [r7, #16]
1367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
1368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
1371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 1700              		.loc 1 1374 3
 1701 0010 FB68     		ldr	r3, [r7, #12]
 1702 0012 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1703 0016 012B     		cmp	r3, #1
 1704 0018 01D1     		bne	.L81
 1705              		.loc 1 1374 3 is_stmt 0 discriminator 1
 1706 001a 0223     		movs	r3, #2
 1707              		.loc 1 1374 3
 1708 001c CEE0     		b	.L82
 1709              	.L81:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 55


 1710              		.loc 1 1374 3 discriminator 2
 1711 001e FB68     		ldr	r3, [r7, #12]
 1712 0020 0122     		movs	r2, #1
 1713 0022 83F83C20 		strb	r2, [r3, #60]
1375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable the ADC peripheral */
1377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC peripheral is disabled in order to enable it and wait during 
1378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   Tstab time the ADC's stabilization */
1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 1714              		.loc 1 1379 11 is_stmt 1
 1715 0026 FB68     		ldr	r3, [r7, #12]
 1716 0028 1B68     		ldr	r3, [r3]
 1717              		.loc 1 1379 21
 1718 002a 9B68     		ldr	r3, [r3, #8]
 1719              		.loc 1 1379 27
 1720 002c 03F00103 		and	r3, r3, #1
 1721              		.loc 1 1379 5
 1722 0030 012B     		cmp	r3, #1
 1723 0032 18D0     		beq	.L83
1380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {  
1381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the Peripheral */
1382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE(hadc);
 1724              		.loc 1 1382 5
 1725 0034 FB68     		ldr	r3, [r7, #12]
 1726 0036 1B68     		ldr	r3, [r3]
 1727 0038 9A68     		ldr	r2, [r3, #8]
 1728 003a FB68     		ldr	r3, [r7, #12]
 1729 003c 1B68     		ldr	r3, [r3]
 1730 003e 42F00102 		orr	r2, r2, #1
 1731 0042 9A60     		str	r2, [r3, #8]
1383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Delay for ADC stabilization time */
1385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Compute number of CPU cycles to wait for */
1386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 1732              		.loc 1 1386 53
 1733 0044 5F4B     		ldr	r3, .L93
 1734 0046 1B68     		ldr	r3, [r3]
 1735 0048 5F4A     		ldr	r2, .L93+4
 1736 004a A2FB0323 		umull	r2, r3, r2, r3
 1737 004e 9A0C     		lsrs	r2, r3, #18
 1738              		.loc 1 1386 34
 1739 0050 1346     		mov	r3, r2
 1740 0052 5B00     		lsls	r3, r3, #1
 1741 0054 1344     		add	r3, r3, r2
 1742              		.loc 1 1386 13
 1743 0056 3B61     		str	r3, [r7, #16]
1387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 1744              		.loc 1 1387 10
 1745 0058 02E0     		b	.L84
 1746              	.L85:
1388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       counter--;
 1747              		.loc 1 1389 14
 1748 005a 3B69     		ldr	r3, [r7, #16]
 1749 005c 013B     		subs	r3, r3, #1
 1750 005e 3B61     		str	r3, [r7, #16]
 1751              	.L84:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 56


1387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 1752              		.loc 1 1387 19
 1753 0060 3B69     		ldr	r3, [r7, #16]
 1754 0062 002B     		cmp	r3, #0
 1755 0064 F9D1     		bne	.L85
 1756              	.L83:
1390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check ADC DMA Mode                                                     */
1394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* - disable the DMA Mode if it is already enabled                        */
1395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if((hadc->Instance->CR2 & ADC_CR2_DMA) == ADC_CR2_DMA)
 1757              		.loc 1 1395 11
 1758 0066 FB68     		ldr	r3, [r7, #12]
 1759 0068 1B68     		ldr	r3, [r3]
 1760              		.loc 1 1395 21
 1761 006a 9B68     		ldr	r3, [r3, #8]
 1762              		.loc 1 1395 27
 1763 006c 03F48073 		and	r3, r3, #256
 1764              		.loc 1 1395 5
 1765 0070 B3F5807F 		cmp	r3, #256
 1766 0074 07D1     		bne	.L86
1396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CR2, ADC_CR2_DMA);
 1767              		.loc 1 1397 5
 1768 0076 FB68     		ldr	r3, [r7, #12]
 1769 0078 1B68     		ldr	r3, [r3]
 1770 007a 9A68     		ldr	r2, [r3, #8]
 1771 007c FB68     		ldr	r3, [r7, #12]
 1772 007e 1B68     		ldr	r3, [r3]
 1773 0080 22F48072 		bic	r2, r2, #256
 1774 0084 9A60     		str	r2, [r3, #8]
 1775              	.L86:
1398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
1401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 1776              		.loc 1 1401 6
 1777 0086 FB68     		ldr	r3, [r7, #12]
 1778 0088 1B68     		ldr	r3, [r3]
 1779 008a 9B68     		ldr	r3, [r3, #8]
 1780 008c 03F00103 		and	r3, r3, #1
 1781              		.loc 1 1401 5
 1782 0090 012B     		cmp	r3, #1
 1783 0092 40F08680 		bne	.L87
1402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state                                                          */
1404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
1405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Set state bitfield related to regular group operation                */
1406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 1784              		.loc 1 1406 5
 1785 0096 FB68     		ldr	r3, [r7, #12]
 1786 0098 1B6C     		ldr	r3, [r3, #64]
 1787 009a 23F4E063 		bic	r3, r3, #1792
 1788 009e 23F00103 		bic	r3, r3, #1
 1789 00a2 43F48072 		orr	r2, r3, #256
 1790 00a6 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 57


 1791 00a8 1A64     		str	r2, [r3, #64]
1407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
1408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
1409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* If conversions on group regular are also triggering group injected,    */
1411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* update ADC state.                                                      */
1412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 1792              		.loc 1 1412 9
 1793 00aa FB68     		ldr	r3, [r7, #12]
 1794 00ac 1B68     		ldr	r3, [r3]
 1795 00ae 5B68     		ldr	r3, [r3, #4]
 1796 00b0 03F48063 		and	r3, r3, #1024
 1797              		.loc 1 1412 8
 1798 00b4 002B     		cmp	r3, #0
 1799 00b6 07D0     		beq	.L88
1413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 1800              		.loc 1 1414 7
 1801 00b8 FB68     		ldr	r3, [r7, #12]
 1802 00ba 1B6C     		ldr	r3, [r3, #64]
 1803 00bc 23F44053 		bic	r3, r3, #12288
 1804 00c0 43F48052 		orr	r2, r3, #4096
 1805 00c4 FB68     		ldr	r3, [r7, #12]
 1806 00c6 1A64     		str	r2, [r3, #64]
 1807              	.L88:
1415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
1418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 1808              		.loc 1 1418 9
 1809 00c8 FB68     		ldr	r3, [r7, #12]
 1810 00ca 1B6C     		ldr	r3, [r3, #64]
 1811 00cc 03F48053 		and	r3, r3, #4096
 1812              		.loc 1 1418 8
 1813 00d0 B3F5805F 		cmp	r3, #4096
 1814 00d4 06D1     		bne	.L89
1419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
1421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 1815              		.loc 1 1421 7
 1816 00d6 FB68     		ldr	r3, [r7, #12]
 1817 00d8 5B6C     		ldr	r3, [r3, #68]
 1818 00da 23F00602 		bic	r2, r3, #6
 1819 00de FB68     		ldr	r3, [r7, #12]
 1820 00e0 5A64     		str	r2, [r3, #68]
 1821 00e2 02E0     		b	.L90
 1822              	.L89:
1422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
1424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC all error code fields */
1426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 1823              		.loc 1 1426 7
 1824 00e4 FB68     		ldr	r3, [r7, #12]
 1825 00e6 0022     		movs	r2, #0
 1826 00e8 5A64     		str	r2, [r3, #68]
 1827              	.L90:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 58


1427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Process unlocked */
1430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
1431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
1432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_UNLOCK(hadc);   
 1828              		.loc 1 1432 5
 1829 00ea FB68     		ldr	r3, [r7, #12]
 1830 00ec 0022     		movs	r2, #0
 1831 00ee 83F83C20 		strb	r2, [r3, #60]
1433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Pointer to the common control register to which is belonging hadc    */
1435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
1436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* control register)                                                    */
1437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 1832              		.loc 1 1437 19
 1833 00f2 364B     		ldr	r3, .L93+8
 1834 00f4 7B61     		str	r3, [r7, #20]
1438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the DMA transfer complete callback */
1440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 1835              		.loc 1 1440 9
 1836 00f6 FB68     		ldr	r3, [r7, #12]
 1837 00f8 9B6B     		ldr	r3, [r3, #56]
 1838              		.loc 1 1440 40
 1839 00fa 354A     		ldr	r2, .L93+12
 1840 00fc DA63     		str	r2, [r3, #60]
1441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the DMA half transfer complete callback */
1443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 1841              		.loc 1 1443 9
 1842 00fe FB68     		ldr	r3, [r7, #12]
 1843 0100 9B6B     		ldr	r3, [r3, #56]
 1844              		.loc 1 1443 44
 1845 0102 344A     		ldr	r2, .L93+16
 1846 0104 1A64     		str	r2, [r3, #64]
1444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the DMA error callback */
1446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
 1847              		.loc 1 1446 9
 1848 0106 FB68     		ldr	r3, [r7, #12]
 1849 0108 9B6B     		ldr	r3, [r3, #56]
 1850              		.loc 1 1446 41
 1851 010a 334A     		ldr	r2, .L93+20
 1852 010c DA64     		str	r2, [r3, #76]
1447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC     */
1450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* start (in case of SW start):                                           */
1451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear regular group conversion flag and overrun flag */
1453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
1454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 1853              		.loc 1 1454 5
 1854 010e FB68     		ldr	r3, [r7, #12]
 1855 0110 1B68     		ldr	r3, [r3]
 1856 0112 6FF02202 		mvn	r2, #34
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 59


 1857 0116 1A60     		str	r2, [r3]
1455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable ADC overrun interrupt */
1457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
 1858              		.loc 1 1457 5
 1859 0118 FB68     		ldr	r3, [r7, #12]
 1860 011a 1B68     		ldr	r3, [r3]
 1861 011c 5A68     		ldr	r2, [r3, #4]
 1862 011e FB68     		ldr	r3, [r7, #12]
 1863 0120 1B68     		ldr	r3, [r3]
 1864 0122 42F08062 		orr	r2, r2, #67108864
 1865 0126 5A60     		str	r2, [r3, #4]
1458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable ADC DMA mode */
1460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 |= ADC_CR2_DMA;
 1866              		.loc 1 1460 9
 1867 0128 FB68     		ldr	r3, [r7, #12]
 1868 012a 1B68     		ldr	r3, [r3]
 1869              		.loc 1 1460 19
 1870 012c 9A68     		ldr	r2, [r3, #8]
 1871              		.loc 1 1460 9
 1872 012e FB68     		ldr	r3, [r7, #12]
 1873 0130 1B68     		ldr	r3, [r3]
 1874              		.loc 1 1460 25
 1875 0132 42F48072 		orr	r2, r2, #256
 1876 0136 9A60     		str	r2, [r3, #8]
1461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Start the DMA channel */
1463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
 1877              		.loc 1 1463 5
 1878 0138 FB68     		ldr	r3, [r7, #12]
 1879 013a 986B     		ldr	r0, [r3, #56]
 1880              		.loc 1 1463 55
 1881 013c FB68     		ldr	r3, [r7, #12]
 1882 013e 1B68     		ldr	r3, [r3]
 1883              		.loc 1 1463 50
 1884 0140 4C33     		adds	r3, r3, #76
 1885              		.loc 1 1463 5
 1886 0142 1946     		mov	r1, r3
 1887 0144 BA68     		ldr	r2, [r7, #8]
 1888 0146 7B68     		ldr	r3, [r7, #4]
 1889 0148 FFF7FEFF 		bl	HAL_DMA_Start_IT
1464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check if Multimode enabled */
1466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 1890              		.loc 1 1466 8
 1891 014c 7B69     		ldr	r3, [r7, #20]
 1892 014e 5B68     		ldr	r3, [r3, #4]
 1893 0150 03F01F03 		and	r3, r3, #31
 1894              		.loc 1 1466 7
 1895 0154 002B     		cmp	r3, #0
 1896 0156 0FD1     		bne	.L91
1467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if defined(ADC2) && defined(ADC3)
1469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) <
1470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                                   || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) <
1471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 60


1472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* ADC2 || ADC3 */
1473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* if no external trigger present enable software conversion of regular channels */
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 1897              		.loc 1 1474 17
 1898 0158 FB68     		ldr	r3, [r7, #12]
 1899 015a 1B68     		ldr	r3, [r3]
 1900              		.loc 1 1474 27
 1901 015c 9B68     		ldr	r3, [r3, #8]
 1902              		.loc 1 1474 33
 1903 015e 03F04053 		and	r3, r3, #805306368
 1904              		.loc 1 1474 11
 1905 0162 002B     		cmp	r3, #0
 1906 0164 29D1     		bne	.L92
1475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         {
1476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           /* Enable the selected ADC software conversion for regular group */
1477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 1907              		.loc 1 1477 15
 1908 0166 FB68     		ldr	r3, [r7, #12]
 1909 0168 1B68     		ldr	r3, [r3]
 1910              		.loc 1 1477 25
 1911 016a 9A68     		ldr	r2, [r3, #8]
 1912              		.loc 1 1477 15
 1913 016c FB68     		ldr	r3, [r7, #12]
 1914 016e 1B68     		ldr	r3, [r3]
 1915              		.loc 1 1477 31
 1916 0170 42F08042 		orr	r2, r2, #1073741824
 1917 0174 9A60     		str	r2, [r3, #8]
 1918 0176 20E0     		b	.L92
 1919              	.L91:
1478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         }
1479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if defined(ADC2) && defined(ADC3)
1480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* ADC2 || ADC3 */
1482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
1484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* if instance of handle correspond to ADC1 and  no external trigger present enable software 
1486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 1920              		.loc 1 1486 15
 1921 0178 FB68     		ldr	r3, [r7, #12]
 1922 017a 1B68     		ldr	r3, [r3]
 1923              		.loc 1 1486 9
 1924 017c 174A     		ldr	r2, .L93+24
 1925 017e 9342     		cmp	r3, r2
 1926 0180 1BD1     		bne	.L92
 1927              		.loc 1 1486 44 discriminator 1
 1928 0182 FB68     		ldr	r3, [r7, #12]
 1929 0184 1B68     		ldr	r3, [r3]
 1930              		.loc 1 1486 54 discriminator 1
 1931 0186 9B68     		ldr	r3, [r3, #8]
 1932              		.loc 1 1486 60 discriminator 1
 1933 0188 03F04053 		and	r3, r3, #805306368
 1934              		.loc 1 1486 35 discriminator 1
 1935 018c 002B     		cmp	r3, #0
 1936 018e 14D1     		bne	.L92
1487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 61


1489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 1937              		.loc 1 1489 15
 1938 0190 FB68     		ldr	r3, [r7, #12]
 1939 0192 1B68     		ldr	r3, [r3]
 1940              		.loc 1 1489 25
 1941 0194 9A68     		ldr	r2, [r3, #8]
 1942              		.loc 1 1489 15
 1943 0196 FB68     		ldr	r3, [r7, #12]
 1944 0198 1B68     		ldr	r3, [r3]
 1945              		.loc 1 1489 31
 1946 019a 42F08042 		orr	r2, r2, #1073741824
 1947 019e 9A60     		str	r2, [r3, #8]
 1948 01a0 0BE0     		b	.L92
 1949              	.L87:
1490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update ADC state machine to error */
1496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 1950              		.loc 1 1496 5
 1951 01a2 FB68     		ldr	r3, [r7, #12]
 1952 01a4 1B6C     		ldr	r3, [r3, #64]
 1953 01a6 43F01002 		orr	r2, r3, #16
 1954 01aa FB68     		ldr	r3, [r7, #12]
 1955 01ac 1A64     		str	r2, [r3, #64]
1497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC error code to ADC IP internal error */
1499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 1956              		.loc 1 1499 5
 1957 01ae FB68     		ldr	r3, [r7, #12]
 1958 01b0 5B6C     		ldr	r3, [r3, #68]
 1959 01b2 43F00102 		orr	r2, r3, #1
 1960 01b6 FB68     		ldr	r3, [r7, #12]
 1961 01b8 5A64     		str	r2, [r3, #68]
 1962              	.L92:
1500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 1963              		.loc 1 1503 10
 1964 01ba 0023     		movs	r3, #0
 1965              	.L82:
1504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1966              		.loc 1 1504 1
 1967 01bc 1846     		mov	r0, r3
 1968 01be 1837     		adds	r7, r7, #24
 1969              	.LCFI64:
 1970              		.cfi_def_cfa_offset 8
 1971 01c0 BD46     		mov	sp, r7
 1972              	.LCFI65:
 1973              		.cfi_def_cfa_register 13
 1974              		@ sp needed
 1975 01c2 80BD     		pop	{r7, pc}
 1976              	.L94:
 1977              		.align	2
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 62


 1978              	.L93:
 1979 01c4 00000000 		.word	SystemCoreClock
 1980 01c8 83DE1B43 		.word	1125899907
 1981 01cc 00230140 		.word	1073816320
 1982 01d0 00000000 		.word	ADC_DMAConvCplt
 1983 01d4 00000000 		.word	ADC_DMAHalfConvCplt
 1984 01d8 00000000 		.word	ADC_DMAError
 1985 01dc 00200140 		.word	1073815552
 1986              		.cfi_endproc
 1987              	.LFE227:
 1989              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 1990              		.align	1
 1991              		.global	HAL_ADC_Stop_DMA
 1992              		.syntax unified
 1993              		.thumb
 1994              		.thumb_func
 1996              	HAL_ADC_Stop_DMA:
 1997              	.LFB228:
1505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Disables ADC DMA (Single-ADC mode) and disables ADC peripheral    
1508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef* hadc)
1513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 1998              		.loc 1 1513 1
 1999              		.cfi_startproc
 2000              		@ args = 0, pretend = 0, frame = 16
 2001              		@ frame_needed = 1, uses_anonymous_args = 0
 2002 0000 80B5     		push	{r7, lr}
 2003              	.LCFI66:
 2004              		.cfi_def_cfa_offset 8
 2005              		.cfi_offset 7, -8
 2006              		.cfi_offset 14, -4
 2007 0002 84B0     		sub	sp, sp, #16
 2008              	.LCFI67:
 2009              		.cfi_def_cfa_offset 24
 2010 0004 00AF     		add	r7, sp, #0
 2011              	.LCFI68:
 2012              		.cfi_def_cfa_register 7
 2013 0006 7860     		str	r0, [r7, #4]
1514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2014              		.loc 1 1514 21
 2015 0008 0023     		movs	r3, #0
 2016 000a FB73     		strb	r3, [r7, #15]
1515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 2017              		.loc 1 1520 3
 2018 000c 7B68     		ldr	r3, [r7, #4]
 2019 000e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2020 0012 012B     		cmp	r3, #1
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 63


 2021 0014 01D1     		bne	.L96
 2022              		.loc 1 1520 3 is_stmt 0 discriminator 1
 2023 0016 0223     		movs	r3, #2
 2024              		.loc 1 1520 3
 2025 0018 48E0     		b	.L97
 2026              	.L96:
 2027              		.loc 1 1520 3 discriminator 2
 2028 001a 7B68     		ldr	r3, [r7, #4]
 2029 001c 0122     		movs	r2, #1
 2030 001e 83F83C20 		strb	r2, [r3, #60]
1521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
1523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Disable ADC peripheral */
1524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
 2031              		.loc 1 1524 3 is_stmt 1
 2032 0022 7B68     		ldr	r3, [r7, #4]
 2033 0024 1B68     		ldr	r3, [r3]
 2034 0026 9A68     		ldr	r2, [r3, #8]
 2035 0028 7B68     		ldr	r3, [r7, #4]
 2036 002a 1B68     		ldr	r3, [r3]
 2037 002c 22F00102 		bic	r2, r2, #1
 2038 0030 9A60     		str	r2, [r3, #8]
1525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
1527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 2039              		.loc 1 1527 6
 2040 0032 7B68     		ldr	r3, [r7, #4]
 2041 0034 1B68     		ldr	r3, [r3]
 2042 0036 9B68     		ldr	r3, [r3, #8]
 2043 0038 03F00103 		and	r3, r3, #1
 2044              		.loc 1 1527 5
 2045 003c 002B     		cmp	r3, #0
 2046 003e 30D1     		bne	.L98
1528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the selected ADC DMA mode */
1530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~ADC_CR2_DMA;
 2047              		.loc 1 1530 9
 2048 0040 7B68     		ldr	r3, [r7, #4]
 2049 0042 1B68     		ldr	r3, [r3]
 2050              		.loc 1 1530 19
 2051 0044 9A68     		ldr	r2, [r3, #8]
 2052              		.loc 1 1530 9
 2053 0046 7B68     		ldr	r3, [r7, #4]
 2054 0048 1B68     		ldr	r3, [r3]
 2055              		.loc 1 1530 25
 2056 004a 22F48072 		bic	r2, r2, #256
 2057 004e 9A60     		str	r2, [r3, #8]
1531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
1533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* DMA transfer is on going)                                              */
1534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (hadc->DMA_Handle->State == HAL_DMA_STATE_BUSY)
 2058              		.loc 1 1534 13
 2059 0050 7B68     		ldr	r3, [r7, #4]
 2060 0052 9B6B     		ldr	r3, [r3, #56]
 2061              		.loc 1 1534 25
 2062 0054 93F83530 		ldrb	r3, [r3, #53]
 2063 0058 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 64


 2064              		.loc 1 1534 8
 2065 005a 022B     		cmp	r3, #2
 2066 005c 0FD1     		bne	.L99
1535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
 2067              		.loc 1 1536 24
 2068 005e 7B68     		ldr	r3, [r7, #4]
 2069 0060 9B6B     		ldr	r3, [r3, #56]
 2070 0062 1846     		mov	r0, r3
 2071 0064 FFF7FEFF 		bl	HAL_DMA_Abort
 2072 0068 0346     		mov	r3, r0
 2073 006a FB73     		strb	r3, [r7, #15]
1537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Check if DMA channel effectively disabled */
1539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if (tmp_hal_status != HAL_OK)
 2074              		.loc 1 1539 10
 2075 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2076 006e 002B     		cmp	r3, #0
 2077 0070 05D0     		beq	.L99
1540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Update ADC state machine to error */
1542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 2078              		.loc 1 1542 9
 2079 0072 7B68     		ldr	r3, [r7, #4]
 2080 0074 1B6C     		ldr	r3, [r3, #64]
 2081 0076 43F04002 		orr	r2, r3, #64
 2082 007a 7B68     		ldr	r3, [r7, #4]
 2083 007c 1A64     		str	r2, [r3, #64]
 2084              	.L99:
1543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
1547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
 2085              		.loc 1 1547 5
 2086 007e 7B68     		ldr	r3, [r7, #4]
 2087 0080 1B68     		ldr	r3, [r3]
 2088 0082 5A68     		ldr	r2, [r3, #4]
 2089 0084 7B68     		ldr	r3, [r7, #4]
 2090 0086 1B68     		ldr	r3, [r3]
 2091 0088 22F08062 		bic	r2, r2, #67108864
 2092 008c 5A60     		str	r2, [r3, #4]
1548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
1550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 2093              		.loc 1 1550 5
 2094 008e 7B68     		ldr	r3, [r7, #4]
 2095 0090 1B6C     		ldr	r3, [r3, #64]
 2096 0092 23F48853 		bic	r3, r3, #4352
 2097 0096 23F00103 		bic	r3, r3, #1
 2098 009a 43F00102 		orr	r2, r3, #1
 2099 009e 7B68     		ldr	r3, [r7, #4]
 2100 00a0 1A64     		str	r2, [r3, #64]
 2101              	.L98:
1551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
1553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 65


1554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
1556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 2102              		.loc 1 1556 3
 2103 00a2 7B68     		ldr	r3, [r7, #4]
 2104 00a4 0022     		movs	r2, #0
 2105 00a6 83F83C20 		strb	r2, [r3, #60]
1557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return tmp_hal_status;
 2106              		.loc 1 1559 10
 2107 00aa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2108              	.L97:
1560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2109              		.loc 1 1560 1
 2110 00ac 1846     		mov	r0, r3
 2111 00ae 1037     		adds	r7, r7, #16
 2112              	.LCFI69:
 2113              		.cfi_def_cfa_offset 8
 2114 00b0 BD46     		mov	sp, r7
 2115              	.LCFI70:
 2116              		.cfi_def_cfa_register 13
 2117              		@ sp needed
 2118 00b2 80BD     		pop	{r7, pc}
 2119              		.cfi_endproc
 2120              	.LFE228:
 2122              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 2123              		.align	1
 2124              		.global	HAL_ADC_GetValue
 2125              		.syntax unified
 2126              		.thumb
 2127              		.thumb_func
 2129              	HAL_ADC_GetValue:
 2130              	.LFB229:
1561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Gets the converted value from data register of regular channel.
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval Converted value
1567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
1569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {       
 2131              		.loc 1 1569 1
 2132              		.cfi_startproc
 2133              		@ args = 0, pretend = 0, frame = 8
 2134              		@ frame_needed = 1, uses_anonymous_args = 0
 2135              		@ link register save eliminated.
 2136 0000 80B4     		push	{r7}
 2137              	.LCFI71:
 2138              		.cfi_def_cfa_offset 4
 2139              		.cfi_offset 7, -4
 2140 0002 83B0     		sub	sp, sp, #12
 2141              	.LCFI72:
 2142              		.cfi_def_cfa_offset 16
 2143 0004 00AF     		add	r7, sp, #0
 2144              	.LCFI73:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 66


 2145              		.cfi_def_cfa_register 7
 2146 0006 7860     		str	r0, [r7, #4]
1570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return the selected ADC converted value */ 
1571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return hadc->Instance->DR;
 2147              		.loc 1 1571 14
 2148 0008 7B68     		ldr	r3, [r7, #4]
 2149 000a 1B68     		ldr	r3, [r3]
 2150              		.loc 1 1571 24
 2151 000c DB6C     		ldr	r3, [r3, #76]
1572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2152              		.loc 1 1572 1
 2153 000e 1846     		mov	r0, r3
 2154 0010 0C37     		adds	r7, r7, #12
 2155              	.LCFI74:
 2156              		.cfi_def_cfa_offset 4
 2157 0012 BD46     		mov	sp, r7
 2158              	.LCFI75:
 2159              		.cfi_def_cfa_register 13
 2160              		@ sp needed
 2161 0014 5DF8047B 		ldr	r7, [sp], #4
 2162              	.LCFI76:
 2163              		.cfi_restore 7
 2164              		.cfi_def_cfa_offset 0
 2165 0018 7047     		bx	lr
 2166              		.cfi_endproc
 2167              	.LFE229:
 2169              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 2170              		.align	1
 2171              		.weak	HAL_ADC_ConvCpltCallback
 2172              		.syntax unified
 2173              		.thumb
 2174              		.thumb_func
 2176              	HAL_ADC_ConvCpltCallback:
 2177              	.LFB230:
1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Regular conversion complete callback in non blocking mode 
1576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
1581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2178              		.loc 1 1581 1
 2179              		.cfi_startproc
 2180              		@ args = 0, pretend = 0, frame = 8
 2181              		@ frame_needed = 1, uses_anonymous_args = 0
 2182              		@ link register save eliminated.
 2183 0000 80B4     		push	{r7}
 2184              	.LCFI77:
 2185              		.cfi_def_cfa_offset 4
 2186              		.cfi_offset 7, -4
 2187 0002 83B0     		sub	sp, sp, #12
 2188              	.LCFI78:
 2189              		.cfi_def_cfa_offset 16
 2190 0004 00AF     		add	r7, sp, #0
 2191              	.LCFI79:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 67


 2192              		.cfi_def_cfa_register 7
 2193 0006 7860     		str	r0, [r7, #4]
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
1584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_ConvCpltCallback could be implemented in the user file
1586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */
1587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2194              		.loc 1 1587 1
 2195 0008 00BF     		nop
 2196 000a 0C37     		adds	r7, r7, #12
 2197              	.LCFI80:
 2198              		.cfi_def_cfa_offset 4
 2199 000c BD46     		mov	sp, r7
 2200              	.LCFI81:
 2201              		.cfi_def_cfa_register 13
 2202              		@ sp needed
 2203 000e 5DF8047B 		ldr	r7, [sp], #4
 2204              	.LCFI82:
 2205              		.cfi_restore 7
 2206              		.cfi_def_cfa_offset 0
 2207 0012 7047     		bx	lr
 2208              		.cfi_endproc
 2209              	.LFE230:
 2211              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 2212              		.align	1
 2213              		.weak	HAL_ADC_ConvHalfCpltCallback
 2214              		.syntax unified
 2215              		.thumb
 2216              		.thumb_func
 2218              	HAL_ADC_ConvHalfCpltCallback:
 2219              	.LFB231:
1588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Regular conversion half DMA transfer callback in non blocking mode 
1591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc)
1596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2220              		.loc 1 1596 1
 2221              		.cfi_startproc
 2222              		@ args = 0, pretend = 0, frame = 8
 2223              		@ frame_needed = 1, uses_anonymous_args = 0
 2224              		@ link register save eliminated.
 2225 0000 80B4     		push	{r7}
 2226              	.LCFI83:
 2227              		.cfi_def_cfa_offset 4
 2228              		.cfi_offset 7, -4
 2229 0002 83B0     		sub	sp, sp, #12
 2230              	.LCFI84:
 2231              		.cfi_def_cfa_offset 16
 2232 0004 00AF     		add	r7, sp, #0
 2233              	.LCFI85:
 2234              		.cfi_def_cfa_register 7
 2235 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 68


1597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
1599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_ConvHalfCpltCallback could be implemented in the user file
1601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */
1602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2236              		.loc 1 1602 1
 2237 0008 00BF     		nop
 2238 000a 0C37     		adds	r7, r7, #12
 2239              	.LCFI86:
 2240              		.cfi_def_cfa_offset 4
 2241 000c BD46     		mov	sp, r7
 2242              	.LCFI87:
 2243              		.cfi_def_cfa_register 13
 2244              		@ sp needed
 2245 000e 5DF8047B 		ldr	r7, [sp], #4
 2246              	.LCFI88:
 2247              		.cfi_restore 7
 2248              		.cfi_def_cfa_offset 0
 2249 0012 7047     		bx	lr
 2250              		.cfi_endproc
 2251              	.LFE231:
 2253              		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 2254              		.align	1
 2255              		.weak	HAL_ADC_LevelOutOfWindowCallback
 2256              		.syntax unified
 2257              		.thumb
 2258              		.thumb_func
 2260              	HAL_ADC_LevelOutOfWindowCallback:
 2261              	.LFB232:
1603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Analog watchdog callback in non blocking mode 
1606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef* hadc)
1611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2262              		.loc 1 1611 1
 2263              		.cfi_startproc
 2264              		@ args = 0, pretend = 0, frame = 8
 2265              		@ frame_needed = 1, uses_anonymous_args = 0
 2266              		@ link register save eliminated.
 2267 0000 80B4     		push	{r7}
 2268              	.LCFI89:
 2269              		.cfi_def_cfa_offset 4
 2270              		.cfi_offset 7, -4
 2271 0002 83B0     		sub	sp, sp, #12
 2272              	.LCFI90:
 2273              		.cfi_def_cfa_offset 16
 2274 0004 00AF     		add	r7, sp, #0
 2275              	.LCFI91:
 2276              		.cfi_def_cfa_register 7
 2277 0006 7860     		str	r0, [r7, #4]
1612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 69


1614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_LevelOoutOfWindowCallback could be implemented in the user file
1616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */
1617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2278              		.loc 1 1617 1
 2279 0008 00BF     		nop
 2280 000a 0C37     		adds	r7, r7, #12
 2281              	.LCFI92:
 2282              		.cfi_def_cfa_offset 4
 2283 000c BD46     		mov	sp, r7
 2284              	.LCFI93:
 2285              		.cfi_def_cfa_register 13
 2286              		@ sp needed
 2287 000e 5DF8047B 		ldr	r7, [sp], #4
 2288              	.LCFI94:
 2289              		.cfi_restore 7
 2290              		.cfi_def_cfa_offset 0
 2291 0012 7047     		bx	lr
 2292              		.cfi_endproc
 2293              	.LFE232:
 2295              		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 2296              		.align	1
 2297              		.weak	HAL_ADC_ErrorCallback
 2298              		.syntax unified
 2299              		.thumb
 2300              		.thumb_func
 2302              	HAL_ADC_ErrorCallback:
 2303              	.LFB233:
1618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Error ADC callback.
1621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   In case of error due to overrun when using ADC with DMA transfer 
1622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         (HAL ADC handle parameter "ErrorCode" to state "HAL_ADC_ERROR_OVR"):
1623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         - Reinitialize the DMA using function "HAL_ADC_Stop_DMA()".
1624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         - If needed, restart a new ADC conversion using function
1625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           "HAL_ADC_Start_DMA()"
1626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           (this function is also clearing overrun flag)
1627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
1632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2304              		.loc 1 1632 1
 2305              		.cfi_startproc
 2306              		@ args = 0, pretend = 0, frame = 8
 2307              		@ frame_needed = 1, uses_anonymous_args = 0
 2308              		@ link register save eliminated.
 2309 0000 80B4     		push	{r7}
 2310              	.LCFI95:
 2311              		.cfi_def_cfa_offset 4
 2312              		.cfi_offset 7, -4
 2313 0002 83B0     		sub	sp, sp, #12
 2314              	.LCFI96:
 2315              		.cfi_def_cfa_offset 16
 2316 0004 00AF     		add	r7, sp, #0
 2317              	.LCFI97:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 70


 2318              		.cfi_def_cfa_register 7
 2319 0006 7860     		str	r0, [r7, #4]
1633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
1635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_ErrorCallback could be implemented in the user file
1637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */
1638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2320              		.loc 1 1638 1
 2321 0008 00BF     		nop
 2322 000a 0C37     		adds	r7, r7, #12
 2323              	.LCFI98:
 2324              		.cfi_def_cfa_offset 4
 2325 000c BD46     		mov	sp, r7
 2326              	.LCFI99:
 2327              		.cfi_def_cfa_register 13
 2328              		@ sp needed
 2329 000e 5DF8047B 		ldr	r7, [sp], #4
 2330              	.LCFI100:
 2331              		.cfi_restore 7
 2332              		.cfi_def_cfa_offset 0
 2333 0012 7047     		bx	lr
 2334              		.cfi_endproc
 2335              	.LFE233:
 2337              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 2338              		.align	1
 2339              		.global	HAL_ADC_ConfigChannel
 2340              		.syntax unified
 2341              		.thumb
 2342              		.thumb_func
 2344              	HAL_ADC_ConfigChannel:
 2345              	.LFB234:
1639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
1642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
1645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *  @brief   	Peripheral Control functions 
1646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *
1647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @verbatim   
1648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
1649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              ##### Peripheral Control functions #####
1650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================  
1651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
1652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Configure regular channels. 
1653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Configure injected channels.
1654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Configure multimode.
1655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Configure the analog watch dog.
1656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @endverbatim
1658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
1659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /**
1662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Configures for the selected ADC regular channel its corresponding
1663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         rank in the sequencer and its sample time.
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 71


1664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  sConfig ADC configuration structure. 
1667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
1668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
1670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2346              		.loc 1 1670 1
 2347              		.cfi_startproc
 2348              		@ args = 0, pretend = 0, frame = 16
 2349              		@ frame_needed = 1, uses_anonymous_args = 0
 2350              		@ link register save eliminated.
 2351 0000 80B4     		push	{r7}
 2352              	.LCFI101:
 2353              		.cfi_def_cfa_offset 4
 2354              		.cfi_offset 7, -4
 2355 0002 85B0     		sub	sp, sp, #20
 2356              	.LCFI102:
 2357              		.cfi_def_cfa_offset 24
 2358 0004 00AF     		add	r7, sp, #0
 2359              	.LCFI103:
 2360              		.cfi_def_cfa_register 7
 2361 0006 7860     		str	r0, [r7, #4]
 2362 0008 3960     		str	r1, [r7]
1671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 2363              		.loc 1 1671 17
 2364 000a 0023     		movs	r3, #0
 2365 000c BB60     		str	r3, [r7, #8]
1672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
1673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(sConfig->Channel));
1676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
1677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
1678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 2366              		.loc 1 1680 3
 2367 000e 7B68     		ldr	r3, [r7, #4]
 2368 0010 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2369 0014 012B     		cmp	r3, #1
 2370 0016 01D1     		bne	.L107
 2371              		.loc 1 1680 3 is_stmt 0 discriminator 1
 2372 0018 0223     		movs	r3, #2
 2373              		.loc 1 1680 3
 2374 001a 13E1     		b	.L108
 2375              	.L107:
 2376              		.loc 1 1680 3 discriminator 2
 2377 001c 7B68     		ldr	r3, [r7, #4]
 2378 001e 0122     		movs	r2, #1
 2379 0020 83F83C20 		strb	r2, [r3, #60]
1681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
1683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (sConfig->Channel > ADC_CHANNEL_9)
 2380              		.loc 1 1683 14 is_stmt 1
 2381 0024 3B68     		ldr	r3, [r7]
 2382 0026 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 72


 2383              		.loc 1 1683 6
 2384 0028 092B     		cmp	r3, #9
 2385 002a 25D9     		bls	.L109
1684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old sample time */
1686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 2386              		.loc 1 1686 9
 2387 002c 7B68     		ldr	r3, [r7, #4]
 2388 002e 1B68     		ldr	r3, [r3]
 2389              		.loc 1 1686 19
 2390 0030 D968     		ldr	r1, [r3, #12]
 2391              		.loc 1 1686 31
 2392 0032 3B68     		ldr	r3, [r7]
 2393 0034 1B68     		ldr	r3, [r3]
 2394 0036 9BB2     		uxth	r3, r3
 2395 0038 1A46     		mov	r2, r3
 2396 003a 1346     		mov	r3, r2
 2397 003c 5B00     		lsls	r3, r3, #1
 2398 003e 1344     		add	r3, r3, r2
 2399 0040 1E3B     		subs	r3, r3, #30
 2400 0042 0722     		movs	r2, #7
 2401 0044 02FA03F3 		lsl	r3, r2, r3
 2402              		.loc 1 1686 30
 2403 0048 DA43     		mvns	r2, r3
 2404              		.loc 1 1686 9
 2405 004a 7B68     		ldr	r3, [r7, #4]
 2406 004c 1B68     		ldr	r3, [r3]
 2407              		.loc 1 1686 27
 2408 004e 0A40     		ands	r2, r2, r1
 2409 0050 DA60     		str	r2, [r3, #12]
1687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the new sample time */
1689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 2410              		.loc 1 1689 9
 2411 0052 7B68     		ldr	r3, [r7, #4]
 2412 0054 1B68     		ldr	r3, [r3]
 2413              		.loc 1 1689 19
 2414 0056 D968     		ldr	r1, [r3, #12]
 2415              		.loc 1 1689 30
 2416 0058 3B68     		ldr	r3, [r7]
 2417 005a 9A68     		ldr	r2, [r3, #8]
 2418 005c 3B68     		ldr	r3, [r7]
 2419 005e 1B68     		ldr	r3, [r3]
 2420 0060 9BB2     		uxth	r3, r3
 2421 0062 1846     		mov	r0, r3
 2422 0064 0346     		mov	r3, r0
 2423 0066 5B00     		lsls	r3, r3, #1
 2424 0068 0344     		add	r3, r3, r0
 2425 006a 1E3B     		subs	r3, r3, #30
 2426 006c 9A40     		lsls	r2, r2, r3
 2427              		.loc 1 1689 9
 2428 006e 7B68     		ldr	r3, [r7, #4]
 2429 0070 1B68     		ldr	r3, [r3]
 2430              		.loc 1 1689 27
 2431 0072 0A43     		orrs	r2, r2, r1
 2432 0074 DA60     		str	r2, [r3, #12]
 2433 0076 22E0     		b	.L110
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 73


 2434              	.L109:
1690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
1692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old sample time */
1694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 2435              		.loc 1 1694 9
 2436 0078 7B68     		ldr	r3, [r7, #4]
 2437 007a 1B68     		ldr	r3, [r3]
 2438              		.loc 1 1694 19
 2439 007c 1969     		ldr	r1, [r3, #16]
 2440              		.loc 1 1694 31
 2441 007e 3B68     		ldr	r3, [r7]
 2442 0080 1B68     		ldr	r3, [r3]
 2443 0082 9BB2     		uxth	r3, r3
 2444 0084 1A46     		mov	r2, r3
 2445 0086 1346     		mov	r3, r2
 2446 0088 5B00     		lsls	r3, r3, #1
 2447 008a 1344     		add	r3, r3, r2
 2448 008c 0722     		movs	r2, #7
 2449 008e 02FA03F3 		lsl	r3, r2, r3
 2450              		.loc 1 1694 30
 2451 0092 DA43     		mvns	r2, r3
 2452              		.loc 1 1694 9
 2453 0094 7B68     		ldr	r3, [r7, #4]
 2454 0096 1B68     		ldr	r3, [r3]
 2455              		.loc 1 1694 27
 2456 0098 0A40     		ands	r2, r2, r1
 2457 009a 1A61     		str	r2, [r3, #16]
1695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the new sample time */
1697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 2458              		.loc 1 1697 9
 2459 009c 7B68     		ldr	r3, [r7, #4]
 2460 009e 1B68     		ldr	r3, [r3]
 2461              		.loc 1 1697 19
 2462 00a0 1969     		ldr	r1, [r3, #16]
 2463              		.loc 1 1697 30
 2464 00a2 3B68     		ldr	r3, [r7]
 2465 00a4 9A68     		ldr	r2, [r3, #8]
 2466 00a6 3B68     		ldr	r3, [r7]
 2467 00a8 1B68     		ldr	r3, [r3]
 2468 00aa 9BB2     		uxth	r3, r3
 2469 00ac 1846     		mov	r0, r3
 2470 00ae 0346     		mov	r3, r0
 2471 00b0 5B00     		lsls	r3, r3, #1
 2472 00b2 0344     		add	r3, r3, r0
 2473 00b4 9A40     		lsls	r2, r2, r3
 2474              		.loc 1 1697 9
 2475 00b6 7B68     		ldr	r3, [r7, #4]
 2476 00b8 1B68     		ldr	r3, [r3]
 2477              		.loc 1 1697 27
 2478 00ba 0A43     		orrs	r2, r2, r1
 2479 00bc 1A61     		str	r2, [r3, #16]
 2480              	.L110:
1698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 74


1700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* For Rank 1 to 6 */
1701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (sConfig->Rank < 7U)
 2481              		.loc 1 1701 14
 2482 00be 3B68     		ldr	r3, [r7]
 2483 00c0 5B68     		ldr	r3, [r3, #4]
 2484              		.loc 1 1701 6
 2485 00c2 062B     		cmp	r3, #6
 2486 00c4 24D8     		bhi	.L111
1702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old SQx bits for the selected rank */
1704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 2487              		.loc 1 1704 9
 2488 00c6 7B68     		ldr	r3, [r7, #4]
 2489 00c8 1B68     		ldr	r3, [r3]
 2490              		.loc 1 1704 19
 2491 00ca 596B     		ldr	r1, [r3, #52]
 2492              		.loc 1 1704 30
 2493 00cc 3B68     		ldr	r3, [r7]
 2494 00ce 5A68     		ldr	r2, [r3, #4]
 2495 00d0 1346     		mov	r3, r2
 2496 00d2 9B00     		lsls	r3, r3, #2
 2497 00d4 1344     		add	r3, r3, r2
 2498 00d6 053B     		subs	r3, r3, #5
 2499 00d8 1F22     		movs	r2, #31
 2500 00da 02FA03F3 		lsl	r3, r2, r3
 2501              		.loc 1 1704 29
 2502 00de DA43     		mvns	r2, r3
 2503              		.loc 1 1704 9
 2504 00e0 7B68     		ldr	r3, [r7, #4]
 2505 00e2 1B68     		ldr	r3, [r3]
 2506              		.loc 1 1704 26
 2507 00e4 0A40     		ands	r2, r2, r1
 2508 00e6 5A63     		str	r2, [r3, #52]
1705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the SQx bits for the selected rank */
1707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 2509              		.loc 1 1707 9
 2510 00e8 7B68     		ldr	r3, [r7, #4]
 2511 00ea 1B68     		ldr	r3, [r3]
 2512              		.loc 1 1707 19
 2513 00ec 596B     		ldr	r1, [r3, #52]
 2514              		.loc 1 1707 29
 2515 00ee 3B68     		ldr	r3, [r7]
 2516 00f0 1B68     		ldr	r3, [r3]
 2517 00f2 9BB2     		uxth	r3, r3
 2518 00f4 1846     		mov	r0, r3
 2519 00f6 3B68     		ldr	r3, [r7]
 2520 00f8 5A68     		ldr	r2, [r3, #4]
 2521 00fa 1346     		mov	r3, r2
 2522 00fc 9B00     		lsls	r3, r3, #2
 2523 00fe 1344     		add	r3, r3, r2
 2524 0100 053B     		subs	r3, r3, #5
 2525 0102 00FA03F2 		lsl	r2, r0, r3
 2526              		.loc 1 1707 9
 2527 0106 7B68     		ldr	r3, [r7, #4]
 2528 0108 1B68     		ldr	r3, [r3]
 2529              		.loc 1 1707 26
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 75


 2530 010a 0A43     		orrs	r2, r2, r1
 2531 010c 5A63     		str	r2, [r3, #52]
 2532 010e 4CE0     		b	.L112
 2533              	.L111:
1708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* For Rank 7 to 12 */
1710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else if (sConfig->Rank < 13U)
 2534              		.loc 1 1710 19
 2535 0110 3B68     		ldr	r3, [r7]
 2536 0112 5B68     		ldr	r3, [r3, #4]
 2537              		.loc 1 1710 11
 2538 0114 0C2B     		cmp	r3, #12
 2539 0116 24D8     		bhi	.L113
1711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old SQx bits for the selected rank */
1713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 2540              		.loc 1 1713 9
 2541 0118 7B68     		ldr	r3, [r7, #4]
 2542 011a 1B68     		ldr	r3, [r3]
 2543              		.loc 1 1713 19
 2544 011c 196B     		ldr	r1, [r3, #48]
 2545              		.loc 1 1713 30
 2546 011e 3B68     		ldr	r3, [r7]
 2547 0120 5A68     		ldr	r2, [r3, #4]
 2548 0122 1346     		mov	r3, r2
 2549 0124 9B00     		lsls	r3, r3, #2
 2550 0126 1344     		add	r3, r3, r2
 2551 0128 233B     		subs	r3, r3, #35
 2552 012a 1F22     		movs	r2, #31
 2553 012c 02FA03F3 		lsl	r3, r2, r3
 2554              		.loc 1 1713 29
 2555 0130 DA43     		mvns	r2, r3
 2556              		.loc 1 1713 9
 2557 0132 7B68     		ldr	r3, [r7, #4]
 2558 0134 1B68     		ldr	r3, [r3]
 2559              		.loc 1 1713 26
 2560 0136 0A40     		ands	r2, r2, r1
 2561 0138 1A63     		str	r2, [r3, #48]
1714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the SQx bits for the selected rank */
1716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 2562              		.loc 1 1716 9
 2563 013a 7B68     		ldr	r3, [r7, #4]
 2564 013c 1B68     		ldr	r3, [r3]
 2565              		.loc 1 1716 19
 2566 013e 196B     		ldr	r1, [r3, #48]
 2567              		.loc 1 1716 29
 2568 0140 3B68     		ldr	r3, [r7]
 2569 0142 1B68     		ldr	r3, [r3]
 2570 0144 9BB2     		uxth	r3, r3
 2571 0146 1846     		mov	r0, r3
 2572 0148 3B68     		ldr	r3, [r7]
 2573 014a 5A68     		ldr	r2, [r3, #4]
 2574 014c 1346     		mov	r3, r2
 2575 014e 9B00     		lsls	r3, r3, #2
 2576 0150 1344     		add	r3, r3, r2
 2577 0152 233B     		subs	r3, r3, #35
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 76


 2578 0154 00FA03F2 		lsl	r2, r0, r3
 2579              		.loc 1 1716 9
 2580 0158 7B68     		ldr	r3, [r7, #4]
 2581 015a 1B68     		ldr	r3, [r3]
 2582              		.loc 1 1716 26
 2583 015c 0A43     		orrs	r2, r2, r1
 2584 015e 1A63     		str	r2, [r3, #48]
 2585 0160 23E0     		b	.L112
 2586              	.L113:
1717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* For Rank 13 to 16 */
1719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old SQx bits for the selected rank */
1722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 2587              		.loc 1 1722 9
 2588 0162 7B68     		ldr	r3, [r7, #4]
 2589 0164 1B68     		ldr	r3, [r3]
 2590              		.loc 1 1722 19
 2591 0166 D96A     		ldr	r1, [r3, #44]
 2592              		.loc 1 1722 30
 2593 0168 3B68     		ldr	r3, [r7]
 2594 016a 5A68     		ldr	r2, [r3, #4]
 2595 016c 1346     		mov	r3, r2
 2596 016e 9B00     		lsls	r3, r3, #2
 2597 0170 1344     		add	r3, r3, r2
 2598 0172 413B     		subs	r3, r3, #65
 2599 0174 1F22     		movs	r2, #31
 2600 0176 02FA03F3 		lsl	r3, r2, r3
 2601              		.loc 1 1722 29
 2602 017a DA43     		mvns	r2, r3
 2603              		.loc 1 1722 9
 2604 017c 7B68     		ldr	r3, [r7, #4]
 2605 017e 1B68     		ldr	r3, [r3]
 2606              		.loc 1 1722 26
 2607 0180 0A40     		ands	r2, r2, r1
 2608 0182 DA62     		str	r2, [r3, #44]
1723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the SQx bits for the selected rank */
1725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 2609              		.loc 1 1725 9
 2610 0184 7B68     		ldr	r3, [r7, #4]
 2611 0186 1B68     		ldr	r3, [r3]
 2612              		.loc 1 1725 19
 2613 0188 D96A     		ldr	r1, [r3, #44]
 2614              		.loc 1 1725 29
 2615 018a 3B68     		ldr	r3, [r7]
 2616 018c 1B68     		ldr	r3, [r3]
 2617 018e 9BB2     		uxth	r3, r3
 2618 0190 1846     		mov	r0, r3
 2619 0192 3B68     		ldr	r3, [r7]
 2620 0194 5A68     		ldr	r2, [r3, #4]
 2621 0196 1346     		mov	r3, r2
 2622 0198 9B00     		lsls	r3, r3, #2
 2623 019a 1344     		add	r3, r3, r2
 2624 019c 413B     		subs	r3, r3, #65
 2625 019e 00FA03F2 		lsl	r2, r0, r3
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 77


 2626              		.loc 1 1725 9
 2627 01a2 7B68     		ldr	r3, [r7, #4]
 2628 01a4 1B68     		ldr	r3, [r3]
 2629              		.loc 1 1725 26
 2630 01a6 0A43     		orrs	r2, r2, r1
 2631 01a8 DA62     		str	r2, [r3, #44]
 2632              	.L112:
1726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Pointer to the common control register to which is belonging hadc    */
1729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
1730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* control register)                                                    */
1731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 2633              		.loc 1 1731 19
 2634 01aa 294B     		ldr	r3, .L119
 2635 01ac FB60     		str	r3, [r7, #12]
1732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* if ADC1 Channel_18 is selected for VBAT Channel ennable VBATE */
1734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 2636              		.loc 1 1734 12
 2637 01ae 7B68     		ldr	r3, [r7, #4]
 2638 01b0 1B68     		ldr	r3, [r3]
 2639              		.loc 1 1734 6
 2640 01b2 284A     		ldr	r2, .L119+4
 2641 01b4 9342     		cmp	r3, r2
 2642 01b6 0FD1     		bne	.L114
 2643              		.loc 1 1734 43 discriminator 1
 2644 01b8 3B68     		ldr	r3, [r7]
 2645 01ba 1B68     		ldr	r3, [r3]
 2646              		.loc 1 1734 32 discriminator 1
 2647 01bc 122B     		cmp	r3, #18
 2648 01be 0BD1     		bne	.L114
1735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the TEMPSENSOR channel in case of using board with multiplixed ADC_CHANNEL_VBAT & AD
1737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
1738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 2649              		.loc 1 1739 20
 2650 01c0 FB68     		ldr	r3, [r7, #12]
 2651 01c2 5B68     		ldr	r3, [r3, #4]
 2652              		.loc 1 1739 26
 2653 01c4 23F40002 		bic	r2, r3, #8388608
 2654 01c8 FB68     		ldr	r3, [r7, #12]
 2655 01ca 5A60     		str	r2, [r3, #4]
1740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the VBAT channel*/
1742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common->CCR |= ADC_CCR_VBATE;
 2656              		.loc 1 1742 18
 2657 01cc FB68     		ldr	r3, [r7, #12]
 2658 01ce 5B68     		ldr	r3, [r3, #4]
 2659              		.loc 1 1742 24
 2660 01d0 43F48002 		orr	r2, r3, #4194304
 2661 01d4 FB68     		ldr	r3, [r7, #12]
 2662 01d6 5A60     		str	r2, [r3, #4]
 2663              	.L114:
1743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 78


1745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* if ADC1 Channel_16 or Channel_18 is selected for Temperature sensor or 
1746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      Channel_17 is selected for VREFINT enable TSVREFE */
1747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channe
 2664              		.loc 1 1747 12
 2665 01d8 7B68     		ldr	r3, [r7, #4]
 2666 01da 1B68     		ldr	r3, [r3]
 2667              		.loc 1 1747 6
 2668 01dc 1D4A     		ldr	r2, .L119+4
 2669 01de 9342     		cmp	r3, r2
 2670 01e0 2BD1     		bne	.L115
 2671              		.loc 1 1747 44 discriminator 1
 2672 01e2 3B68     		ldr	r3, [r7]
 2673 01e4 1B68     		ldr	r3, [r3]
 2674              		.loc 1 1747 32 discriminator 1
 2675 01e6 1C4A     		ldr	r2, .L119+8
 2676 01e8 9342     		cmp	r3, r2
 2677 01ea 03D0     		beq	.L116
 2678              		.loc 1 1747 92 discriminator 2
 2679 01ec 3B68     		ldr	r3, [r7]
 2680 01ee 1B68     		ldr	r3, [r3]
 2681              		.loc 1 1747 81 discriminator 2
 2682 01f0 112B     		cmp	r3, #17
 2683 01f2 22D1     		bne	.L115
 2684              	.L116:
1748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the VBAT channel in case of using board with multiplixed ADC_CHANNEL_VBAT & ADC_CHAN
1750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
1751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 2685              		.loc 1 1752 20
 2686 01f4 FB68     		ldr	r3, [r7, #12]
 2687 01f6 5B68     		ldr	r3, [r3, #4]
 2688              		.loc 1 1752 26
 2689 01f8 23F48002 		bic	r2, r3, #4194304
 2690 01fc FB68     		ldr	r3, [r7, #12]
 2691 01fe 5A60     		str	r2, [r3, #4]
1753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the Temperature sensor and VREFINT channel*/
1755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 2692              		.loc 1 1755 18
 2693 0200 FB68     		ldr	r3, [r7, #12]
 2694 0202 5B68     		ldr	r3, [r3, #4]
 2695              		.loc 1 1755 24
 2696 0204 43F40002 		orr	r2, r3, #8388608
 2697 0208 FB68     		ldr	r3, [r7, #12]
 2698 020a 5A60     		str	r2, [r3, #4]
1756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 2699              		.loc 1 1757 15
 2700 020c 3B68     		ldr	r3, [r7]
 2701 020e 1B68     		ldr	r3, [r3]
 2702              		.loc 1 1757 7
 2703 0210 114A     		ldr	r2, .L119+8
 2704 0212 9342     		cmp	r3, r2
 2705 0214 11D1     		bne	.L115
1758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Delay for temperature sensor stabilization time */
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 79


1760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Compute number of CPU cycles to wait for */
1761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 2706              		.loc 1 1761 61
 2707 0216 114B     		ldr	r3, .L119+12
 2708 0218 1B68     		ldr	r3, [r3]
 2709 021a 114A     		ldr	r2, .L119+16
 2710 021c A2FB0323 		umull	r2, r3, r2, r3
 2711 0220 9A0C     		lsrs	r2, r3, #18
 2712              		.loc 1 1761 42
 2713 0222 1346     		mov	r3, r2
 2714 0224 9B00     		lsls	r3, r3, #2
 2715 0226 1344     		add	r3, r3, r2
 2716 0228 5B00     		lsls	r3, r3, #1
 2717              		.loc 1 1761 15
 2718 022a BB60     		str	r3, [r7, #8]
1762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       while(counter != 0U)
 2719              		.loc 1 1762 12
 2720 022c 02E0     		b	.L117
 2721              	.L118:
1763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         counter--;
 2722              		.loc 1 1764 16
 2723 022e BB68     		ldr	r3, [r7, #8]
 2724 0230 013B     		subs	r3, r3, #1
 2725 0232 BB60     		str	r3, [r7, #8]
 2726              	.L117:
1762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       while(counter != 0U)
 2727              		.loc 1 1762 21
 2728 0234 BB68     		ldr	r3, [r7, #8]
 2729 0236 002B     		cmp	r3, #0
 2730 0238 F9D1     		bne	.L118
 2731              	.L115:
1765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
1770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 2732              		.loc 1 1770 3
 2733 023a 7B68     		ldr	r3, [r7, #4]
 2734 023c 0022     		movs	r2, #0
 2735 023e 83F83C20 		strb	r2, [r3, #60]
1771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 2736              		.loc 1 1773 10
 2737 0242 0023     		movs	r3, #0
 2738              	.L108:
1774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2739              		.loc 1 1774 1
 2740 0244 1846     		mov	r0, r3
 2741 0246 1437     		adds	r7, r7, #20
 2742              	.LCFI104:
 2743              		.cfi_def_cfa_offset 4
 2744 0248 BD46     		mov	sp, r7
 2745              	.LCFI105:
 2746              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 80


 2747              		@ sp needed
 2748 024a 5DF8047B 		ldr	r7, [sp], #4
 2749              	.LCFI106:
 2750              		.cfi_restore 7
 2751              		.cfi_def_cfa_offset 0
 2752 024e 7047     		bx	lr
 2753              	.L120:
 2754              		.align	2
 2755              	.L119:
 2756 0250 00230140 		.word	1073816320
 2757 0254 00200140 		.word	1073815552
 2758 0258 12000010 		.word	268435474
 2759 025c 00000000 		.word	SystemCoreClock
 2760 0260 83DE1B43 		.word	1125899907
 2761              		.cfi_endproc
 2762              	.LFE234:
 2764              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 2765              		.align	1
 2766              		.global	HAL_ADC_AnalogWDGConfig
 2767              		.syntax unified
 2768              		.thumb
 2769              		.thumb_func
 2771              	HAL_ADC_AnalogWDGConfig:
 2772              	.LFB235:
1775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Configures the analog watchdog.
1778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note Analog watchdog thresholds can be modified while ADC conversion
1779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * is on going.
1780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * In this case, some constraints must be taken into account:
1781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * The programmed threshold values are effective from the next
1782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * ADC EOC (end of unitary conversion).
1783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * Considering that registers write delay may happen due to
1784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * bus activity, this might cause an uncertainty on the
1785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * effective timing of the new programmed threshold values.
1786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  AnalogWDGConfig  pointer to an ADC_AnalogWDGConfTypeDef structure 
1789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         that contains the configuration information of ADC analog watchdog.
1790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status	  
1791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef* hadc, ADC_AnalogWDGConfTypeDef* Analog
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2773              		.loc 1 1793 1
 2774              		.cfi_startproc
 2775              		@ args = 0, pretend = 0, frame = 8
 2776              		@ frame_needed = 1, uses_anonymous_args = 0
 2777              		@ link register save eliminated.
 2778 0000 80B4     		push	{r7}
 2779              	.LCFI107:
 2780              		.cfi_def_cfa_offset 4
 2781              		.cfi_offset 7, -4
 2782 0002 83B0     		sub	sp, sp, #12
 2783              	.LCFI108:
 2784              		.cfi_def_cfa_offset 16
 2785 0004 00AF     		add	r7, sp, #0
 2786              	.LCFI109:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 81


 2787              		.cfi_def_cfa_register 7
 2788 0006 7860     		str	r0, [r7, #4]
 2789 0008 3960     		str	r1, [r7]
1794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #ifdef USE_FULL_ASSERT  
1795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tmp = 0U;
1796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_FULL_ASSERT  */  
1797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG(AnalogWDGConfig->WatchdogMode));
1800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(AnalogWDGConfig->Channel));
1801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
1802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #ifdef USE_FULL_ASSERT  
1804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp = ADC_GET_RESOLUTION(hadc);
1805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(tmp, AnalogWDGConfig->HighThreshold));
1806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(tmp, AnalogWDGConfig->LowThreshold));
1807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_FULL_ASSERT  */
1808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 2790              		.loc 1 1810 3
 2791 000a 7B68     		ldr	r3, [r7, #4]
 2792 000c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2793 0010 012B     		cmp	r3, #1
 2794 0012 01D1     		bne	.L122
 2795              		.loc 1 1810 3 is_stmt 0 discriminator 1
 2796 0014 0223     		movs	r3, #2
 2797              		.loc 1 1810 3
 2798 0016 4DE0     		b	.L123
 2799              	.L122:
 2800              		.loc 1 1810 3 discriminator 2
 2801 0018 7B68     		ldr	r3, [r7, #4]
 2802 001a 0122     		movs	r2, #1
 2803 001c 83F83C20 		strb	r2, [r3, #60]
1811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(AnalogWDGConfig->ITMode == ENABLE)
 2804              		.loc 1 1812 21 is_stmt 1
 2805 0020 3B68     		ldr	r3, [r7]
 2806 0022 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 2807              		.loc 1 1812 5
 2808 0024 012B     		cmp	r3, #1
 2809 0026 08D1     		bne	.L124
1813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the ADC Analog watchdog interrupt */
1815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_AWD);
 2810              		.loc 1 1815 5
 2811 0028 7B68     		ldr	r3, [r7, #4]
 2812 002a 1B68     		ldr	r3, [r3]
 2813 002c 5A68     		ldr	r2, [r3, #4]
 2814 002e 7B68     		ldr	r3, [r7, #4]
 2815 0030 1B68     		ldr	r3, [r3]
 2816 0032 42F04002 		orr	r2, r2, #64
 2817 0036 5A60     		str	r2, [r3, #4]
 2818 0038 07E0     		b	.L125
 2819              	.L124:
1816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 82


1818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the ADC Analog watchdog interrupt */
1820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_AWD);
 2820              		.loc 1 1820 5
 2821 003a 7B68     		ldr	r3, [r7, #4]
 2822 003c 1B68     		ldr	r3, [r3]
 2823 003e 5A68     		ldr	r2, [r3, #4]
 2824 0040 7B68     		ldr	r3, [r7, #4]
 2825 0042 1B68     		ldr	r3, [r3]
 2826 0044 22F04002 		bic	r2, r2, #64
 2827 0048 5A60     		str	r2, [r3, #4]
 2828              	.L125:
1821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Clear AWDEN, JAWDEN and AWDSGL bits */
1824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 &=  ~(ADC_CR1_AWDSGL | ADC_CR1_JAWDEN | ADC_CR1_AWDEN);
 2829              		.loc 1 1824 7
 2830 004a 7B68     		ldr	r3, [r7, #4]
 2831 004c 1B68     		ldr	r3, [r3]
 2832              		.loc 1 1824 17
 2833 004e 5B68     		ldr	r3, [r3, #4]
 2834              		.loc 1 1824 7
 2835 0050 7A68     		ldr	r2, [r7, #4]
 2836 0052 1268     		ldr	r2, [r2]
 2837              		.loc 1 1824 23
 2838 0054 23F44003 		bic	r3, r3, #12582912
 2839 0058 23F40073 		bic	r3, r3, #512
 2840 005c 5360     		str	r3, [r2, #4]
1825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the analog watchdog enable mode */
1827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 |= AnalogWDGConfig->WatchdogMode;
 2841              		.loc 1 1827 7
 2842 005e 7B68     		ldr	r3, [r7, #4]
 2843 0060 1B68     		ldr	r3, [r3]
 2844              		.loc 1 1827 17
 2845 0062 5968     		ldr	r1, [r3, #4]
 2846              		.loc 1 1827 41
 2847 0064 3B68     		ldr	r3, [r7]
 2848 0066 1A68     		ldr	r2, [r3]
 2849              		.loc 1 1827 7
 2850 0068 7B68     		ldr	r3, [r7, #4]
 2851 006a 1B68     		ldr	r3, [r3]
 2852              		.loc 1 1827 23
 2853 006c 0A43     		orrs	r2, r2, r1
 2854 006e 5A60     		str	r2, [r3, #4]
1828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the high threshold */
1830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->HTR = AnalogWDGConfig->HighThreshold;
 2855              		.loc 1 1830 7
 2856 0070 7B68     		ldr	r3, [r7, #4]
 2857 0072 1B68     		ldr	r3, [r3]
 2858              		.loc 1 1830 40
 2859 0074 3A68     		ldr	r2, [r7]
 2860 0076 5268     		ldr	r2, [r2, #4]
 2861              		.loc 1 1830 23
 2862 0078 5A62     		str	r2, [r3, #36]
1831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 83


1832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the low threshold */
1833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->LTR = AnalogWDGConfig->LowThreshold;
 2863              		.loc 1 1833 7
 2864 007a 7B68     		ldr	r3, [r7, #4]
 2865 007c 1B68     		ldr	r3, [r3]
 2866              		.loc 1 1833 40
 2867 007e 3A68     		ldr	r2, [r7]
 2868 0080 9268     		ldr	r2, [r2, #8]
 2869              		.loc 1 1833 23
 2870 0082 9A62     		str	r2, [r3, #40]
1834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Clear the Analog watchdog channel select bits */
1836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 &= ~ADC_CR1_AWDCH;
 2871              		.loc 1 1836 7
 2872 0084 7B68     		ldr	r3, [r7, #4]
 2873 0086 1B68     		ldr	r3, [r3]
 2874              		.loc 1 1836 17
 2875 0088 5A68     		ldr	r2, [r3, #4]
 2876              		.loc 1 1836 7
 2877 008a 7B68     		ldr	r3, [r7, #4]
 2878 008c 1B68     		ldr	r3, [r3]
 2879              		.loc 1 1836 23
 2880 008e 22F01F02 		bic	r2, r2, #31
 2881 0092 5A60     		str	r2, [r3, #4]
1837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the Analog watchdog channel */
1839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 |= (uint32_t)((uint16_t)(AnalogWDGConfig->Channel));
 2882              		.loc 1 1839 7
 2883 0094 7B68     		ldr	r3, [r7, #4]
 2884 0096 1B68     		ldr	r3, [r3]
 2885              		.loc 1 1839 17
 2886 0098 5A68     		ldr	r2, [r3, #4]
 2887              		.loc 1 1839 63
 2888 009a 3B68     		ldr	r3, [r7]
 2889 009c DB68     		ldr	r3, [r3, #12]
 2890              		.loc 1 1839 37
 2891 009e 9BB2     		uxth	r3, r3
 2892              		.loc 1 1839 26
 2893 00a0 1946     		mov	r1, r3
 2894              		.loc 1 1839 7
 2895 00a2 7B68     		ldr	r3, [r7, #4]
 2896 00a4 1B68     		ldr	r3, [r3]
 2897              		.loc 1 1839 23
 2898 00a6 0A43     		orrs	r2, r2, r1
 2899 00a8 5A60     		str	r2, [r3, #4]
1840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
1842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 2900              		.loc 1 1842 3
 2901 00aa 7B68     		ldr	r3, [r7, #4]
 2902 00ac 0022     		movs	r2, #0
 2903 00ae 83F83C20 		strb	r2, [r3, #60]
1843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 2904              		.loc 1 1845 10
 2905 00b2 0023     		movs	r3, #0
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 84


 2906              	.L123:
1846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2907              		.loc 1 1846 1
 2908 00b4 1846     		mov	r0, r3
 2909 00b6 0C37     		adds	r7, r7, #12
 2910              	.LCFI110:
 2911              		.cfi_def_cfa_offset 4
 2912 00b8 BD46     		mov	sp, r7
 2913              	.LCFI111:
 2914              		.cfi_def_cfa_register 13
 2915              		@ sp needed
 2916 00ba 5DF8047B 		ldr	r7, [sp], #4
 2917              	.LCFI112:
 2918              		.cfi_restore 7
 2919              		.cfi_def_cfa_offset 0
 2920 00be 7047     		bx	lr
 2921              		.cfi_endproc
 2922              	.LFE235:
 2924              		.section	.text.HAL_ADC_GetState,"ax",%progbits
 2925              		.align	1
 2926              		.global	HAL_ADC_GetState
 2927              		.syntax unified
 2928              		.thumb
 2929              		.thumb_func
 2931              	HAL_ADC_GetState:
 2932              	.LFB236:
1847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
1850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 ADC Peripheral State functions
1853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *  @brief   ADC Peripheral State functions 
1854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *
1855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @verbatim   
1856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
1857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             ##### Peripheral State and errors functions #####
1858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================  
1859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]
1860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     This subsection provides functions allowing to
1861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Check the ADC state
1862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Check the ADC Error
1863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****          
1864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @endverbatim
1865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
1866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  return the ADC state
1870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL state
1873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** uint32_t HAL_ADC_GetState(ADC_HandleTypeDef* hadc)
1875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2933              		.loc 1 1875 1
 2934              		.cfi_startproc
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 85


 2935              		@ args = 0, pretend = 0, frame = 8
 2936              		@ frame_needed = 1, uses_anonymous_args = 0
 2937              		@ link register save eliminated.
 2938 0000 80B4     		push	{r7}
 2939              	.LCFI113:
 2940              		.cfi_def_cfa_offset 4
 2941              		.cfi_offset 7, -4
 2942 0002 83B0     		sub	sp, sp, #12
 2943              	.LCFI114:
 2944              		.cfi_def_cfa_offset 16
 2945 0004 00AF     		add	r7, sp, #0
 2946              	.LCFI115:
 2947              		.cfi_def_cfa_register 7
 2948 0006 7860     		str	r0, [r7, #4]
1876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return ADC state */
1877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return hadc->State;
 2949              		.loc 1 1877 14
 2950 0008 7B68     		ldr	r3, [r7, #4]
 2951 000a 1B6C     		ldr	r3, [r3, #64]
1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2952              		.loc 1 1878 1
 2953 000c 1846     		mov	r0, r3
 2954 000e 0C37     		adds	r7, r7, #12
 2955              	.LCFI116:
 2956              		.cfi_def_cfa_offset 4
 2957 0010 BD46     		mov	sp, r7
 2958              	.LCFI117:
 2959              		.cfi_def_cfa_register 13
 2960              		@ sp needed
 2961 0012 5DF8047B 		ldr	r7, [sp], #4
 2962              	.LCFI118:
 2963              		.cfi_restore 7
 2964              		.cfi_def_cfa_offset 0
 2965 0016 7047     		bx	lr
 2966              		.cfi_endproc
 2967              	.LFE236:
 2969              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 2970              		.align	1
 2971              		.global	HAL_ADC_GetError
 2972              		.syntax unified
 2973              		.thumb
 2974              		.thumb_func
 2976              	HAL_ADC_GetError:
 2977              	.LFB237:
1879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Return the ADC error code
1882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval ADC Error Code
1885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** uint32_t HAL_ADC_GetError(ADC_HandleTypeDef *hadc)
1887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2978              		.loc 1 1887 1
 2979              		.cfi_startproc
 2980              		@ args = 0, pretend = 0, frame = 8
 2981              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 86


 2982              		@ link register save eliminated.
 2983 0000 80B4     		push	{r7}
 2984              	.LCFI119:
 2985              		.cfi_def_cfa_offset 4
 2986              		.cfi_offset 7, -4
 2987 0002 83B0     		sub	sp, sp, #12
 2988              	.LCFI120:
 2989              		.cfi_def_cfa_offset 16
 2990 0004 00AF     		add	r7, sp, #0
 2991              	.LCFI121:
 2992              		.cfi_def_cfa_register 7
 2993 0006 7860     		str	r0, [r7, #4]
1888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return hadc->ErrorCode;
 2994              		.loc 1 1888 14
 2995 0008 7B68     		ldr	r3, [r7, #4]
 2996 000a 5B6C     		ldr	r3, [r3, #68]
1889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2997              		.loc 1 1889 1
 2998 000c 1846     		mov	r0, r3
 2999 000e 0C37     		adds	r7, r7, #12
 3000              	.LCFI122:
 3001              		.cfi_def_cfa_offset 4
 3002 0010 BD46     		mov	sp, r7
 3003              	.LCFI123:
 3004              		.cfi_def_cfa_register 13
 3005              		@ sp needed
 3006 0012 5DF8047B 		ldr	r7, [sp], #4
 3007              	.LCFI124:
 3008              		.cfi_restore 7
 3009              		.cfi_def_cfa_offset 0
 3010 0016 7047     		bx	lr
 3011              		.cfi_endproc
 3012              	.LFE237:
 3014              		.section	.text.ADC_Init,"ax",%progbits
 3015              		.align	1
 3016              		.syntax unified
 3017              		.thumb
 3018              		.thumb_func
 3020              	ADC_Init:
 3021              	.LFB238:
1890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
1893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @addtogroup ADC_Private_Functions
1896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
1897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Initializes the ADCx peripheral according to the specified parameters 
1901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         in the ADC_InitStruct without initializing the ADC MSP.       
1902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
1904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_Init(ADC_HandleTypeDef* hadc)
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 87


1907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 3022              		.loc 1 1907 1
 3023              		.cfi_startproc
 3024              		@ args = 0, pretend = 0, frame = 16
 3025              		@ frame_needed = 1, uses_anonymous_args = 0
 3026              		@ link register save eliminated.
 3027 0000 80B4     		push	{r7}
 3028              	.LCFI125:
 3029              		.cfi_def_cfa_offset 4
 3030              		.cfi_offset 7, -4
 3031 0002 85B0     		sub	sp, sp, #20
 3032              	.LCFI126:
 3033              		.cfi_def_cfa_offset 24
 3034 0004 00AF     		add	r7, sp, #0
 3035              	.LCFI127:
 3036              		.cfi_def_cfa_register 7
 3037 0006 7860     		str	r0, [r7, #4]
1908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
1909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC parameters */
1911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Pointer to the common control register to which is belonging hadc    */
1912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
1913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* control register)                                                    */
1914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 3038              		.loc 1 1914 17
 3039 0008 794B     		ldr	r3, .L135
 3040 000a FB60     		str	r3, [r7, #12]
1915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the ADC clock prescaler */
1917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 3041              		.loc 1 1917 16
 3042 000c FB68     		ldr	r3, [r7, #12]
 3043 000e 5B68     		ldr	r3, [r3, #4]
 3044              		.loc 1 1917 22
 3045 0010 23F44032 		bic	r2, r3, #196608
 3046 0014 FB68     		ldr	r3, [r7, #12]
 3047 0016 5A60     		str	r2, [r3, #4]
1918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 3048              		.loc 1 1918 16
 3049 0018 FB68     		ldr	r3, [r7, #12]
 3050 001a 5A68     		ldr	r2, [r3, #4]
 3051              		.loc 1 1918 36
 3052 001c 7B68     		ldr	r3, [r7, #4]
 3053 001e 5B68     		ldr	r3, [r3, #4]
 3054              		.loc 1 1918 22
 3055 0020 1A43     		orrs	r2, r2, r3
 3056 0022 FB68     		ldr	r3, [r7, #12]
 3057 0024 5A60     		str	r2, [r3, #4]
1919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC scan mode */
1921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 3058              		.loc 1 1921 7
 3059 0026 7B68     		ldr	r3, [r7, #4]
 3060 0028 1B68     		ldr	r3, [r3]
 3061              		.loc 1 1921 17
 3062 002a 5A68     		ldr	r2, [r3, #4]
 3063              		.loc 1 1921 7
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 88


 3064 002c 7B68     		ldr	r3, [r7, #4]
 3065 002e 1B68     		ldr	r3, [r3]
 3066              		.loc 1 1921 23
 3067 0030 22F48072 		bic	r2, r2, #256
 3068 0034 5A60     		str	r2, [r3, #4]
1922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 3069              		.loc 1 1922 7
 3070 0036 7B68     		ldr	r3, [r7, #4]
 3071 0038 1B68     		ldr	r3, [r3]
 3072              		.loc 1 1922 17
 3073 003a 5968     		ldr	r1, [r3, #4]
 3074              		.loc 1 1922 27
 3075 003c 7B68     		ldr	r3, [r7, #4]
 3076 003e 1B69     		ldr	r3, [r3, #16]
 3077 0040 1A02     		lsls	r2, r3, #8
 3078              		.loc 1 1922 7
 3079 0042 7B68     		ldr	r3, [r7, #4]
 3080 0044 1B68     		ldr	r3, [r3]
 3081              		.loc 1 1922 23
 3082 0046 0A43     		orrs	r2, r2, r1
 3083 0048 5A60     		str	r2, [r3, #4]
1923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC resolution */
1925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 3084              		.loc 1 1925 7
 3085 004a 7B68     		ldr	r3, [r7, #4]
 3086 004c 1B68     		ldr	r3, [r3]
 3087              		.loc 1 1925 17
 3088 004e 5A68     		ldr	r2, [r3, #4]
 3089              		.loc 1 1925 7
 3090 0050 7B68     		ldr	r3, [r7, #4]
 3091 0052 1B68     		ldr	r3, [r3]
 3092              		.loc 1 1925 23
 3093 0054 22F04072 		bic	r2, r2, #50331648
 3094 0058 5A60     		str	r2, [r3, #4]
1926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 |=  hadc->Init.Resolution;
 3095              		.loc 1 1926 7
 3096 005a 7B68     		ldr	r3, [r7, #4]
 3097 005c 1B68     		ldr	r3, [r3]
 3098              		.loc 1 1926 17
 3099 005e 5968     		ldr	r1, [r3, #4]
 3100              		.loc 1 1926 37
 3101 0060 7B68     		ldr	r3, [r7, #4]
 3102 0062 9A68     		ldr	r2, [r3, #8]
 3103              		.loc 1 1926 7
 3104 0064 7B68     		ldr	r3, [r7, #4]
 3105 0066 1B68     		ldr	r3, [r3]
 3106              		.loc 1 1926 23
 3107 0068 0A43     		orrs	r2, r2, r1
 3108 006a 5A60     		str	r2, [r3, #4]
1927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC data alignment */
1929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 3109              		.loc 1 1929 7
 3110 006c 7B68     		ldr	r3, [r7, #4]
 3111 006e 1B68     		ldr	r3, [r3]
 3112              		.loc 1 1929 17
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 89


 3113 0070 9A68     		ldr	r2, [r3, #8]
 3114              		.loc 1 1929 7
 3115 0072 7B68     		ldr	r3, [r7, #4]
 3116 0074 1B68     		ldr	r3, [r3]
 3117              		.loc 1 1929 23
 3118 0076 22F40062 		bic	r2, r2, #2048
 3119 007a 9A60     		str	r2, [r3, #8]
1930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= hadc->Init.DataAlign;
 3120              		.loc 1 1930 7
 3121 007c 7B68     		ldr	r3, [r7, #4]
 3122 007e 1B68     		ldr	r3, [r3]
 3123              		.loc 1 1930 17
 3124 0080 9968     		ldr	r1, [r3, #8]
 3125              		.loc 1 1930 36
 3126 0082 7B68     		ldr	r3, [r7, #4]
 3127 0084 DA68     		ldr	r2, [r3, #12]
 3128              		.loc 1 1930 7
 3129 0086 7B68     		ldr	r3, [r7, #4]
 3130 0088 1B68     		ldr	r3, [r3]
 3131              		.loc 1 1930 23
 3132 008a 0A43     		orrs	r2, r2, r1
 3133 008c 9A60     		str	r2, [r3, #8]
1931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable external trigger if trigger selection is different of software  */
1933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* start.                                                                 */
1934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Note: This configuration keeps the hardware feature of parameter       */
1935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
1936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       software start.                                                  */
1937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 3134              		.loc 1 1937 16
 3135 008e 7B68     		ldr	r3, [r7, #4]
 3136 0090 9B6A     		ldr	r3, [r3, #40]
 3137              		.loc 1 1937 5
 3138 0092 584A     		ldr	r2, .L135+4
 3139 0094 9342     		cmp	r3, r2
 3140 0096 22D0     		beq	.L131
1938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Select external trigger to start conversion */
1940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 3141              		.loc 1 1940 9
 3142 0098 7B68     		ldr	r3, [r7, #4]
 3143 009a 1B68     		ldr	r3, [r3]
 3144              		.loc 1 1940 19
 3145 009c 9A68     		ldr	r2, [r3, #8]
 3146              		.loc 1 1940 9
 3147 009e 7B68     		ldr	r3, [r7, #4]
 3148 00a0 1B68     		ldr	r3, [r3]
 3149              		.loc 1 1940 25
 3150 00a2 22F07062 		bic	r2, r2, #251658240
 3151 00a6 9A60     		str	r2, [r3, #8]
1941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 3152              		.loc 1 1941 9
 3153 00a8 7B68     		ldr	r3, [r7, #4]
 3154 00aa 1B68     		ldr	r3, [r3]
 3155              		.loc 1 1941 19
 3156 00ac 9968     		ldr	r1, [r3, #8]
 3157              		.loc 1 1941 38
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 90


 3158 00ae 7B68     		ldr	r3, [r7, #4]
 3159 00b0 9A6A     		ldr	r2, [r3, #40]
 3160              		.loc 1 1941 9
 3161 00b2 7B68     		ldr	r3, [r7, #4]
 3162 00b4 1B68     		ldr	r3, [r3]
 3163              		.loc 1 1941 25
 3164 00b6 0A43     		orrs	r2, r2, r1
 3165 00b8 9A60     		str	r2, [r3, #8]
1942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Select external trigger polarity */
1944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 3166              		.loc 1 1944 9
 3167 00ba 7B68     		ldr	r3, [r7, #4]
 3168 00bc 1B68     		ldr	r3, [r3]
 3169              		.loc 1 1944 19
 3170 00be 9A68     		ldr	r2, [r3, #8]
 3171              		.loc 1 1944 9
 3172 00c0 7B68     		ldr	r3, [r7, #4]
 3173 00c2 1B68     		ldr	r3, [r3]
 3174              		.loc 1 1944 25
 3175 00c4 22F04052 		bic	r2, r2, #805306368
 3176 00c8 9A60     		str	r2, [r3, #8]
1945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 3177              		.loc 1 1945 9
 3178 00ca 7B68     		ldr	r3, [r7, #4]
 3179 00cc 1B68     		ldr	r3, [r3]
 3180              		.loc 1 1945 19
 3181 00ce 9968     		ldr	r1, [r3, #8]
 3182              		.loc 1 1945 38
 3183 00d0 7B68     		ldr	r3, [r7, #4]
 3184 00d2 DA6A     		ldr	r2, [r3, #44]
 3185              		.loc 1 1945 9
 3186 00d4 7B68     		ldr	r3, [r7, #4]
 3187 00d6 1B68     		ldr	r3, [r3]
 3188              		.loc 1 1945 25
 3189 00d8 0A43     		orrs	r2, r2, r1
 3190 00da 9A60     		str	r2, [r3, #8]
 3191 00dc 0FE0     		b	.L132
 3192              	.L131:
1946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Reset the external trigger */
1950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 3193              		.loc 1 1950 9
 3194 00de 7B68     		ldr	r3, [r7, #4]
 3195 00e0 1B68     		ldr	r3, [r3]
 3196              		.loc 1 1950 19
 3197 00e2 9A68     		ldr	r2, [r3, #8]
 3198              		.loc 1 1950 9
 3199 00e4 7B68     		ldr	r3, [r7, #4]
 3200 00e6 1B68     		ldr	r3, [r3]
 3201              		.loc 1 1950 25
 3202 00e8 22F07062 		bic	r2, r2, #251658240
 3203 00ec 9A60     		str	r2, [r3, #8]
1951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 3204              		.loc 1 1951 9
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 91


 3205 00ee 7B68     		ldr	r3, [r7, #4]
 3206 00f0 1B68     		ldr	r3, [r3]
 3207              		.loc 1 1951 19
 3208 00f2 9A68     		ldr	r2, [r3, #8]
 3209              		.loc 1 1951 9
 3210 00f4 7B68     		ldr	r3, [r7, #4]
 3211 00f6 1B68     		ldr	r3, [r3]
 3212              		.loc 1 1951 25
 3213 00f8 22F04052 		bic	r2, r2, #805306368
 3214 00fc 9A60     		str	r2, [r3, #8]
 3215              	.L132:
1952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable or disable ADC continuous conversion mode */
1955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 3216              		.loc 1 1955 7
 3217 00fe 7B68     		ldr	r3, [r7, #4]
 3218 0100 1B68     		ldr	r3, [r3]
 3219              		.loc 1 1955 17
 3220 0102 9A68     		ldr	r2, [r3, #8]
 3221              		.loc 1 1955 7
 3222 0104 7B68     		ldr	r3, [r7, #4]
 3223 0106 1B68     		ldr	r3, [r3]
 3224              		.loc 1 1955 23
 3225 0108 22F00202 		bic	r2, r2, #2
 3226 010c 9A60     		str	r2, [r3, #8]
1956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 3227              		.loc 1 1956 7
 3228 010e 7B68     		ldr	r3, [r7, #4]
 3229 0110 1B68     		ldr	r3, [r3]
 3230              		.loc 1 1956 17
 3231 0112 9968     		ldr	r1, [r3, #8]
 3232              		.loc 1 1956 26
 3233 0114 7B68     		ldr	r3, [r7, #4]
 3234 0116 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 3235 0118 5A00     		lsls	r2, r3, #1
 3236              		.loc 1 1956 7
 3237 011a 7B68     		ldr	r3, [r7, #4]
 3238 011c 1B68     		ldr	r3, [r3]
 3239              		.loc 1 1956 23
 3240 011e 0A43     		orrs	r2, r2, r1
 3241 0120 9A60     		str	r2, [r3, #8]
1957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc->Init.DiscontinuousConvMode != DISABLE)
 3242              		.loc 1 1958 16
 3243 0122 7B68     		ldr	r3, [r7, #4]
 3244 0124 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 3245              		.loc 1 1958 5
 3246 0128 002B     		cmp	r3, #0
 3247 012a 1BD0     		beq	.L133
1959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
1961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the selected ADC regular discontinuous mode */
1963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 3248              		.loc 1 1963 9
 3249 012c 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 92


 3250 012e 1B68     		ldr	r3, [r3]
 3251              		.loc 1 1963 19
 3252 0130 5A68     		ldr	r2, [r3, #4]
 3253              		.loc 1 1963 9
 3254 0132 7B68     		ldr	r3, [r7, #4]
 3255 0134 1B68     		ldr	r3, [r3]
 3256              		.loc 1 1963 25
 3257 0136 42F40062 		orr	r2, r2, #2048
 3258 013a 5A60     		str	r2, [r3, #4]
1964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the number of channels to be converted in discontinuous mode */
1966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 3259              		.loc 1 1966 9
 3260 013c 7B68     		ldr	r3, [r7, #4]
 3261 013e 1B68     		ldr	r3, [r3]
 3262              		.loc 1 1966 19
 3263 0140 5A68     		ldr	r2, [r3, #4]
 3264              		.loc 1 1966 9
 3265 0142 7B68     		ldr	r3, [r7, #4]
 3266 0144 1B68     		ldr	r3, [r3]
 3267              		.loc 1 1966 25
 3268 0146 22F46042 		bic	r2, r2, #57344
 3269 014a 5A60     		str	r2, [r3, #4]
1967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 3270              		.loc 1 1967 9
 3271 014c 7B68     		ldr	r3, [r7, #4]
 3272 014e 1B68     		ldr	r3, [r3]
 3273              		.loc 1 1967 19
 3274 0150 5968     		ldr	r1, [r3, #4]
 3275              		.loc 1 1967 29
 3276 0152 7B68     		ldr	r3, [r7, #4]
 3277 0154 5B6A     		ldr	r3, [r3, #36]
 3278 0156 013B     		subs	r3, r3, #1
 3279 0158 5A03     		lsls	r2, r3, #13
 3280              		.loc 1 1967 9
 3281 015a 7B68     		ldr	r3, [r7, #4]
 3282 015c 1B68     		ldr	r3, [r3]
 3283              		.loc 1 1967 25
 3284 015e 0A43     		orrs	r2, r2, r1
 3285 0160 5A60     		str	r2, [r3, #4]
 3286 0162 07E0     		b	.L134
 3287              	.L133:
1968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the selected ADC regular discontinuous mode */
1972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 3288              		.loc 1 1972 9
 3289 0164 7B68     		ldr	r3, [r7, #4]
 3290 0166 1B68     		ldr	r3, [r3]
 3291              		.loc 1 1972 19
 3292 0168 5A68     		ldr	r2, [r3, #4]
 3293              		.loc 1 1972 9
 3294 016a 7B68     		ldr	r3, [r7, #4]
 3295 016c 1B68     		ldr	r3, [r3]
 3296              		.loc 1 1972 25
 3297 016e 22F40062 		bic	r2, r2, #2048
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 93


 3298 0172 5A60     		str	r2, [r3, #4]
 3299              	.L134:
1973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC number of conversion */
1976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 3300              		.loc 1 1976 7
 3301 0174 7B68     		ldr	r3, [r7, #4]
 3302 0176 1B68     		ldr	r3, [r3]
 3303              		.loc 1 1976 17
 3304 0178 DA6A     		ldr	r2, [r3, #44]
 3305              		.loc 1 1976 7
 3306 017a 7B68     		ldr	r3, [r7, #4]
 3307 017c 1B68     		ldr	r3, [r3]
 3308              		.loc 1 1976 24
 3309 017e 22F47002 		bic	r2, r2, #15728640
 3310 0182 DA62     		str	r2, [r3, #44]
1977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 3311              		.loc 1 1977 7
 3312 0184 7B68     		ldr	r3, [r7, #4]
 3313 0186 1B68     		ldr	r3, [r3]
 3314              		.loc 1 1977 17
 3315 0188 D96A     		ldr	r1, [r3, #44]
 3316              		.loc 1 1977 28
 3317 018a 7B68     		ldr	r3, [r7, #4]
 3318 018c DB69     		ldr	r3, [r3, #28]
 3319 018e 013B     		subs	r3, r3, #1
 3320 0190 1A05     		lsls	r2, r3, #20
 3321              		.loc 1 1977 7
 3322 0192 7B68     		ldr	r3, [r7, #4]
 3323 0194 1B68     		ldr	r3, [r3]
 3324              		.loc 1 1977 24
 3325 0196 0A43     		orrs	r2, r2, r1
 3326 0198 DA62     		str	r2, [r3, #44]
1978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable or disable ADC DMA continuous request */
1980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 3327              		.loc 1 1980 7
 3328 019a 7B68     		ldr	r3, [r7, #4]
 3329 019c 1B68     		ldr	r3, [r3]
 3330              		.loc 1 1980 17
 3331 019e 9A68     		ldr	r2, [r3, #8]
 3332              		.loc 1 1980 7
 3333 01a0 7B68     		ldr	r3, [r7, #4]
 3334 01a2 1B68     		ldr	r3, [r3]
 3335              		.loc 1 1980 23
 3336 01a4 22F40072 		bic	r2, r2, #512
 3337 01a8 9A60     		str	r2, [r3, #8]
1981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 3338              		.loc 1 1981 7
 3339 01aa 7B68     		ldr	r3, [r7, #4]
 3340 01ac 1B68     		ldr	r3, [r3]
 3341              		.loc 1 1981 17
 3342 01ae 9968     		ldr	r1, [r3, #8]
 3343              		.loc 1 1981 26
 3344 01b0 7B68     		ldr	r3, [r7, #4]
 3345 01b2 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 94


 3346 01b6 5A02     		lsls	r2, r3, #9
 3347              		.loc 1 1981 7
 3348 01b8 7B68     		ldr	r3, [r7, #4]
 3349 01ba 1B68     		ldr	r3, [r3]
 3350              		.loc 1 1981 23
 3351 01bc 0A43     		orrs	r2, r2, r1
 3352 01be 9A60     		str	r2, [r3, #8]
1982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable or disable ADC end of conversion selection */
1984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 3353              		.loc 1 1984 7
 3354 01c0 7B68     		ldr	r3, [r7, #4]
 3355 01c2 1B68     		ldr	r3, [r3]
 3356              		.loc 1 1984 17
 3357 01c4 9A68     		ldr	r2, [r3, #8]
 3358              		.loc 1 1984 7
 3359 01c6 7B68     		ldr	r3, [r7, #4]
 3360 01c8 1B68     		ldr	r3, [r3]
 3361              		.loc 1 1984 23
 3362 01ca 22F48062 		bic	r2, r2, #1024
 3363 01ce 9A60     		str	r2, [r3, #8]
1985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 3364              		.loc 1 1985 7
 3365 01d0 7B68     		ldr	r3, [r7, #4]
 3366 01d2 1B68     		ldr	r3, [r3]
 3367              		.loc 1 1985 17
 3368 01d4 9968     		ldr	r1, [r3, #8]
 3369              		.loc 1 1985 26
 3370 01d6 7B68     		ldr	r3, [r7, #4]
 3371 01d8 5B69     		ldr	r3, [r3, #20]
 3372 01da 9A02     		lsls	r2, r3, #10
 3373              		.loc 1 1985 7
 3374 01dc 7B68     		ldr	r3, [r7, #4]
 3375 01de 1B68     		ldr	r3, [r3]
 3376              		.loc 1 1985 23
 3377 01e0 0A43     		orrs	r2, r2, r1
 3378 01e2 9A60     		str	r2, [r3, #8]
1986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 3379              		.loc 1 1986 1
 3380 01e4 00BF     		nop
 3381 01e6 1437     		adds	r7, r7, #20
 3382              	.LCFI128:
 3383              		.cfi_def_cfa_offset 4
 3384 01e8 BD46     		mov	sp, r7
 3385              	.LCFI129:
 3386              		.cfi_def_cfa_register 13
 3387              		@ sp needed
 3388 01ea 5DF8047B 		ldr	r7, [sp], #4
 3389              	.LCFI130:
 3390              		.cfi_restore 7
 3391              		.cfi_def_cfa_offset 0
 3392 01ee 7047     		bx	lr
 3393              	.L136:
 3394              		.align	2
 3395              	.L135:
 3396 01f0 00230140 		.word	1073816320
 3397 01f4 0100000F 		.word	251658241
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 95


 3398              		.cfi_endproc
 3399              	.LFE238:
 3401              		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 3402              		.align	1
 3403              		.syntax unified
 3404              		.thumb
 3405              		.thumb_func
 3407              	ADC_DMAConvCplt:
 3408              	.LFB239:
1987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  DMA transfer complete callback. 
1990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
1991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *                the configuration information for the specified DMA module.
1992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)   
1995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 3409              		.loc 1 1995 1
 3410              		.cfi_startproc
 3411              		@ args = 0, pretend = 0, frame = 16
 3412              		@ frame_needed = 1, uses_anonymous_args = 0
 3413 0000 80B5     		push	{r7, lr}
 3414              	.LCFI131:
 3415              		.cfi_def_cfa_offset 8
 3416              		.cfi_offset 7, -8
 3417              		.cfi_offset 14, -4
 3418 0002 84B0     		sub	sp, sp, #16
 3419              	.LCFI132:
 3420              		.cfi_def_cfa_offset 24
 3421 0004 00AF     		add	r7, sp, #0
 3422              	.LCFI133:
 3423              		.cfi_def_cfa_register 7
 3424 0006 7860     		str	r0, [r7, #4]
1996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
1997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3425              		.loc 1 1997 22
 3426 0008 7B68     		ldr	r3, [r7, #4]
 3427 000a 9B6B     		ldr	r3, [r3, #56]
 3428 000c FB60     		str	r3, [r7, #12]
1998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Update state machine on conversion status if not in error state */
2000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
 3429              		.loc 1 2000 7
 3430 000e FB68     		ldr	r3, [r7, #12]
 3431 0010 1B6C     		ldr	r3, [r3, #64]
 3432 0012 03F05003 		and	r3, r3, #80
 3433              		.loc 1 2000 6
 3434 0016 002B     		cmp	r3, #0
 3435 0018 3CD1     		bne	.L138
2001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
2002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update ADC state machine */
2003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 3436              		.loc 1 2003 5
 3437 001a FB68     		ldr	r3, [r7, #12]
 3438 001c 1B6C     		ldr	r3, [r3, #64]
 3439 001e 43F40072 		orr	r2, r3, #512
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 96


 3440 0022 FB68     		ldr	r3, [r7, #12]
 3441 0024 1A64     		str	r2, [r3, #64]
2004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
2005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular   */
2006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going.      */
2007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Note: On STM32F4, there is no independent flag of end of sequence.   */
2008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       The test of scan sequence on going is done either with scan    */
2009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       sequence disabled or with end of conversion flag set to        */
2010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       of end of sequence.                                            */
2011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 3442              		.loc 1 2011 8
 3443 0026 FB68     		ldr	r3, [r7, #12]
 3444 0028 1B68     		ldr	r3, [r3]
 3445 002a 9B68     		ldr	r3, [r3, #8]
 3446 002c 03F04053 		and	r3, r3, #805306368
 3447              		.loc 1 2011 7
 3448 0030 002B     		cmp	r3, #0
 3449 0032 2BD1     		bne	.L139
2012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 3450              		.loc 1 2012 19
 3451 0034 FB68     		ldr	r3, [r7, #12]
 3452 0036 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
2011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 3453              		.loc 1 2011 62 discriminator 1
 3454 0038 002B     		cmp	r3, #0
 3455 003a 27D1     		bne	.L139
2013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 3456              		.loc 1 2013 9
 3457 003c FB68     		ldr	r3, [r7, #12]
 3458 003e 1B68     		ldr	r3, [r3]
 3459 0040 DB6A     		ldr	r3, [r3, #44]
 3460 0042 03F47003 		and	r3, r3, #15728640
2012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 3461              		.loc 1 2012 62
 3462 0046 002B     		cmp	r3, #0
 3463 0048 06D0     		beq	.L140
2014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 3464              		.loc 1 2014 9
 3465 004a FB68     		ldr	r3, [r7, #12]
 3466 004c 1B68     		ldr	r3, [r3]
 3467 004e 9B68     		ldr	r3, [r3, #8]
 3468 0050 03F48063 		and	r3, r3, #1024
2013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 3469              		.loc 1 2013 58
 3470 0054 002B     		cmp	r3, #0
 3471 0056 19D1     		bne	.L139
 3472              	.L140:
2015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
2016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Disable ADC end of single conversion interrupt on group regular */
2017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Note: Overrun interrupt was enabled with EOC interrupt in          */
2018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* HAL_ADC_Start_IT(), but is not disabled here because can be used   */
2019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* by overrun IRQ process below.                                      */
2020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 3473              		.loc 1 2020 7
 3474 0058 FB68     		ldr	r3, [r7, #12]
 3475 005a 1B68     		ldr	r3, [r3]
 3476 005c 5A68     		ldr	r2, [r3, #4]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 97


 3477 005e FB68     		ldr	r3, [r7, #12]
 3478 0060 1B68     		ldr	r3, [r3]
 3479 0062 22F02002 		bic	r2, r2, #32
 3480 0066 5A60     		str	r2, [r3, #4]
2021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
2022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
2023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 3481              		.loc 1 2023 7
 3482 0068 FB68     		ldr	r3, [r7, #12]
 3483 006a 1B6C     		ldr	r3, [r3, #64]
 3484 006c 23F48072 		bic	r2, r3, #256
 3485 0070 FB68     		ldr	r3, [r7, #12]
 3486 0072 1A64     		str	r2, [r3, #64]
2024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
2025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 3487              		.loc 1 2025 11
 3488 0074 FB68     		ldr	r3, [r7, #12]
 3489 0076 1B6C     		ldr	r3, [r3, #64]
 3490 0078 03F48053 		and	r3, r3, #4096
 3491              		.loc 1 2025 10
 3492 007c 002B     		cmp	r3, #0
 3493 007e 05D1     		bne	.L139
2026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
2027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 3494              		.loc 1 2027 9
 3495 0080 FB68     		ldr	r3, [r7, #12]
 3496 0082 1B6C     		ldr	r3, [r3, #64]
 3497 0084 43F00102 		orr	r2, r3, #1
 3498 0088 FB68     		ldr	r3, [r7, #12]
 3499 008a 1A64     		str	r2, [r3, #64]
 3500              	.L139:
2028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
2029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
2030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
2031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Conversion complete callback */
2032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
2034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
2035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
 3501              		.loc 1 2035 5
 3502 008c F868     		ldr	r0, [r7, #12]
 3503 008e FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
2036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
2038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else /* DMA and-or internal error occurred */
2039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
2041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
2042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Call HAL ADC Error Callback function */
2043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
2045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
2046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
2047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
2049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 	else
2050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 	{
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 98


2051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Call DMA error callback */
2052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       hadc->DMA_Handle->XferErrorCallback(hdma);
2053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
2054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
2055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 3504              		.loc 1 2055 1
 3505 0092 0EE0     		b	.L143
 3506              	.L138:
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 3507              		.loc 1 2040 14
 3508 0094 FB68     		ldr	r3, [r7, #12]
 3509 0096 1B6C     		ldr	r3, [r3, #64]
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 3510              		.loc 1 2040 22
 3511 0098 03F01003 		and	r3, r3, #16
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 3512              		.loc 1 2040 8
 3513 009c 002B     		cmp	r3, #0
 3514 009e 03D0     		beq	.L142
2046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 3515              		.loc 1 2046 7
 3516 00a0 F868     		ldr	r0, [r7, #12]
 3517 00a2 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 3518              		.loc 1 2055 1
 3519 00a6 04E0     		b	.L143
 3520              	.L142:
2052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 3521              		.loc 1 2052 11
 3522 00a8 FB68     		ldr	r3, [r7, #12]
 3523 00aa 9B6B     		ldr	r3, [r3, #56]
2052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 3524              		.loc 1 2052 23
 3525 00ac DB6C     		ldr	r3, [r3, #76]
2052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 3526              		.loc 1 2052 7
 3527 00ae 7868     		ldr	r0, [r7, #4]
 3528 00b0 9847     		blx	r3
 3529              	.LVL0:
 3530              	.L143:
 3531              		.loc 1 2055 1
 3532 00b2 00BF     		nop
 3533 00b4 1037     		adds	r7, r7, #16
 3534              	.LCFI134:
 3535              		.cfi_def_cfa_offset 8
 3536 00b6 BD46     		mov	sp, r7
 3537              	.LCFI135:
 3538              		.cfi_def_cfa_register 13
 3539              		@ sp needed
 3540 00b8 80BD     		pop	{r7, pc}
 3541              		.cfi_endproc
 3542              	.LFE239:
 3544              		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 3545              		.align	1
 3546              		.syntax unified
 3547              		.thumb
 3548              		.thumb_func
 3550              	ADC_DMAHalfConvCplt:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 99


 3551              	.LFB240:
2056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
2057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
2058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  DMA half transfer complete callback. 
2059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *                the configuration information for the specified DMA module.
2061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
2062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
2063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)   
2064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 3552              		.loc 1 2064 1
 3553              		.cfi_startproc
 3554              		@ args = 0, pretend = 0, frame = 16
 3555              		@ frame_needed = 1, uses_anonymous_args = 0
 3556 0000 80B5     		push	{r7, lr}
 3557              	.LCFI136:
 3558              		.cfi_def_cfa_offset 8
 3559              		.cfi_offset 7, -8
 3560              		.cfi_offset 14, -4
 3561 0002 84B0     		sub	sp, sp, #16
 3562              	.LCFI137:
 3563              		.cfi_def_cfa_offset 24
 3564 0004 00AF     		add	r7, sp, #0
 3565              	.LCFI138:
 3566              		.cfi_def_cfa_register 7
 3567 0006 7860     		str	r0, [r7, #4]
2065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3568              		.loc 1 2065 22
 3569 0008 7B68     		ldr	r3, [r7, #4]
 3570 000a 9B6B     		ldr	r3, [r3, #56]
 3571 000c FB60     		str	r3, [r7, #12]
2066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    /* Half conversion callback */
2067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->ConvHalfCpltCallback(hadc);
2069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
2070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc);
 3572              		.loc 1 2070 3
 3573 000e F868     		ldr	r0, [r7, #12]
 3574 0010 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
2071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 3575              		.loc 1 2072 1
 3576 0014 00BF     		nop
 3577 0016 1037     		adds	r7, r7, #16
 3578              	.LCFI139:
 3579              		.cfi_def_cfa_offset 8
 3580 0018 BD46     		mov	sp, r7
 3581              	.LCFI140:
 3582              		.cfi_def_cfa_register 13
 3583              		@ sp needed
 3584 001a 80BD     		pop	{r7, pc}
 3585              		.cfi_endproc
 3586              	.LFE240:
 3588              		.section	.text.ADC_DMAError,"ax",%progbits
 3589              		.align	1
 3590              		.syntax unified
 3591              		.thumb
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 100


 3592              		.thumb_func
 3594              	ADC_DMAError:
 3595              	.LFB241:
2073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
2074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
2075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  DMA error callback 
2076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *                the configuration information for the specified DMA module.
2078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
2079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
2080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma)   
2081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 3596              		.loc 1 2081 1
 3597              		.cfi_startproc
 3598              		@ args = 0, pretend = 0, frame = 16
 3599              		@ frame_needed = 1, uses_anonymous_args = 0
 3600 0000 80B5     		push	{r7, lr}
 3601              	.LCFI141:
 3602              		.cfi_def_cfa_offset 8
 3603              		.cfi_offset 7, -8
 3604              		.cfi_offset 14, -4
 3605 0002 84B0     		sub	sp, sp, #16
 3606              	.LCFI142:
 3607              		.cfi_def_cfa_offset 24
 3608 0004 00AF     		add	r7, sp, #0
 3609              	.LCFI143:
 3610              		.cfi_def_cfa_register 7
 3611 0006 7860     		str	r0, [r7, #4]
2082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3612              		.loc 1 2082 22
 3613 0008 7B68     		ldr	r3, [r7, #4]
 3614 000a 9B6B     		ldr	r3, [r3, #56]
 3615 000c FB60     		str	r3, [r7, #12]
2083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->State= HAL_ADC_STATE_ERROR_DMA;
 3616              		.loc 1 2083 14
 3617 000e FB68     		ldr	r3, [r7, #12]
 3618 0010 4022     		movs	r2, #64
 3619 0012 1A64     		str	r2, [r3, #64]
2084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC error code to DMA error */
2085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->ErrorCode |= HAL_ADC_ERROR_DMA;
 3620              		.loc 1 2085 7
 3621 0014 FB68     		ldr	r3, [r7, #12]
 3622 0016 5B6C     		ldr	r3, [r3, #68]
 3623              		.loc 1 2085 19
 3624 0018 43F00402 		orr	r2, r3, #4
 3625 001c FB68     		ldr	r3, [r7, #12]
 3626 001e 5A64     		str	r2, [r3, #68]
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    /* Error callback */
2087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->ErrorCallback(hadc);
2089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
2090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc);
 3627              		.loc 1 2090 3
 3628 0020 F868     		ldr	r0, [r7, #12]
 3629 0022 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
2091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 101


 3630              		.loc 1 2092 1
 3631 0026 00BF     		nop
 3632 0028 1037     		adds	r7, r7, #16
 3633              	.LCFI144:
 3634              		.cfi_def_cfa_offset 8
 3635 002a BD46     		mov	sp, r7
 3636              	.LCFI145:
 3637              		.cfi_def_cfa_register 13
 3638              		@ sp needed
 3639 002c 80BD     		pop	{r7, pc}
 3640              		.cfi_endproc
 3641              	.LFE241:
 3643              		.text
 3644              	.Letext0:
 3645              		.file 2 "C:/tools/arm-gnu-toolchain-13.2.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/include/m
 3646              		.file 3 "C:/tools/arm-gnu-toolchain-13.2.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/include/s
 3647              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 3648              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 3649              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 3650              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 3651              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 3652              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 3653              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc_ex.h"
 3654              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 102


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hal_adc.c
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:21     .text.HAL_ADC_Init:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:27     .text.HAL_ADC_Init:00000000 HAL_ADC_Init
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:226    .text.HAL_ADC_MspInit:00000000 HAL_ADC_MspInit
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:3020   .text.ADC_Init:00000000 ADC_Init
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:130    .text.HAL_ADC_DeInit:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:136    .text.HAL_ADC_DeInit:00000000 HAL_ADC_DeInit
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:268    .text.HAL_ADC_MspDeInit:00000000 HAL_ADC_MspDeInit
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:220    .text.HAL_ADC_MspInit:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:262    .text.HAL_ADC_MspDeInit:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:304    .text.HAL_ADC_Start:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:310    .text.HAL_ADC_Start:00000000 HAL_ADC_Start
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:545    .text.HAL_ADC_Start:00000158 $d
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:553    .text.HAL_ADC_Stop:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:559    .text.HAL_ADC_Stop:00000000 HAL_ADC_Stop
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:641    .text.HAL_ADC_PollForConversion:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:647    .text.HAL_ADC_PollForConversion:00000000 HAL_ADC_PollForConversion
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:833    .text.HAL_ADC_PollForEvent:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:839    .text.HAL_ADC_PollForEvent:00000000 HAL_ADC_PollForEvent
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:973    .text.HAL_ADC_Start_IT:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:979    .text.HAL_ADC_Start_IT:00000000 HAL_ADC_Start_IT
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:1223   .text.HAL_ADC_Start_IT:0000016c $d
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:1231   .text.HAL_ADC_Stop_IT:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:1237   .text.HAL_ADC_Stop_IT:00000000 HAL_ADC_Stop_IT
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:1328   .text.HAL_ADC_IRQHandler:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:1334   .text.HAL_ADC_IRQHandler:00000000 HAL_ADC_IRQHandler
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:2176   .text.HAL_ADC_ConvCpltCallback:00000000 HAL_ADC_ConvCpltCallback
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:2260   .text.HAL_ADC_LevelOutOfWindowCallback:00000000 HAL_ADC_LevelOutOfWindowCallback
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:2302   .text.HAL_ADC_ErrorCallback:00000000 HAL_ADC_ErrorCallback
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:1671   .text.HAL_ADC_Start_DMA:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:1677   .text.HAL_ADC_Start_DMA:00000000 HAL_ADC_Start_DMA
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:1979   .text.HAL_ADC_Start_DMA:000001c4 $d
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:3407   .text.ADC_DMAConvCplt:00000000 ADC_DMAConvCplt
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:3550   .text.ADC_DMAHalfConvCplt:00000000 ADC_DMAHalfConvCplt
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:3594   .text.ADC_DMAError:00000000 ADC_DMAError
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:1990   .text.HAL_ADC_Stop_DMA:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:1996   .text.HAL_ADC_Stop_DMA:00000000 HAL_ADC_Stop_DMA
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:2123   .text.HAL_ADC_GetValue:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:2129   .text.HAL_ADC_GetValue:00000000 HAL_ADC_GetValue
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:2170   .text.HAL_ADC_ConvCpltCallback:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:2212   .text.HAL_ADC_ConvHalfCpltCallback:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:2218   .text.HAL_ADC_ConvHalfCpltCallback:00000000 HAL_ADC_ConvHalfCpltCallback
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:2254   .text.HAL_ADC_LevelOutOfWindowCallback:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:2296   .text.HAL_ADC_ErrorCallback:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:2338   .text.HAL_ADC_ConfigChannel:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:2344   .text.HAL_ADC_ConfigChannel:00000000 HAL_ADC_ConfigChannel
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:2756   .text.HAL_ADC_ConfigChannel:00000250 $d
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:2765   .text.HAL_ADC_AnalogWDGConfig:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:2771   .text.HAL_ADC_AnalogWDGConfig:00000000 HAL_ADC_AnalogWDGConfig
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:2925   .text.HAL_ADC_GetState:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:2931   .text.HAL_ADC_GetState:00000000 HAL_ADC_GetState
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:2970   .text.HAL_ADC_GetError:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:2976   .text.HAL_ADC_GetError:00000000 HAL_ADC_GetError
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:3015   .text.ADC_Init:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:3396   .text.ADC_Init:000001f0 $d
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:3402   .text.ADC_DMAConvCplt:00000000 $t
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s 			page 103


C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:3545   .text.ADC_DMAHalfConvCplt:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccTyyH5v.s:3589   .text.ADC_DMAError:00000000 $t

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_ADCEx_InjectedConvCpltCallback
HAL_DMA_Start_IT
HAL_DMA_Abort
