ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_hal_uart.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c"
  20              		.section	.text.HAL_UART_Init,"ax",%progbits
  21              		.align	1
  22              		.global	HAL_UART_Init
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	HAL_UART_Init:
  28              	.LFB216:
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @file    stm32f4xx_hal_uart.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @attention
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * Copyright (c) 2016 STMicroelectronics.
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * All rights reserved.
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * This software is licensed under terms that can be found in the LICENSE file
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * in the root directory of this software component.
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @verbatim
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                         ##### How to use this driver #####
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 2


  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) UART pins configuration:
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the UART TX/RX pins as alternate function pull-up.
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx stream.
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   Tx/Rx parameters.
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx stream.
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx stream.
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority and enable the NVIC USART IRQ handle
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   (used for last byte sending completion detection in DMA non circular mode)
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the huart Init structure.
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_UART_Init() API.
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt,
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             and receive process.
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customized
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_MspInit() API.
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ##### Callback registration #####
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ==================================
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Use Function HAL_UART_RegisterCallback() to register a user callback.
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 3


  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Function HAL_UART_RegisterCallback() allows to register following callbacks:
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and a pointer to the user callback function.
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Use function HAL_UART_UnRegisterCallback() to reset a callback to the default
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     weak (surcharged) function.
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and the Callback ID.
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This function allows to reset following callbacks:
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     For specific callback RxEventCallback, use dedicated registration/reset functions:
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     respectively HAL_UART_RegisterRxEventCallback() , HAL_UART_UnRegisterRxEventCallback().
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     By default, after the HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     examples HAL_UART_TxCpltCallback(), HAL_UART_RxHalfCpltCallback().
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the HAL_UART_Init()
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the HAL_UART_Init() and HAL_UART_DeInit()
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     using HAL_UART_RegisterCallback() before calling HAL_UART_DeInit()
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     or HAL_UART_Init() function.
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     not defined, the callback registration feature is not available
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 4


 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         Three operation modes are available within this driver :
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Polling mode IO operation ***
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      =================================
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit()
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Interrupt mode IO operation ***
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ===================================
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT()
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT()
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** DMA mode IO operation ***
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ==============================
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA()
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA()
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..] This subsection also provides a set of additional functions providing enhanced reception
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     services to user. (For example, these functions allow application to handle use cases
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     where number of data to be received is unknown).
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Compared to standard reception services which only consider number of received
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         data elements as reception completion criteria, these functions also consider additional ev
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         as triggers for updating reception status to caller :
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Detection of inactivity period (RX line has not been active for a given period).
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           (++) RX inactivity detected by IDLE event, i.e. RX line has been in idle state (normally 
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                for 1 frame time, after last received byte.
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) There are two mode of transfer:
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Blocking mode: The reception is performed in polling mode, until either expected number 
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            or till IDLE event occurs. Reception is handled only during function execution.
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 5


 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            When function exits, no data reception could occur. HAL status and number of actually re
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            are returned by function after finishing transfer.
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Non-Blocking mode: The reception is performed using Interrupts or DMA.
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            These API's return the HAL status.
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The end of the data processing will be indicated through the
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when using DMA mode.
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL_UARTEx_RxEventCallback() user callback will be executed during Receive process
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a reception error is det
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Blocking mode API:
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UARTEx_ReceiveToIdle()
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode API with Interrupt:
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UARTEx_ReceiveToIdle_IT()
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode API with DMA:
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UARTEx_ReceiveToIdle_DMA()
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** UART HAL driver macros list ***
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      =============================================
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @endverbatim
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) Additional remark: If the parity is enabled, then the MSB bit of the data written
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            in the data register is transmitted but is changed by the parity bit.
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Depending on the frame length defined by the M bit (8-bits or 9-bits),
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the possible UART frame formats are as listed in the following table:
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     +-------------------------------------------------------------+
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |   M bit |  PCE bit  |            UART frame                 |
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------------------|---------------------------------------|
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    0    |    0      |    | SB | 8 bit data | STB |          |
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    1    |    0      |    | SB | 9 bit data | STB |          |
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     +-------------------------------------------------------------+
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #include "stm32f4xx_hal.h"
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 6


 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup STM32F4xx_HAL_Driver
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART UART
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief HAL UART module driver
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Constants
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Functions  UART Private Functions
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart);
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                                      uint32_t Tickstart, uint32_t Timeout);
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart);
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Exported functions ---------------------------------------------------------*/
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 7


 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in asynchronous mode.
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured:
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Baud Rate
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Word Length
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Stop Bit
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              please refer to Reference manual for possible UART frame formats.
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Hardware flow control
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Receiver/transmitter modes
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Over Sampling Method
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor configurat
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     procedures (details for the procedures are available in reference manual
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (RM0430 for STM32F4X3xx MCUs and RM0402 for STM32F412xx MCUs
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      RM0383 for STM32F411xC/E MCUs and RM0401 for STM32F410xx MCUs
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      RM0090 for STM32F4X5xx/STM32F4X7xx/STM32F429xx/STM32F439xx MCUs
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      RM0390 for STM32F446xx MCUs and RM0386 for STM32F469xx/STM32F479xx MCUs)).
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the UART mode according to the specified parameters in
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the UART_InitTypeDef and create the associated handle.
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
  29              		.loc 1 358 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 8


  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
  45              		.loc 1 360 6
  46 0008 7B68     		ldr	r3, [r7, #4]
  47 000a 002B     		cmp	r3, #0
  48 000c 01D1     		bne	.L2
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
  49              		.loc 1 362 12
  50 000e 0123     		movs	r3, #1
  51 0010 3FE0     		b	.L3
  52              	.L2:
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* The hardware flow control is available only for USART1, USART2, USART3 and USART6.
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Except for STM32F446xx devices, that is available for USART1, USART2, USART3, USART6, UART4 
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     */
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
  53              		.loc 1 381 12
  54 0012 7B68     		ldr	r3, [r7, #4]
  55 0014 93F83D30 		ldrb	r3, [r3, #61]
  56 0018 DBB2     		uxtb	r3, r3
  57              		.loc 1 381 6
  58 001a 002B     		cmp	r3, #0
  59 001c 06D1     		bne	.L4
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
  60              		.loc 1 384 17
  61 001e 7B68     		ldr	r3, [r7, #4]
  62 0020 0022     		movs	r2, #0
  63 0022 83F83C20 		strb	r2, [r3, #60]
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 9


 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
  64              		.loc 1 398 5
  65 0026 7868     		ldr	r0, [r7, #4]
  66 0028 FFF7FEFF 		bl	HAL_UART_MspInit
  67              	.L4:
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
  68              		.loc 1 402 17
  69 002c 7B68     		ldr	r3, [r7, #4]
  70 002e 2422     		movs	r2, #36
  71 0030 83F83D20 		strb	r2, [r3, #61]
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
  72              		.loc 1 405 3
  73 0034 7B68     		ldr	r3, [r7, #4]
  74 0036 1B68     		ldr	r3, [r3]
  75 0038 DA68     		ldr	r2, [r3, #12]
  76 003a 7B68     		ldr	r3, [r7, #4]
  77 003c 1B68     		ldr	r3, [r3]
  78 003e 22F40052 		bic	r2, r2, #8192
  79 0042 DA60     		str	r2, [r3, #12]
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
  80              		.loc 1 408 3
  81 0044 7868     		ldr	r0, [r7, #4]
  82 0046 FFF7FEFF 		bl	UART_SetConfig
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
  83              		.loc 1 413 3
  84 004a 7B68     		ldr	r3, [r7, #4]
  85 004c 1B68     		ldr	r3, [r3]
  86 004e 1A69     		ldr	r2, [r3, #16]
  87 0050 7B68     		ldr	r3, [r7, #4]
  88 0052 1B68     		ldr	r3, [r3]
  89 0054 22F49042 		bic	r2, r2, #18432
  90 0058 1A61     		str	r2, [r3, #16]
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
  91              		.loc 1 414 3
  92 005a 7B68     		ldr	r3, [r7, #4]
  93 005c 1B68     		ldr	r3, [r3]
  94 005e 5A69     		ldr	r2, [r3, #20]
  95 0060 7B68     		ldr	r3, [r7, #4]
  96 0062 1B68     		ldr	r3, [r3]
  97 0064 22F02A02 		bic	r2, r2, #42
  98 0068 5A61     		str	r2, [r3, #20]
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 10


 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
  99              		.loc 1 417 3
 100 006a 7B68     		ldr	r3, [r7, #4]
 101 006c 1B68     		ldr	r3, [r3]
 102 006e DA68     		ldr	r2, [r3, #12]
 103 0070 7B68     		ldr	r3, [r7, #4]
 104 0072 1B68     		ldr	r3, [r3]
 105 0074 42F40052 		orr	r2, r2, #8192
 106 0078 DA60     		str	r2, [r3, #12]
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 107              		.loc 1 420 20
 108 007a 7B68     		ldr	r3, [r7, #4]
 109 007c 0022     		movs	r2, #0
 110 007e 1A64     		str	r2, [r3, #64]
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 111              		.loc 1 421 17
 112 0080 7B68     		ldr	r3, [r7, #4]
 113 0082 2022     		movs	r2, #32
 114 0084 83F83D20 		strb	r2, [r3, #61]
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 115              		.loc 1 422 18
 116 0088 7B68     		ldr	r3, [r7, #4]
 117 008a 2022     		movs	r2, #32
 118 008c 83F83E20 		strb	r2, [r3, #62]
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 119              		.loc 1 424 10
 120 0090 0023     		movs	r3, #0
 121              	.L3:
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 122              		.loc 1 425 1
 123 0092 1846     		mov	r0, r3
 124 0094 0837     		adds	r7, r7, #8
 125              	.LCFI3:
 126              		.cfi_def_cfa_offset 8
 127 0096 BD46     		mov	sp, r7
 128              	.LCFI4:
 129              		.cfi_def_cfa_register 13
 130              		@ sp needed
 131 0098 80BD     		pop	{r7, pc}
 132              		.cfi_endproc
 133              	.LFE216:
 135              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 136              		.align	1
 137              		.global	HAL_HalfDuplex_Init
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 142              	HAL_HalfDuplex_Init:
 143              	.LFB217:
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the half-duplex mode according to the specified
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 11


 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 144              		.loc 1 435 1
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 8
 147              		@ frame_needed = 1, uses_anonymous_args = 0
 148 0000 80B5     		push	{r7, lr}
 149              	.LCFI5:
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 7, -8
 152              		.cfi_offset 14, -4
 153 0002 82B0     		sub	sp, sp, #8
 154              	.LCFI6:
 155              		.cfi_def_cfa_offset 16
 156 0004 00AF     		add	r7, sp, #0
 157              	.LCFI7:
 158              		.cfi_def_cfa_register 7
 159 0006 7860     		str	r0, [r7, #4]
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 160              		.loc 1 437 6
 161 0008 7B68     		ldr	r3, [r7, #4]
 162 000a 002B     		cmp	r3, #0
 163 000c 01D1     		bne	.L6
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 164              		.loc 1 439 12
 165 000e 0123     		movs	r3, #1
 166 0010 47E0     		b	.L7
 167              	.L6:
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 168              		.loc 1 447 12
 169 0012 7B68     		ldr	r3, [r7, #4]
 170 0014 93F83D30 		ldrb	r3, [r3, #61]
 171 0018 DBB2     		uxtb	r3, r3
 172              		.loc 1 447 6
 173 001a 002B     		cmp	r3, #0
 174 001c 06D1     		bne	.L8
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 175              		.loc 1 450 17
 176 001e 7B68     		ldr	r3, [r7, #4]
 177 0020 0022     		movs	r2, #0
 178 0022 83F83C20 		strb	r2, [r3, #60]
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 12


 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 179              		.loc 1 464 5
 180 0026 7868     		ldr	r0, [r7, #4]
 181 0028 FFF7FEFF 		bl	HAL_UART_MspInit
 182              	.L8:
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 183              		.loc 1 468 17
 184 002c 7B68     		ldr	r3, [r7, #4]
 185 002e 2422     		movs	r2, #36
 186 0030 83F83D20 		strb	r2, [r3, #61]
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 187              		.loc 1 471 3
 188 0034 7B68     		ldr	r3, [r7, #4]
 189 0036 1B68     		ldr	r3, [r3]
 190 0038 DA68     		ldr	r2, [r3, #12]
 191 003a 7B68     		ldr	r3, [r7, #4]
 192 003c 1B68     		ldr	r3, [r3]
 193 003e 22F40052 		bic	r2, r2, #8192
 194 0042 DA60     		str	r2, [r3, #12]
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 195              		.loc 1 474 3
 196 0044 7868     		ldr	r0, [r7, #4]
 197 0046 FFF7FEFF 		bl	UART_SetConfig
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 198              		.loc 1 479 3
 199 004a 7B68     		ldr	r3, [r7, #4]
 200 004c 1B68     		ldr	r3, [r3]
 201 004e 1A69     		ldr	r2, [r3, #16]
 202 0050 7B68     		ldr	r3, [r7, #4]
 203 0052 1B68     		ldr	r3, [r3]
 204 0054 22F49042 		bic	r2, r2, #18432
 205 0058 1A61     		str	r2, [r3, #16]
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 206              		.loc 1 480 3
 207 005a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 13


 208 005c 1B68     		ldr	r3, [r3]
 209 005e 5A69     		ldr	r2, [r3, #20]
 210 0060 7B68     		ldr	r3, [r7, #4]
 211 0062 1B68     		ldr	r3, [r3]
 212 0064 22F02202 		bic	r2, r2, #34
 213 0068 5A61     		str	r2, [r3, #20]
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 214              		.loc 1 483 3
 215 006a 7B68     		ldr	r3, [r7, #4]
 216 006c 1B68     		ldr	r3, [r3]
 217 006e 5A69     		ldr	r2, [r3, #20]
 218 0070 7B68     		ldr	r3, [r7, #4]
 219 0072 1B68     		ldr	r3, [r3]
 220 0074 42F00802 		orr	r2, r2, #8
 221 0078 5A61     		str	r2, [r3, #20]
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 222              		.loc 1 486 3
 223 007a 7B68     		ldr	r3, [r7, #4]
 224 007c 1B68     		ldr	r3, [r3]
 225 007e DA68     		ldr	r2, [r3, #12]
 226 0080 7B68     		ldr	r3, [r7, #4]
 227 0082 1B68     		ldr	r3, [r3]
 228 0084 42F40052 		orr	r2, r2, #8192
 229 0088 DA60     		str	r2, [r3, #12]
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 230              		.loc 1 489 20
 231 008a 7B68     		ldr	r3, [r7, #4]
 232 008c 0022     		movs	r2, #0
 233 008e 1A64     		str	r2, [r3, #64]
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 234              		.loc 1 490 17
 235 0090 7B68     		ldr	r3, [r7, #4]
 236 0092 2022     		movs	r2, #32
 237 0094 83F83D20 		strb	r2, [r3, #61]
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 238              		.loc 1 491 18
 239 0098 7B68     		ldr	r3, [r7, #4]
 240 009a 2022     		movs	r2, #32
 241 009c 83F83E20 		strb	r2, [r3, #62]
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 242              		.loc 1 493 10
 243 00a0 0023     		movs	r3, #0
 244              	.L7:
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 245              		.loc 1 494 1
 246 00a2 1846     		mov	r0, r3
 247 00a4 0837     		adds	r7, r7, #8
 248              	.LCFI8:
 249              		.cfi_def_cfa_offset 8
 250 00a6 BD46     		mov	sp, r7
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 14


 251              	.LCFI9:
 252              		.cfi_def_cfa_register 13
 253              		@ sp needed
 254 00a8 80BD     		pop	{r7, pc}
 255              		.cfi_endproc
 256              	.LFE217:
 258              		.section	.text.HAL_LIN_Init,"ax",%progbits
 259              		.align	1
 260              		.global	HAL_LIN_Init
 261              		.syntax unified
 262              		.thumb
 263              		.thumb_func
 265              	HAL_LIN_Init:
 266              	.LFB218:
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the LIN mode according to the specified
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  BreakDetectLength Specifies the LIN break detection length.
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_10B: 10-bit break detection
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_11B: 11-bit break detection
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 267              		.loc 1 508 1
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 8
 270              		@ frame_needed = 1, uses_anonymous_args = 0
 271 0000 80B5     		push	{r7, lr}
 272              	.LCFI10:
 273              		.cfi_def_cfa_offset 8
 274              		.cfi_offset 7, -8
 275              		.cfi_offset 14, -4
 276 0002 82B0     		sub	sp, sp, #8
 277              	.LCFI11:
 278              		.cfi_def_cfa_offset 16
 279 0004 00AF     		add	r7, sp, #0
 280              	.LCFI12:
 281              		.cfi_def_cfa_register 7
 282 0006 7860     		str	r0, [r7, #4]
 283 0008 3960     		str	r1, [r7]
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 284              		.loc 1 510 6
 285 000a 7B68     		ldr	r3, [r7, #4]
 286 000c 002B     		cmp	r3, #0
 287 000e 01D1     		bne	.L10
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 288              		.loc 1 512 12
 289 0010 0123     		movs	r3, #1
 290 0012 57E0     		b	.L11
 291              	.L10:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 15


 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the LIN UART instance */
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_WORD_LENGTH(huart->Init.WordLength));
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_OVERSAMPLING(huart->Init.OverSampling));
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 292              		.loc 1 523 12
 293 0014 7B68     		ldr	r3, [r7, #4]
 294 0016 93F83D30 		ldrb	r3, [r3, #61]
 295 001a DBB2     		uxtb	r3, r3
 296              		.loc 1 523 6
 297 001c 002B     		cmp	r3, #0
 298 001e 06D1     		bne	.L12
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 299              		.loc 1 526 17
 300 0020 7B68     		ldr	r3, [r7, #4]
 301 0022 0022     		movs	r2, #0
 302 0024 83F83C20 		strb	r2, [r3, #60]
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 303              		.loc 1 540 5
 304 0028 7868     		ldr	r0, [r7, #4]
 305 002a FFF7FEFF 		bl	HAL_UART_MspInit
 306              	.L12:
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 307              		.loc 1 544 17
 308 002e 7B68     		ldr	r3, [r7, #4]
 309 0030 2422     		movs	r2, #36
 310 0032 83F83D20 		strb	r2, [r3, #61]
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 311              		.loc 1 547 3
 312 0036 7B68     		ldr	r3, [r7, #4]
 313 0038 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 16


 314 003a DA68     		ldr	r2, [r3, #12]
 315 003c 7B68     		ldr	r3, [r7, #4]
 316 003e 1B68     		ldr	r3, [r3]
 317 0040 22F40052 		bic	r2, r2, #8192
 318 0044 DA60     		str	r2, [r3, #12]
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 319              		.loc 1 550 3
 320 0046 7868     		ldr	r0, [r7, #4]
 321 0048 FFF7FEFF 		bl	UART_SetConfig
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - CLKEN bits in the USART_CR2 register,
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN bits in the USART_CR3 register.*/
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_CLKEN));
 322              		.loc 1 555 3
 323 004c 7B68     		ldr	r3, [r7, #4]
 324 004e 1B68     		ldr	r3, [r3]
 325 0050 1A69     		ldr	r2, [r3, #16]
 326 0052 7B68     		ldr	r3, [r7, #4]
 327 0054 1B68     		ldr	r3, [r3]
 328 0056 22F40062 		bic	r2, r2, #2048
 329 005a 1A61     		str	r2, [r3, #16]
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 330              		.loc 1 556 3
 331 005c 7B68     		ldr	r3, [r7, #4]
 332 005e 1B68     		ldr	r3, [r3]
 333 0060 5A69     		ldr	r2, [r3, #20]
 334 0062 7B68     		ldr	r3, [r7, #4]
 335 0064 1B68     		ldr	r3, [r3]
 336 0066 22F02A02 		bic	r2, r2, #42
 337 006a 5A61     		str	r2, [r3, #20]
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 338              		.loc 1 559 3
 339 006c 7B68     		ldr	r3, [r7, #4]
 340 006e 1B68     		ldr	r3, [r3]
 341 0070 1A69     		ldr	r2, [r3, #16]
 342 0072 7B68     		ldr	r3, [r7, #4]
 343 0074 1B68     		ldr	r3, [r3]
 344 0076 42F48042 		orr	r2, r2, #16384
 345 007a 1A61     		str	r2, [r3, #16]
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_LBDL);
 346              		.loc 1 562 3
 347 007c 7B68     		ldr	r3, [r7, #4]
 348 007e 1B68     		ldr	r3, [r3]
 349 0080 1A69     		ldr	r2, [r3, #16]
 350 0082 7B68     		ldr	r3, [r7, #4]
 351 0084 1B68     		ldr	r3, [r3]
 352 0086 22F02002 		bic	r2, r2, #32
 353 008a 1A61     		str	r2, [r3, #16]
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, BreakDetectLength);
 354              		.loc 1 563 3
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 17


 355 008c 7B68     		ldr	r3, [r7, #4]
 356 008e 1B68     		ldr	r3, [r3]
 357 0090 1969     		ldr	r1, [r3, #16]
 358 0092 7B68     		ldr	r3, [r7, #4]
 359 0094 1B68     		ldr	r3, [r3]
 360 0096 3A68     		ldr	r2, [r7]
 361 0098 0A43     		orrs	r2, r2, r1
 362 009a 1A61     		str	r2, [r3, #16]
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 363              		.loc 1 566 3
 364 009c 7B68     		ldr	r3, [r7, #4]
 365 009e 1B68     		ldr	r3, [r3]
 366 00a0 DA68     		ldr	r2, [r3, #12]
 367 00a2 7B68     		ldr	r3, [r7, #4]
 368 00a4 1B68     		ldr	r3, [r3]
 369 00a6 42F40052 		orr	r2, r2, #8192
 370 00aa DA60     		str	r2, [r3, #12]
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 371              		.loc 1 569 20
 372 00ac 7B68     		ldr	r3, [r7, #4]
 373 00ae 0022     		movs	r2, #0
 374 00b0 1A64     		str	r2, [r3, #64]
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 375              		.loc 1 570 17
 376 00b2 7B68     		ldr	r3, [r7, #4]
 377 00b4 2022     		movs	r2, #32
 378 00b6 83F83D20 		strb	r2, [r3, #61]
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 379              		.loc 1 571 18
 380 00ba 7B68     		ldr	r3, [r7, #4]
 381 00bc 2022     		movs	r2, #32
 382 00be 83F83E20 		strb	r2, [r3, #62]
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 383              		.loc 1 573 10
 384 00c2 0023     		movs	r3, #0
 385              	.L11:
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 386              		.loc 1 574 1
 387 00c4 1846     		mov	r0, r3
 388 00c6 0837     		adds	r7, r7, #8
 389              	.LCFI13:
 390              		.cfi_def_cfa_offset 8
 391 00c8 BD46     		mov	sp, r7
 392              	.LCFI14:
 393              		.cfi_def_cfa_register 13
 394              		@ sp needed
 395 00ca 80BD     		pop	{r7, pc}
 396              		.cfi_endproc
 397              	.LFE218:
 399              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 400              		.align	1
 401              		.global	HAL_MultiProcessor_Init
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 18


 402              		.syntax unified
 403              		.thumb
 404              		.thumb_func
 406              	HAL_MultiProcessor_Init:
 407              	.LFB219:
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the Multi-Processor mode according to the specified
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Address USART address
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  WakeUpMethod specifies the USART wake-up method.
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_IDLELINE: Wake-up by an idle line detection
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_ADDRESSMARK: Wake-up by an address mark
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 408              		.loc 1 589 1
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 16
 411              		@ frame_needed = 1, uses_anonymous_args = 0
 412 0000 80B5     		push	{r7, lr}
 413              	.LCFI15:
 414              		.cfi_def_cfa_offset 8
 415              		.cfi_offset 7, -8
 416              		.cfi_offset 14, -4
 417 0002 84B0     		sub	sp, sp, #16
 418              	.LCFI16:
 419              		.cfi_def_cfa_offset 24
 420 0004 00AF     		add	r7, sp, #0
 421              	.LCFI17:
 422              		.cfi_def_cfa_register 7
 423 0006 F860     		str	r0, [r7, #12]
 424 0008 0B46     		mov	r3, r1
 425 000a 7A60     		str	r2, [r7, #4]
 426 000c FB72     		strb	r3, [r7, #11]
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 427              		.loc 1 591 6
 428 000e FB68     		ldr	r3, [r7, #12]
 429 0010 002B     		cmp	r3, #0
 430 0012 01D1     		bne	.L14
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 431              		.loc 1 593 12
 432 0014 0123     		movs	r3, #1
 433 0016 5FE0     		b	.L15
 434              	.L14:
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Address & wake up method parameters */
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 19


 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_ADDRESS(Address));
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 435              		.loc 1 605 12
 436 0018 FB68     		ldr	r3, [r7, #12]
 437 001a 93F83D30 		ldrb	r3, [r3, #61]
 438 001e DBB2     		uxtb	r3, r3
 439              		.loc 1 605 6
 440 0020 002B     		cmp	r3, #0
 441 0022 06D1     		bne	.L16
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 442              		.loc 1 608 17
 443 0024 FB68     		ldr	r3, [r7, #12]
 444 0026 0022     		movs	r2, #0
 445 0028 83F83C20 		strb	r2, [r3, #60]
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 446              		.loc 1 622 5
 447 002c F868     		ldr	r0, [r7, #12]
 448 002e FFF7FEFF 		bl	HAL_UART_MspInit
 449              	.L16:
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 450              		.loc 1 626 17
 451 0032 FB68     		ldr	r3, [r7, #12]
 452 0034 2422     		movs	r2, #36
 453 0036 83F83D20 		strb	r2, [r3, #61]
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 454              		.loc 1 629 3
 455 003a FB68     		ldr	r3, [r7, #12]
 456 003c 1B68     		ldr	r3, [r3]
 457 003e DA68     		ldr	r2, [r3, #12]
 458 0040 FB68     		ldr	r3, [r7, #12]
 459 0042 1B68     		ldr	r3, [r3]
 460 0044 22F40052 		bic	r2, r2, #8192
 461 0048 DA60     		str	r2, [r3, #12]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 20


 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 462              		.loc 1 632 3
 463 004a F868     		ldr	r0, [r7, #12]
 464 004c FFF7FEFF 		bl	UART_SetConfig
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In Multi-Processor mode, the following bits must be kept cleared:
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register */
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 465              		.loc 1 637 3
 466 0050 FB68     		ldr	r3, [r7, #12]
 467 0052 1B68     		ldr	r3, [r3]
 468 0054 1A69     		ldr	r2, [r3, #16]
 469 0056 FB68     		ldr	r3, [r7, #12]
 470 0058 1B68     		ldr	r3, [r3]
 471 005a 22F49042 		bic	r2, r2, #18432
 472 005e 1A61     		str	r2, [r3, #16]
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 473              		.loc 1 638 3
 474 0060 FB68     		ldr	r3, [r7, #12]
 475 0062 1B68     		ldr	r3, [r3]
 476 0064 5A69     		ldr	r2, [r3, #20]
 477 0066 FB68     		ldr	r3, [r7, #12]
 478 0068 1B68     		ldr	r3, [r3]
 479 006a 22F02A02 		bic	r2, r2, #42
 480 006e 5A61     		str	r2, [r3, #20]
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART address node */
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_ADD);
 481              		.loc 1 641 3
 482 0070 FB68     		ldr	r3, [r7, #12]
 483 0072 1B68     		ldr	r3, [r3]
 484 0074 1A69     		ldr	r2, [r3, #16]
 485 0076 FB68     		ldr	r3, [r7, #12]
 486 0078 1B68     		ldr	r3, [r3]
 487 007a 22F00F02 		bic	r2, r2, #15
 488 007e 1A61     		str	r2, [r3, #16]
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, Address);
 489              		.loc 1 642 3
 490 0080 FB68     		ldr	r3, [r7, #12]
 491 0082 1B68     		ldr	r3, [r3]
 492 0084 1969     		ldr	r1, [r3, #16]
 493 0086 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 494 0088 FB68     		ldr	r3, [r7, #12]
 495 008a 1B68     		ldr	r3, [r3]
 496 008c 0A43     		orrs	r2, r2, r1
 497 008e 1A61     		str	r2, [r3, #16]
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_WAKE);
 498              		.loc 1 645 3
 499 0090 FB68     		ldr	r3, [r7, #12]
 500 0092 1B68     		ldr	r3, [r3]
 501 0094 DA68     		ldr	r2, [r3, #12]
 502 0096 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 21


 503 0098 1B68     		ldr	r3, [r3]
 504 009a 22F40062 		bic	r2, r2, #2048
 505 009e DA60     		str	r2, [r3, #12]
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, WakeUpMethod);
 506              		.loc 1 646 3
 507 00a0 FB68     		ldr	r3, [r7, #12]
 508 00a2 1B68     		ldr	r3, [r3]
 509 00a4 D968     		ldr	r1, [r3, #12]
 510 00a6 FB68     		ldr	r3, [r7, #12]
 511 00a8 1B68     		ldr	r3, [r3]
 512 00aa 7A68     		ldr	r2, [r7, #4]
 513 00ac 0A43     		orrs	r2, r2, r1
 514 00ae DA60     		str	r2, [r3, #12]
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 515              		.loc 1 649 3
 516 00b0 FB68     		ldr	r3, [r7, #12]
 517 00b2 1B68     		ldr	r3, [r3]
 518 00b4 DA68     		ldr	r2, [r3, #12]
 519 00b6 FB68     		ldr	r3, [r7, #12]
 520 00b8 1B68     		ldr	r3, [r3]
 521 00ba 42F40052 		orr	r2, r2, #8192
 522 00be DA60     		str	r2, [r3, #12]
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 523              		.loc 1 652 20
 524 00c0 FB68     		ldr	r3, [r7, #12]
 525 00c2 0022     		movs	r2, #0
 526 00c4 1A64     		str	r2, [r3, #64]
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 527              		.loc 1 653 17
 528 00c6 FB68     		ldr	r3, [r7, #12]
 529 00c8 2022     		movs	r2, #32
 530 00ca 83F83D20 		strb	r2, [r3, #61]
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 531              		.loc 1 654 18
 532 00ce FB68     		ldr	r3, [r7, #12]
 533 00d0 2022     		movs	r2, #32
 534 00d2 83F83E20 		strb	r2, [r3, #62]
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 535              		.loc 1 656 10
 536 00d6 0023     		movs	r3, #0
 537              	.L15:
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 538              		.loc 1 657 1
 539 00d8 1846     		mov	r0, r3
 540 00da 1037     		adds	r7, r7, #16
 541              	.LCFI18:
 542              		.cfi_def_cfa_offset 8
 543 00dc BD46     		mov	sp, r7
 544              	.LCFI19:
 545              		.cfi_def_cfa_register 13
 546              		@ sp needed
 547 00de 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 22


 548              		.cfi_endproc
 549              	.LFE219:
 551              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 552              		.align	1
 553              		.global	HAL_UART_DeInit
 554              		.syntax unified
 555              		.thumb
 556              		.thumb_func
 558              	HAL_UART_DeInit:
 559              	.LFB220:
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DeInitializes the UART peripheral.
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 560              		.loc 1 666 1
 561              		.cfi_startproc
 562              		@ args = 0, pretend = 0, frame = 8
 563              		@ frame_needed = 1, uses_anonymous_args = 0
 564 0000 80B5     		push	{r7, lr}
 565              	.LCFI20:
 566              		.cfi_def_cfa_offset 8
 567              		.cfi_offset 7, -8
 568              		.cfi_offset 14, -4
 569 0002 82B0     		sub	sp, sp, #8
 570              	.LCFI21:
 571              		.cfi_def_cfa_offset 16
 572 0004 00AF     		add	r7, sp, #0
 573              	.LCFI22:
 574              		.cfi_def_cfa_register 7
 575 0006 7860     		str	r0, [r7, #4]
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 576              		.loc 1 668 6
 577 0008 7B68     		ldr	r3, [r7, #4]
 578 000a 002B     		cmp	r3, #0
 579 000c 01D1     		bne	.L18
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 580              		.loc 1 670 12
 581 000e 0123     		movs	r3, #1
 582 0010 21E0     		b	.L19
 583              	.L18:
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 584              		.loc 1 676 17
 585 0012 7B68     		ldr	r3, [r7, #4]
 586 0014 2422     		movs	r2, #36
 587 0016 83F83D20 		strb	r2, [r3, #61]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 23


 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the Peripheral */
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 588              		.loc 1 679 3
 589 001a 7B68     		ldr	r3, [r7, #4]
 590 001c 1B68     		ldr	r3, [r3]
 591 001e DA68     		ldr	r2, [r3, #12]
 592 0020 7B68     		ldr	r3, [r7, #4]
 593 0022 1B68     		ldr	r3, [r3]
 594 0024 22F40052 		bic	r2, r2, #8192
 595 0028 DA60     		str	r2, [r3, #12]
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DeInit the low level hardware */
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DeInit the low level hardware */
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 596              		.loc 1 690 3
 597 002a 7868     		ldr	r0, [r7, #4]
 598 002c FFF7FEFF 		bl	HAL_UART_MspDeInit
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 599              		.loc 1 693 20
 600 0030 7B68     		ldr	r3, [r7, #4]
 601 0032 0022     		movs	r2, #0
 602 0034 1A64     		str	r2, [r3, #64]
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 603              		.loc 1 694 17
 604 0036 7B68     		ldr	r3, [r7, #4]
 605 0038 0022     		movs	r2, #0
 606 003a 83F83D20 		strb	r2, [r3, #61]
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 607              		.loc 1 695 18
 608 003e 7B68     		ldr	r3, [r7, #4]
 609 0040 0022     		movs	r2, #0
 610 0042 83F83E20 		strb	r2, [r3, #62]
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 611              		.loc 1 696 24
 612 0046 7B68     		ldr	r3, [r7, #4]
 613 0048 0022     		movs	r2, #0
 614 004a 1A63     		str	r2, [r3, #48]
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlock */
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 615              		.loc 1 699 3
 616 004c 7B68     		ldr	r3, [r7, #4]
 617 004e 0022     		movs	r2, #0
 618 0050 83F83C20 		strb	r2, [r3, #60]
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 619              		.loc 1 701 10
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 24


 620 0054 0023     		movs	r3, #0
 621              	.L19:
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 622              		.loc 1 702 1
 623 0056 1846     		mov	r0, r3
 624 0058 0837     		adds	r7, r7, #8
 625              	.LCFI23:
 626              		.cfi_def_cfa_offset 8
 627 005a BD46     		mov	sp, r7
 628              	.LCFI24:
 629              		.cfi_def_cfa_register 13
 630              		@ sp needed
 631 005c 80BD     		pop	{r7, pc}
 632              		.cfi_endproc
 633              	.LFE220:
 635              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 636              		.align	1
 637              		.weak	HAL_UART_MspInit
 638              		.syntax unified
 639              		.thumb
 640              		.thumb_func
 642              	HAL_UART_MspInit:
 643              	.LFB221:
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP Init.
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 644              		.loc 1 711 1
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 8
 647              		@ frame_needed = 1, uses_anonymous_args = 0
 648              		@ link register save eliminated.
 649 0000 80B4     		push	{r7}
 650              	.LCFI25:
 651              		.cfi_def_cfa_offset 4
 652              		.cfi_offset 7, -4
 653 0002 83B0     		sub	sp, sp, #12
 654              	.LCFI26:
 655              		.cfi_def_cfa_offset 16
 656 0004 00AF     		add	r7, sp, #0
 657              	.LCFI27:
 658              		.cfi_def_cfa_register 7
 659 0006 7860     		str	r0, [r7, #4]
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspInit could be implemented in the user file
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 660              		.loc 1 717 1
 661 0008 00BF     		nop
 662 000a 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 25


 663              	.LCFI28:
 664              		.cfi_def_cfa_offset 4
 665 000c BD46     		mov	sp, r7
 666              	.LCFI29:
 667              		.cfi_def_cfa_register 13
 668              		@ sp needed
 669 000e 5DF8047B 		ldr	r7, [sp], #4
 670              	.LCFI30:
 671              		.cfi_restore 7
 672              		.cfi_def_cfa_offset 0
 673 0012 7047     		bx	lr
 674              		.cfi_endproc
 675              	.LFE221:
 677              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 678              		.align	1
 679              		.weak	HAL_UART_MspDeInit
 680              		.syntax unified
 681              		.thumb
 682              		.thumb_func
 684              	HAL_UART_MspDeInit:
 685              	.LFB222:
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP DeInit.
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 686              		.loc 1 726 1
 687              		.cfi_startproc
 688              		@ args = 0, pretend = 0, frame = 8
 689              		@ frame_needed = 1, uses_anonymous_args = 0
 690              		@ link register save eliminated.
 691 0000 80B4     		push	{r7}
 692              	.LCFI31:
 693              		.cfi_def_cfa_offset 4
 694              		.cfi_offset 7, -4
 695 0002 83B0     		sub	sp, sp, #12
 696              	.LCFI32:
 697              		.cfi_def_cfa_offset 16
 698 0004 00AF     		add	r7, sp, #0
 699              	.LCFI33:
 700              		.cfi_def_cfa_register 7
 701 0006 7860     		str	r0, [r7, #4]
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspDeInit could be implemented in the user file
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 702              		.loc 1 732 1
 703 0008 00BF     		nop
 704 000a 0C37     		adds	r7, r7, #12
 705              	.LCFI34:
 706              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 26


 707 000c BD46     		mov	sp, r7
 708              	.LCFI35:
 709              		.cfi_def_cfa_register 13
 710              		@ sp needed
 711 000e 5DF8047B 		ldr	r7, [sp], #4
 712              	.LCFI36:
 713              		.cfi_restore 7
 714              		.cfi_def_cfa_offset 0
 715 0012 7047     		bx	lr
 716              		.cfi_endproc
 717              	.LFE222:
 719              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 720              		.align	1
 721              		.global	HAL_UART_Transmit
 722              		.syntax unified
 723              		.thumb
 724              		.thumb_func
 726              	HAL_UART_Transmit:
 727              	.LFB223:
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Register a User UART Callback
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart uart handle
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                             pUART_CallbackTypeDef pCallback)
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (pCallback == NULL)
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Update the error code */
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process locked */
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 27


 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 28


 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Update the error code */
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Return error status */
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  HAL_ERROR;
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Release Lock */
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return status;
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart uart handle
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process locked */
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 29


 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak Abort
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak Abort
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 30


 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Update the error code */
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Return error status */
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  HAL_ERROR;
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Release Lock */
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return status;
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Register a User UART Rx Event Callback
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart     Uart handle
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pCallback Pointer to the Rx Event Callback function
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterRxEventCallback(UART_HandleTypeDef *huart, pUART_RxEventCallback
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (pCallback == NULL)
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process locked */
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxEventCallback = pCallback;
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 31


 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  HAL_ERROR;
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Release Lock */
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return status;
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UnRegister the UART Rx Event Callback
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         UART Rx Event Callback is redirected to the weak HAL_UARTEx_RxEventCallback() predefine
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart     Uart handle
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterRxEventCallback(UART_HandleTypeDef *huart)
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process locked */
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxEventCallback = HAL_UARTEx_RxEventCallback; /* Legacy weak UART Rx Event Callback  */
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  HAL_ERROR;
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Release Lock */
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return status;
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief UART Transmit and Receive functions
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### IO operation functions #####
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and Half duplex data transfers.
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) There are two modes of transfer:
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 32


1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            after finishing transfer.
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            or DMA, these API's return the HAL status.
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The end of the data processing will be indicated through the
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            using DMA mode.
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            will be executed respectively at the end of the transmit or receive process
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Blocking mode API's are :
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Transmit()
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Receive()
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Abort()
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) A Rx Event Reception Callback (Rx event notification) is available for Non_Blocking modes o
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UARTEx_RxEventCallback()
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         Errors are handled as follows :
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
1110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 33


1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
1122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in blocking mode.
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 provided through pData.
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Size,
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 728              		.loc 1 1137 1
 729              		.cfi_startproc
 730              		@ args = 0, pretend = 0, frame = 32
 731              		@ frame_needed = 1, uses_anonymous_args = 0
 732 0000 80B5     		push	{r7, lr}
 733              	.LCFI37:
 734              		.cfi_def_cfa_offset 8
 735              		.cfi_offset 7, -8
 736              		.cfi_offset 14, -4
 737 0002 8AB0     		sub	sp, sp, #40
 738              	.LCFI38:
 739              		.cfi_def_cfa_offset 48
 740 0004 02AF     		add	r7, sp, #8
 741              	.LCFI39:
 742              		.cfi_def_cfa 7, 40
 743 0006 F860     		str	r0, [r7, #12]
 744 0008 B960     		str	r1, [r7, #8]
 745 000a 3B60     		str	r3, [r7]
 746 000c 1346     		mov	r3, r2	@ movhi
 747 000e FB80     		strh	r3, [r7, #6]	@ movhi
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   const uint8_t  *pdata8bits;
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   const uint16_t *pdata16bits;
1140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 748              		.loc 1 1140 12
 749 0010 0023     		movs	r3, #0
 750 0012 7B61     		str	r3, [r7, #20]
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 751              		.loc 1 1143 12
 752 0014 FB68     		ldr	r3, [r7, #12]
 753 0016 93F83D30 		ldrb	r3, [r3, #61]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 34


 754 001a DBB2     		uxtb	r3, r3
 755              		.loc 1 1143 6
 756 001c 202B     		cmp	r3, #32
 757 001e 7CD1     		bne	.L23
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 758              		.loc 1 1145 8
 759 0020 BB68     		ldr	r3, [r7, #8]
 760 0022 002B     		cmp	r3, #0
 761 0024 02D0     		beq	.L24
 762              		.loc 1 1145 25 discriminator 1
 763 0026 FB88     		ldrh	r3, [r7, #6]
 764 0028 002B     		cmp	r3, #0
 765 002a 01D1     		bne	.L25
 766              	.L24:
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 767              		.loc 1 1147 15
 768 002c 0123     		movs	r3, #1
 769 002e 75E0     		b	.L26
 770              	.L25:
1148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 771              		.loc 1 1151 5
 772 0030 FB68     		ldr	r3, [r7, #12]
 773 0032 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 774 0036 012B     		cmp	r3, #1
 775 0038 01D1     		bne	.L27
 776              		.loc 1 1151 5 is_stmt 0 discriminator 1
 777 003a 0223     		movs	r3, #2
 778              		.loc 1 1151 5
 779 003c 6EE0     		b	.L26
 780              	.L27:
 781              		.loc 1 1151 5 discriminator 2
 782 003e FB68     		ldr	r3, [r7, #12]
 783 0040 0122     		movs	r2, #1
 784 0042 83F83C20 		strb	r2, [r3, #60]
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 785              		.loc 1 1153 22 is_stmt 1
 786 0046 FB68     		ldr	r3, [r7, #12]
 787 0048 0022     		movs	r2, #0
 788 004a 1A64     		str	r2, [r3, #64]
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 789              		.loc 1 1154 19
 790 004c FB68     		ldr	r3, [r7, #12]
 791 004e 2122     		movs	r2, #33
 792 0050 83F83D20 		strb	r2, [r3, #61]
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout management */
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 793              		.loc 1 1157 17
 794 0054 FFF7FEFF 		bl	HAL_GetTick
 795 0058 7861     		str	r0, [r7, #20]
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 35


1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 796              		.loc 1 1159 23
 797 005a FB68     		ldr	r3, [r7, #12]
 798 005c FA88     		ldrh	r2, [r7, #6]	@ movhi
 799 005e 9A84     		strh	r2, [r3, #36]	@ movhi
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 800              		.loc 1 1160 24
 801 0060 FB68     		ldr	r3, [r7, #12]
 802 0062 FA88     		ldrh	r2, [r7, #6]	@ movhi
 803 0064 DA84     		strh	r2, [r3, #38]	@ movhi
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 804              		.loc 1 1163 21
 805 0066 FB68     		ldr	r3, [r7, #12]
 806 0068 9B68     		ldr	r3, [r3, #8]
 807              		.loc 1 1163 8
 808 006a B3F5805F 		cmp	r3, #4096
 809 006e 08D1     		bne	.L28
 810              		.loc 1 1163 71 discriminator 1
 811 0070 FB68     		ldr	r3, [r7, #12]
 812 0072 1B69     		ldr	r3, [r3, #16]
 813              		.loc 1 1163 56 discriminator 1
 814 0074 002B     		cmp	r3, #0
 815 0076 04D1     		bne	.L28
1164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = NULL;
 816              		.loc 1 1165 19
 817 0078 0023     		movs	r3, #0
 818 007a FB61     		str	r3, [r7, #28]
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = (const uint16_t *) pData;
 819              		.loc 1 1166 19
 820 007c BB68     		ldr	r3, [r7, #8]
 821 007e BB61     		str	r3, [r7, #24]
 822 0080 03E0     		b	.L29
 823              	.L28:
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = pData;
 824              		.loc 1 1170 19
 825 0082 BB68     		ldr	r3, [r7, #8]
 826 0084 FB61     		str	r3, [r7, #28]
1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = NULL;
 827              		.loc 1 1171 19
 828 0086 0023     		movs	r3, #0
 829 0088 BB61     		str	r3, [r7, #24]
 830              	.L29:
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 831              		.loc 1 1175 5
 832 008a FB68     		ldr	r3, [r7, #12]
 833 008c 0022     		movs	r2, #0
 834 008e 83F83C20 		strb	r2, [r3, #60]
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 36


1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
 835              		.loc 1 1177 11
 836 0092 2AE0     		b	.L30
 837              	.L34:
1178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 838              		.loc 1 1179 11
 839 0094 3B68     		ldr	r3, [r7]
 840 0096 0093     		str	r3, [sp]
 841 0098 7B69     		ldr	r3, [r7, #20]
 842 009a 0022     		movs	r2, #0
 843 009c 8021     		movs	r1, #128
 844 009e F868     		ldr	r0, [r7, #12]
 845 00a0 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 846 00a4 0346     		mov	r3, r0
 847              		.loc 1 1179 10 discriminator 1
 848 00a6 002B     		cmp	r3, #0
 849 00a8 01D0     		beq	.L31
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         return HAL_TIMEOUT;
 850              		.loc 1 1181 16
 851 00aa 0323     		movs	r3, #3
 852 00ac 36E0     		b	.L26
 853              	.L31:
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (pdata8bits == NULL)
 854              		.loc 1 1183 10
 855 00ae FB69     		ldr	r3, [r7, #28]
 856 00b0 002B     		cmp	r3, #0
 857 00b2 0BD1     		bne	.L32
1184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 858              		.loc 1 1185 42
 859 00b4 BB69     		ldr	r3, [r7, #24]
 860 00b6 1B88     		ldrh	r3, [r3]
 861              		.loc 1 1185 31
 862 00b8 1A46     		mov	r2, r3
 863              		.loc 1 1185 14
 864 00ba FB68     		ldr	r3, [r7, #12]
 865 00bc 1B68     		ldr	r3, [r3]
 866              		.loc 1 1185 31
 867 00be C2F30802 		ubfx	r2, r2, #0, #9
 868              		.loc 1 1185 29
 869 00c2 5A60     		str	r2, [r3, #4]
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         pdata16bits++;
 870              		.loc 1 1186 20
 871 00c4 BB69     		ldr	r3, [r7, #24]
 872 00c6 0233     		adds	r3, r3, #2
 873 00c8 BB61     		str	r3, [r7, #24]
 874 00ca 07E0     		b	.L33
 875              	.L32:
1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 876              		.loc 1 1190 41
 877 00cc FB69     		ldr	r3, [r7, #28]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 37


 878 00ce 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 879              		.loc 1 1190 14
 880 00d0 FB68     		ldr	r3, [r7, #12]
 881 00d2 1B68     		ldr	r3, [r3]
 882              		.loc 1 1190 29
 883 00d4 5A60     		str	r2, [r3, #4]
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         pdata8bits++;
 884              		.loc 1 1191 19
 885 00d6 FB69     		ldr	r3, [r7, #28]
 886 00d8 0133     		adds	r3, r3, #1
 887 00da FB61     		str	r3, [r7, #28]
 888              	.L33:
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount--;
 889              		.loc 1 1193 12
 890 00dc FB68     		ldr	r3, [r7, #12]
 891 00de DB8C     		ldrh	r3, [r3, #38]	@ movhi
 892 00e0 9BB2     		uxth	r3, r3
 893              		.loc 1 1193 25
 894 00e2 013B     		subs	r3, r3, #1
 895 00e4 9AB2     		uxth	r2, r3
 896 00e6 FB68     		ldr	r3, [r7, #12]
 897 00e8 DA84     		strh	r2, [r3, #38]	@ movhi
 898              	.L30:
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 899              		.loc 1 1177 17
 900 00ea FB68     		ldr	r3, [r7, #12]
 901 00ec DB8C     		ldrh	r3, [r3, #38]	@ movhi
 902 00ee 9BB2     		uxth	r3, r3
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 903              		.loc 1 1177 31
 904 00f0 002B     		cmp	r3, #0
 905 00f2 CFD1     		bne	.L34
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 906              		.loc 1 1196 9
 907 00f4 3B68     		ldr	r3, [r7]
 908 00f6 0093     		str	r3, [sp]
 909 00f8 7B69     		ldr	r3, [r7, #20]
 910 00fa 0022     		movs	r2, #0
 911 00fc 4021     		movs	r1, #64
 912 00fe F868     		ldr	r0, [r7, #12]
 913 0100 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 914 0104 0346     		mov	r3, r0
 915              		.loc 1 1196 8 discriminator 1
 916 0106 002B     		cmp	r3, #0
 917 0108 01D0     		beq	.L35
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_TIMEOUT;
 918              		.loc 1 1198 14
 919 010a 0323     		movs	r3, #3
 920 010c 06E0     		b	.L26
 921              	.L35:
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 38


1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 922              		.loc 1 1202 19
 923 010e FB68     		ldr	r3, [r7, #12]
 924 0110 2022     		movs	r2, #32
 925 0112 83F83D20 		strb	r2, [r3, #61]
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 926              		.loc 1 1204 12
 927 0116 0023     		movs	r3, #0
 928 0118 00E0     		b	.L26
 929              	.L23:
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 930              		.loc 1 1208 12
 931 011a 0223     		movs	r3, #2
 932              	.L26:
1209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 933              		.loc 1 1210 1
 934 011c 1846     		mov	r0, r3
 935 011e 2037     		adds	r7, r7, #32
 936              	.LCFI40:
 937              		.cfi_def_cfa_offset 8
 938 0120 BD46     		mov	sp, r7
 939              	.LCFI41:
 940              		.cfi_def_cfa_register 13
 941              		@ sp needed
 942 0122 80BD     		pop	{r7, pc}
 943              		.cfi_endproc
 944              	.LFE223:
 946              		.section	.text.HAL_UART_Receive,"ax",%progbits
 947              		.align	1
 948              		.global	HAL_UART_Receive
 949              		.syntax unified
 950              		.thumb
 951              		.thumb_func
 953              	HAL_UART_Receive:
 954              	.LFB224:
1211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in blocking mode.
1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 available through pData.
1217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
1222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 955              		.loc 1 1225 1
 956              		.cfi_startproc
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 39


 957              		@ args = 0, pretend = 0, frame = 32
 958              		@ frame_needed = 1, uses_anonymous_args = 0
 959 0000 80B5     		push	{r7, lr}
 960              	.LCFI42:
 961              		.cfi_def_cfa_offset 8
 962              		.cfi_offset 7, -8
 963              		.cfi_offset 14, -4
 964 0002 8AB0     		sub	sp, sp, #40
 965              	.LCFI43:
 966              		.cfi_def_cfa_offset 48
 967 0004 02AF     		add	r7, sp, #8
 968              	.LCFI44:
 969              		.cfi_def_cfa 7, 40
 970 0006 F860     		str	r0, [r7, #12]
 971 0008 B960     		str	r1, [r7, #8]
 972 000a 3B60     		str	r3, [r7]
 973 000c 1346     		mov	r3, r2	@ movhi
 974 000e FB80     		strh	r3, [r7, #6]	@ movhi
1226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint8_t  *pdata8bits;
1227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *pdata16bits;
1228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 975              		.loc 1 1228 12
 976 0010 0023     		movs	r3, #0
 977 0012 7B61     		str	r3, [r7, #20]
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 978              		.loc 1 1231 12
 979 0014 FB68     		ldr	r3, [r7, #12]
 980 0016 93F83E30 		ldrb	r3, [r3, #62]
 981 001a DBB2     		uxtb	r3, r3
 982              		.loc 1 1231 6
 983 001c 202B     		cmp	r3, #32
 984 001e 40F08C80 		bne	.L37
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 985              		.loc 1 1233 8
 986 0022 BB68     		ldr	r3, [r7, #8]
 987 0024 002B     		cmp	r3, #0
 988 0026 02D0     		beq	.L38
 989              		.loc 1 1233 25 discriminator 1
 990 0028 FB88     		ldrh	r3, [r7, #6]
 991 002a 002B     		cmp	r3, #0
 992 002c 01D1     		bne	.L39
 993              	.L38:
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 994              		.loc 1 1235 15
 995 002e 0123     		movs	r3, #1
 996 0030 84E0     		b	.L40
 997              	.L39:
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 998              		.loc 1 1239 5
 999 0032 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 40


 1000 0034 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1001 0038 012B     		cmp	r3, #1
 1002 003a 01D1     		bne	.L41
 1003              		.loc 1 1239 5 is_stmt 0 discriminator 1
 1004 003c 0223     		movs	r3, #2
 1005              		.loc 1 1239 5
 1006 003e 7DE0     		b	.L40
 1007              	.L41:
 1008              		.loc 1 1239 5 discriminator 2
 1009 0040 FB68     		ldr	r3, [r7, #12]
 1010 0042 0122     		movs	r2, #1
 1011 0044 83F83C20 		strb	r2, [r3, #60]
1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1012              		.loc 1 1241 22 is_stmt 1
 1013 0048 FB68     		ldr	r3, [r7, #12]
 1014 004a 0022     		movs	r2, #0
 1015 004c 1A64     		str	r2, [r3, #64]
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1016              		.loc 1 1242 20
 1017 004e FB68     		ldr	r3, [r7, #12]
 1018 0050 2222     		movs	r2, #34
 1019 0052 83F83E20 		strb	r2, [r3, #62]
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1020              		.loc 1 1243 26
 1021 0056 FB68     		ldr	r3, [r7, #12]
 1022 0058 0022     		movs	r2, #0
 1023 005a 1A63     		str	r2, [r3, #48]
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout management */
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 1024              		.loc 1 1246 17
 1025 005c FFF7FEFF 		bl	HAL_GetTick
 1026 0060 7861     		str	r0, [r7, #20]
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1027              		.loc 1 1248 23
 1028 0062 FB68     		ldr	r3, [r7, #12]
 1029 0064 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1030 0066 9A85     		strh	r2, [r3, #44]	@ movhi
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1031              		.loc 1 1249 24
 1032 0068 FB68     		ldr	r3, [r7, #12]
 1033 006a FA88     		ldrh	r2, [r7, #6]	@ movhi
 1034 006c DA85     		strh	r2, [r3, #46]	@ movhi
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1035              		.loc 1 1252 21
 1036 006e FB68     		ldr	r3, [r7, #12]
 1037 0070 9B68     		ldr	r3, [r3, #8]
 1038              		.loc 1 1252 8
 1039 0072 B3F5805F 		cmp	r3, #4096
 1040 0076 08D1     		bne	.L42
 1041              		.loc 1 1252 71 discriminator 1
 1042 0078 FB68     		ldr	r3, [r7, #12]
 1043 007a 1B69     		ldr	r3, [r3, #16]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 41


 1044              		.loc 1 1252 56 discriminator 1
 1045 007c 002B     		cmp	r3, #0
 1046 007e 04D1     		bne	.L42
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = NULL;
 1047              		.loc 1 1254 19
 1048 0080 0023     		movs	r3, #0
 1049 0082 FB61     		str	r3, [r7, #28]
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 1050              		.loc 1 1255 19
 1051 0084 BB68     		ldr	r3, [r7, #8]
 1052 0086 BB61     		str	r3, [r7, #24]
 1053 0088 03E0     		b	.L43
 1054              	.L42:
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = pData;
 1055              		.loc 1 1259 19
 1056 008a BB68     		ldr	r3, [r7, #8]
 1057 008c FB61     		str	r3, [r7, #28]
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = NULL;
 1058              		.loc 1 1260 19
 1059 008e 0023     		movs	r3, #0
 1060 0090 BB61     		str	r3, [r7, #24]
 1061              	.L43:
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1062              		.loc 1 1264 5
 1063 0092 FB68     		ldr	r3, [r7, #12]
 1064 0094 0022     		movs	r2, #0
 1065 0096 83F83C20 		strb	r2, [r3, #60]
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check the remain data to be received */
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
 1066              		.loc 1 1267 11
 1067 009a 43E0     		b	.L44
 1068              	.L51:
1268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 1069              		.loc 1 1269 11
 1070 009c 3B68     		ldr	r3, [r7]
 1071 009e 0093     		str	r3, [sp]
 1072 00a0 7B69     		ldr	r3, [r7, #20]
 1073 00a2 0022     		movs	r2, #0
 1074 00a4 2021     		movs	r1, #32
 1075 00a6 F868     		ldr	r0, [r7, #12]
 1076 00a8 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1077 00ac 0346     		mov	r3, r0
 1078              		.loc 1 1269 10 discriminator 1
 1079 00ae 002B     		cmp	r3, #0
 1080 00b0 01D0     		beq	.L45
1270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         return HAL_TIMEOUT;
 1081              		.loc 1 1271 16
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 42


 1082 00b2 0323     		movs	r3, #3
 1083 00b4 42E0     		b	.L40
 1084              	.L45:
1272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (pdata8bits == NULL)
 1085              		.loc 1 1273 10
 1086 00b6 FB69     		ldr	r3, [r7, #28]
 1087 00b8 002B     		cmp	r3, #0
 1088 00ba 0CD1     		bne	.L46
1274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->DR & 0x01FF);
 1089              		.loc 1 1275 40
 1090 00bc FB68     		ldr	r3, [r7, #12]
 1091 00be 1B68     		ldr	r3, [r3]
 1092              		.loc 1 1275 50
 1093 00c0 5B68     		ldr	r3, [r3, #4]
 1094              		.loc 1 1275 24
 1095 00c2 9BB2     		uxth	r3, r3
 1096 00c4 C3F30803 		ubfx	r3, r3, #0, #9
 1097 00c8 9AB2     		uxth	r2, r3
 1098              		.loc 1 1275 22
 1099 00ca BB69     		ldr	r3, [r7, #24]
 1100 00cc 1A80     		strh	r2, [r3]	@ movhi
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         pdata16bits++;
 1101              		.loc 1 1276 20
 1102 00ce BB69     		ldr	r3, [r7, #24]
 1103 00d0 0233     		adds	r3, r3, #2
 1104 00d2 BB61     		str	r3, [r7, #24]
 1105 00d4 1FE0     		b	.L47
 1106              	.L46:
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WORD
 1107              		.loc 1 1280 25
 1108 00d6 FB68     		ldr	r3, [r7, #12]
 1109 00d8 9B68     		ldr	r3, [r3, #8]
 1110              		.loc 1 1280 12
 1111 00da B3F5805F 		cmp	r3, #4096
 1112 00de 07D0     		beq	.L48
 1113              		.loc 1 1280 76 discriminator 1
 1114 00e0 FB68     		ldr	r3, [r7, #12]
 1115 00e2 9B68     		ldr	r3, [r3, #8]
 1116              		.loc 1 1280 60 discriminator 1
 1117 00e4 002B     		cmp	r3, #0
 1118 00e6 0AD1     		bne	.L49
 1119              		.loc 1 1280 126 discriminator 2
 1120 00e8 FB68     		ldr	r3, [r7, #12]
 1121 00ea 1B69     		ldr	r3, [r3, #16]
 1122              		.loc 1 1280 111 discriminator 2
 1123 00ec 002B     		cmp	r3, #0
 1124 00ee 06D1     		bne	.L49
 1125              	.L48:
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 1126              		.loc 1 1282 40
 1127 00f0 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 43


 1128 00f2 1B68     		ldr	r3, [r3]
 1129              		.loc 1 1282 50
 1130 00f4 5B68     		ldr	r3, [r3, #4]
 1131              		.loc 1 1282 25
 1132 00f6 DAB2     		uxtb	r2, r3
 1133              		.loc 1 1282 23
 1134 00f8 FB69     		ldr	r3, [r7, #28]
 1135 00fa 1A70     		strb	r2, [r3]
 1136 00fc 08E0     		b	.L50
 1137              	.L49:
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 1138              		.loc 1 1286 40
 1139 00fe FB68     		ldr	r3, [r7, #12]
 1140 0100 1B68     		ldr	r3, [r3]
 1141              		.loc 1 1286 50
 1142 0102 5B68     		ldr	r3, [r3, #4]
 1143              		.loc 1 1286 25
 1144 0104 DBB2     		uxtb	r3, r3
 1145 0106 03F07F03 		and	r3, r3, #127
 1146 010a DAB2     		uxtb	r2, r3
 1147              		.loc 1 1286 23
 1148 010c FB69     		ldr	r3, [r7, #28]
 1149 010e 1A70     		strb	r2, [r3]
 1150              	.L50:
1287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         pdata8bits++;
 1151              		.loc 1 1288 19
 1152 0110 FB69     		ldr	r3, [r7, #28]
 1153 0112 0133     		adds	r3, r3, #1
 1154 0114 FB61     		str	r3, [r7, #28]
 1155              	.L47:
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount--;
 1156              		.loc 1 1290 12
 1157 0116 FB68     		ldr	r3, [r7, #12]
 1158 0118 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 1159 011a 9BB2     		uxth	r3, r3
 1160              		.loc 1 1290 25
 1161 011c 013B     		subs	r3, r3, #1
 1162 011e 9AB2     		uxth	r2, r3
 1163 0120 FB68     		ldr	r3, [r7, #12]
 1164 0122 DA85     		strh	r2, [r3, #46]	@ movhi
 1165              	.L44:
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1166              		.loc 1 1267 17
 1167 0124 FB68     		ldr	r3, [r7, #12]
 1168 0126 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 1169 0128 9BB2     		uxth	r3, r3
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1170              		.loc 1 1267 31
 1171 012a 002B     		cmp	r3, #0
 1172 012c B6D1     		bne	.L51
1291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 44


1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1173              		.loc 1 1294 20
 1174 012e FB68     		ldr	r3, [r7, #12]
 1175 0130 2022     		movs	r2, #32
 1176 0132 83F83E20 		strb	r2, [r3, #62]
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1177              		.loc 1 1296 12
 1178 0136 0023     		movs	r3, #0
 1179 0138 00E0     		b	.L40
 1180              	.L37:
1297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1181              		.loc 1 1300 12
 1182 013a 0223     		movs	r3, #2
 1183              	.L40:
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1184              		.loc 1 1302 1
 1185 013c 1846     		mov	r0, r3
 1186 013e 2037     		adds	r7, r7, #32
 1187              	.LCFI45:
 1188              		.cfi_def_cfa_offset 8
 1189 0140 BD46     		mov	sp, r7
 1190              	.LCFI46:
 1191              		.cfi_def_cfa_register 13
 1192              		@ sp needed
 1193 0142 80BD     		pop	{r7, pc}
 1194              		.cfi_endproc
 1195              	.LFE224:
 1197              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1198              		.align	1
 1199              		.global	HAL_UART_Transmit_IT
 1200              		.syntax unified
 1201              		.thumb
 1202              		.thumb_func
 1204              	HAL_UART_Transmit_IT:
 1205              	.LFB225:
1303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
1306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 provided through pData.
1309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Si
1316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1206              		.loc 1 1316 1
 1207              		.cfi_startproc
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 45


 1208              		@ args = 0, pretend = 0, frame = 16
 1209              		@ frame_needed = 1, uses_anonymous_args = 0
 1210              		@ link register save eliminated.
 1211 0000 80B4     		push	{r7}
 1212              	.LCFI47:
 1213              		.cfi_def_cfa_offset 4
 1214              		.cfi_offset 7, -4
 1215 0002 85B0     		sub	sp, sp, #20
 1216              	.LCFI48:
 1217              		.cfi_def_cfa_offset 24
 1218 0004 00AF     		add	r7, sp, #0
 1219              	.LCFI49:
 1220              		.cfi_def_cfa_register 7
 1221 0006 F860     		str	r0, [r7, #12]
 1222 0008 B960     		str	r1, [r7, #8]
 1223 000a 1346     		mov	r3, r2
 1224 000c FB80     		strh	r3, [r7, #6]	@ movhi
1317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1225              		.loc 1 1318 12
 1226 000e FB68     		ldr	r3, [r7, #12]
 1227 0010 93F83D30 		ldrb	r3, [r3, #61]
 1228 0014 DBB2     		uxtb	r3, r3
 1229              		.loc 1 1318 6
 1230 0016 202B     		cmp	r3, #32
 1231 0018 30D1     		bne	.L53
1319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1232              		.loc 1 1320 8
 1233 001a BB68     		ldr	r3, [r7, #8]
 1234 001c 002B     		cmp	r3, #0
 1235 001e 02D0     		beq	.L54
 1236              		.loc 1 1320 25 discriminator 1
 1237 0020 FB88     		ldrh	r3, [r7, #6]
 1238 0022 002B     		cmp	r3, #0
 1239 0024 01D1     		bne	.L55
 1240              	.L54:
1321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1241              		.loc 1 1322 14
 1242 0026 0123     		movs	r3, #1
 1243 0028 29E0     		b	.L56
 1244              	.L55:
1323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1245              		.loc 1 1326 5
 1246 002a FB68     		ldr	r3, [r7, #12]
 1247 002c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1248 0030 012B     		cmp	r3, #1
 1249 0032 01D1     		bne	.L57
 1250              		.loc 1 1326 5 is_stmt 0 discriminator 1
 1251 0034 0223     		movs	r3, #2
 1252              		.loc 1 1326 5
 1253 0036 22E0     		b	.L56
 1254              	.L57:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 46


 1255              		.loc 1 1326 5 discriminator 2
 1256 0038 FB68     		ldr	r3, [r7, #12]
 1257 003a 0122     		movs	r2, #1
 1258 003c 83F83C20 		strb	r2, [r3, #60]
1327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1259              		.loc 1 1328 23 is_stmt 1
 1260 0040 FB68     		ldr	r3, [r7, #12]
 1261 0042 BA68     		ldr	r2, [r7, #8]
 1262 0044 1A62     		str	r2, [r3, #32]
1329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1263              		.loc 1 1329 23
 1264 0046 FB68     		ldr	r3, [r7, #12]
 1265 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1266 004a 9A84     		strh	r2, [r3, #36]	@ movhi
1330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1267              		.loc 1 1330 24
 1268 004c FB68     		ldr	r3, [r7, #12]
 1269 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1270 0050 DA84     		strh	r2, [r3, #38]	@ movhi
1331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1271              		.loc 1 1332 22
 1272 0052 FB68     		ldr	r3, [r7, #12]
 1273 0054 0022     		movs	r2, #0
 1274 0056 1A64     		str	r2, [r3, #64]
1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1275              		.loc 1 1333 19
 1276 0058 FB68     		ldr	r3, [r7, #12]
 1277 005a 2122     		movs	r2, #33
 1278 005c 83F83D20 		strb	r2, [r3, #61]
1334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1279              		.loc 1 1336 5
 1280 0060 FB68     		ldr	r3, [r7, #12]
 1281 0062 0022     		movs	r2, #0
 1282 0064 83F83C20 		strb	r2, [r3, #60]
1337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit data register empty Interrupt */
1339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
 1283              		.loc 1 1339 5
 1284 0068 FB68     		ldr	r3, [r7, #12]
 1285 006a 1B68     		ldr	r3, [r3]
 1286 006c DA68     		ldr	r2, [r3, #12]
 1287 006e FB68     		ldr	r3, [r7, #12]
 1288 0070 1B68     		ldr	r3, [r3]
 1289 0072 42F08002 		orr	r2, r2, #128
 1290 0076 DA60     		str	r2, [r3, #12]
1340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1291              		.loc 1 1341 12
 1292 0078 0023     		movs	r3, #0
 1293 007a 00E0     		b	.L56
 1294              	.L53:
1342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 47


1344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1295              		.loc 1 1345 12
 1296 007c 0223     		movs	r3, #2
 1297              	.L56:
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1298              		.loc 1 1347 1
 1299 007e 1846     		mov	r0, r3
 1300 0080 1437     		adds	r7, r7, #20
 1301              	.LCFI50:
 1302              		.cfi_def_cfa_offset 4
 1303 0082 BD46     		mov	sp, r7
 1304              	.LCFI51:
 1305              		.cfi_def_cfa_register 13
 1306              		@ sp needed
 1307 0084 5DF8047B 		ldr	r7, [sp], #4
 1308              	.LCFI52:
 1309              		.cfi_restore 7
 1310              		.cfi_def_cfa_offset 0
 1311 0088 7047     		bx	lr
 1312              		.cfi_endproc
 1313              	.LFE225:
 1315              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1316              		.align	1
 1317              		.global	HAL_UART_Receive_IT
 1318              		.syntax unified
 1319              		.thumb
 1320              		.thumb_func
 1322              	HAL_UART_Receive_IT:
 1323              	.LFB226:
1348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode.
1351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 available through pData.
1354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1324              		.loc 1 1361 1
 1325              		.cfi_startproc
 1326              		@ args = 0, pretend = 0, frame = 16
 1327              		@ frame_needed = 1, uses_anonymous_args = 0
 1328 0000 80B5     		push	{r7, lr}
 1329              	.LCFI53:
 1330              		.cfi_def_cfa_offset 8
 1331              		.cfi_offset 7, -8
 1332              		.cfi_offset 14, -4
 1333 0002 84B0     		sub	sp, sp, #16
 1334              	.LCFI54:
 1335              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 48


 1336 0004 00AF     		add	r7, sp, #0
 1337              	.LCFI55:
 1338              		.cfi_def_cfa_register 7
 1339 0006 F860     		str	r0, [r7, #12]
 1340 0008 B960     		str	r1, [r7, #8]
 1341 000a 1346     		mov	r3, r2
 1342 000c FB80     		strh	r3, [r7, #6]	@ movhi
1362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1343              		.loc 1 1363 12
 1344 000e FB68     		ldr	r3, [r7, #12]
 1345 0010 93F83E30 		ldrb	r3, [r3, #62]
 1346 0014 DBB2     		uxtb	r3, r3
 1347              		.loc 1 1363 6
 1348 0016 202B     		cmp	r3, #32
 1349 0018 1DD1     		bne	.L59
1364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1350              		.loc 1 1365 8
 1351 001a BB68     		ldr	r3, [r7, #8]
 1352 001c 002B     		cmp	r3, #0
 1353 001e 02D0     		beq	.L60
 1354              		.loc 1 1365 25 discriminator 1
 1355 0020 FB88     		ldrh	r3, [r7, #6]
 1356 0022 002B     		cmp	r3, #0
 1357 0024 01D1     		bne	.L61
 1358              	.L60:
1366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1359              		.loc 1 1367 14
 1360 0026 0123     		movs	r3, #1
 1361 0028 16E0     		b	.L62
 1362              	.L61:
1368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1363              		.loc 1 1371 5
 1364 002a FB68     		ldr	r3, [r7, #12]
 1365 002c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1366 0030 012B     		cmp	r3, #1
 1367 0032 01D1     		bne	.L63
 1368              		.loc 1 1371 5 is_stmt 0 discriminator 1
 1369 0034 0223     		movs	r3, #2
 1370              		.loc 1 1371 5
 1371 0036 0FE0     		b	.L62
 1372              	.L63:
 1373              		.loc 1 1371 5 discriminator 2
 1374 0038 FB68     		ldr	r3, [r7, #12]
 1375 003a 0122     		movs	r2, #1
 1376 003c 83F83C20 		strb	r2, [r3, #60]
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1377              		.loc 1 1374 26 is_stmt 1
 1378 0040 FB68     		ldr	r3, [r7, #12]
 1379 0042 0022     		movs	r2, #0
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 49


 1380 0044 1A63     		str	r2, [r3, #48]
1375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return (UART_Start_Receive_IT(huart, pData, Size));
 1381              		.loc 1 1376 13
 1382 0046 FB88     		ldrh	r3, [r7, #6]
 1383 0048 1A46     		mov	r2, r3
 1384 004a B968     		ldr	r1, [r7, #8]
 1385 004c F868     		ldr	r0, [r7, #12]
 1386 004e FFF7FEFF 		bl	UART_Start_Receive_IT
 1387 0052 0346     		mov	r3, r0
 1388 0054 00E0     		b	.L62
 1389              	.L59:
1377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1390              		.loc 1 1380 12
 1391 0056 0223     		movs	r3, #2
 1392              	.L62:
1381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1393              		.loc 1 1382 1
 1394 0058 1846     		mov	r0, r3
 1395 005a 1037     		adds	r7, r7, #16
 1396              	.LCFI56:
 1397              		.cfi_def_cfa_offset 8
 1398 005c BD46     		mov	sp, r7
 1399              	.LCFI57:
 1400              		.cfi_def_cfa_register 13
 1401              		@ sp needed
 1402 005e 80BD     		pop	{r7, pc}
 1403              		.cfi_endproc
 1404              	.LFE226:
 1406              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1407              		.align	1
 1408              		.global	HAL_UART_Transmit_DMA
 1409              		.syntax unified
 1410              		.thumb
 1411              		.thumb_func
 1413              	HAL_UART_Transmit_DMA:
 1414              	.LFB227:
1383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in DMA mode.
1386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 provided through pData.
1389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t S
1396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1415              		.loc 1 1396 1
 1416              		.cfi_startproc
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 50


 1417              		@ args = 0, pretend = 0, frame = 48
 1418              		@ frame_needed = 1, uses_anonymous_args = 0
 1419 0000 80B5     		push	{r7, lr}
 1420              	.LCFI58:
 1421              		.cfi_def_cfa_offset 8
 1422              		.cfi_offset 7, -8
 1423              		.cfi_offset 14, -4
 1424 0002 8CB0     		sub	sp, sp, #48
 1425              	.LCFI59:
 1426              		.cfi_def_cfa_offset 56
 1427 0004 00AF     		add	r7, sp, #0
 1428              	.LCFI60:
 1429              		.cfi_def_cfa_register 7
 1430 0006 F860     		str	r0, [r7, #12]
 1431 0008 B960     		str	r1, [r7, #8]
 1432 000a 1346     		mov	r3, r2
 1433 000c FB80     		strh	r3, [r7, #6]	@ movhi
1397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   const uint32_t *tmp;
1398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1434              		.loc 1 1400 12
 1435 000e FB68     		ldr	r3, [r7, #12]
 1436 0010 93F83D30 		ldrb	r3, [r3, #61]
 1437 0014 DBB2     		uxtb	r3, r3
 1438              		.loc 1 1400 6
 1439 0016 202B     		cmp	r3, #32
 1440 0018 65D1     		bne	.L65
1401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1441              		.loc 1 1402 16
 1442 001a BB68     		ldr	r3, [r7, #8]
 1443              		.loc 1 1402 8
 1444 001c 002B     		cmp	r3, #0
 1445 001e 02D0     		beq	.L66
 1446              		.loc 1 1402 25 discriminator 1
 1447 0020 FB88     		ldrh	r3, [r7, #6]
 1448 0022 002B     		cmp	r3, #0
 1449 0024 01D1     		bne	.L67
 1450              	.L66:
1403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1451              		.loc 1 1404 14
 1452 0026 0123     		movs	r3, #1
 1453 0028 5EE0     		b	.L68
 1454              	.L67:
1405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1455              		.loc 1 1408 5
 1456 002a FB68     		ldr	r3, [r7, #12]
 1457 002c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1458 0030 012B     		cmp	r3, #1
 1459 0032 01D1     		bne	.L69
 1460              		.loc 1 1408 5 is_stmt 0 discriminator 1
 1461 0034 0223     		movs	r3, #2
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 51


 1462              		.loc 1 1408 5
 1463 0036 57E0     		b	.L68
 1464              	.L69:
 1465              		.loc 1 1408 5 discriminator 2
 1466 0038 FB68     		ldr	r3, [r7, #12]
 1467 003a 0122     		movs	r2, #1
 1468 003c 83F83C20 		strb	r2, [r3, #60]
1409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1469              		.loc 1 1410 23 is_stmt 1
 1470 0040 BA68     		ldr	r2, [r7, #8]
 1471 0042 FB68     		ldr	r3, [r7, #12]
 1472 0044 1A62     		str	r2, [r3, #32]
1411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1473              		.loc 1 1411 23
 1474 0046 FB68     		ldr	r3, [r7, #12]
 1475 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1476 004a 9A84     		strh	r2, [r3, #36]	@ movhi
1412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1477              		.loc 1 1412 24
 1478 004c FB68     		ldr	r3, [r7, #12]
 1479 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1480 0050 DA84     		strh	r2, [r3, #38]	@ movhi
1413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1481              		.loc 1 1414 22
 1482 0052 FB68     		ldr	r3, [r7, #12]
 1483 0054 0022     		movs	r2, #0
 1484 0056 1A64     		str	r2, [r3, #64]
1415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1485              		.loc 1 1415 19
 1486 0058 FB68     		ldr	r3, [r7, #12]
 1487 005a 2122     		movs	r2, #33
 1488 005c 83F83D20 		strb	r2, [r3, #61]
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 1489              		.loc 1 1418 10
 1490 0060 FB68     		ldr	r3, [r7, #12]
 1491 0062 5B6B     		ldr	r3, [r3, #52]
 1492              		.loc 1 1418 37
 1493 0064 224A     		ldr	r2, .L73
 1494 0066 DA63     		str	r2, [r3, #60]
1419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 1495              		.loc 1 1421 10
 1496 0068 FB68     		ldr	r3, [r7, #12]
 1497 006a 5B6B     		ldr	r3, [r3, #52]
 1498              		.loc 1 1421 41
 1499 006c 214A     		ldr	r2, .L73+4
 1500 006e 1A64     		str	r2, [r3, #64]
1422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA error callback */
1424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 1501              		.loc 1 1424 10
 1502 0070 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 52


 1503 0072 5B6B     		ldr	r3, [r3, #52]
 1504              		.loc 1 1424 38
 1505 0074 204A     		ldr	r2, .L73+8
 1506 0076 DA64     		str	r2, [r3, #76]
1425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA abort callback */
1427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 1507              		.loc 1 1427 10
 1508 0078 FB68     		ldr	r3, [r7, #12]
 1509 007a 5B6B     		ldr	r3, [r3, #52]
 1510              		.loc 1 1427 38
 1511 007c 0022     		movs	r2, #0
 1512 007e 1A65     		str	r2, [r3, #80]
1428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART transmit DMA stream */
1430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tmp = (const uint32_t *)&pData;
 1513              		.loc 1 1430 9
 1514 0080 07F10803 		add	r3, r7, #8
 1515 0084 FB62     		str	r3, [r7, #44]
1431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(const uint32_t *)tmp, (uint32_t)&huart->Instance->DR, Size);
 1516              		.loc 1 1431 5
 1517 0086 FB68     		ldr	r3, [r7, #12]
 1518 0088 586B     		ldr	r0, [r3, #52]
 1519 008a FB6A     		ldr	r3, [r7, #44]
 1520 008c 1968     		ldr	r1, [r3]
 1521              		.loc 1 1431 77
 1522 008e FB68     		ldr	r3, [r7, #12]
 1523 0090 1B68     		ldr	r3, [r3]
 1524              		.loc 1 1431 71
 1525 0092 0433     		adds	r3, r3, #4
 1526              		.loc 1 1431 5
 1527 0094 1A46     		mov	r2, r3
 1528 0096 FB88     		ldrh	r3, [r7, #6]
 1529 0098 FFF7FEFF 		bl	HAL_DMA_Start_IT
1432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
1434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
 1530              		.loc 1 1434 5
 1531 009c FB68     		ldr	r3, [r7, #12]
 1532 009e 1B68     		ldr	r3, [r3]
 1533 00a0 6FF04002 		mvn	r2, #64
 1534 00a4 1A60     		str	r2, [r3]
1435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1535              		.loc 1 1437 5
 1536 00a6 FB68     		ldr	r3, [r7, #12]
 1537 00a8 0022     		movs	r2, #0
 1538 00aa 83F83C20 		strb	r2, [r3, #60]
 1539              	.L72:
 1540              	.LBB320:
1438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
1441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1541              		.loc 1 1441 5 discriminator 1
 1542 00ae FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 53


 1543 00b0 1B68     		ldr	r3, [r3]
 1544 00b2 1433     		adds	r3, r3, #20
 1545 00b4 BB61     		str	r3, [r7, #24]
 1546              	.LBB321:
 1547              	.LBB322:
 1548              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 54


  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 55


 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 56


 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 57


 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 58


 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 59


 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 60


 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 61


 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 62


 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 63


 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 64


 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 65


 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 66


 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 67


 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 68


 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 883:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 888:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 890:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 896:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 897:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 898:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 899:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 900:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 901:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 902:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 906:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 69


 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 922:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 924:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 937:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 939:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 940:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 946:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 949:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 950:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 960:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 961:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 963:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 70


 964:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 965:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 967:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 968:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 969:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 971:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 972:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 975:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 976:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 977:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 978:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 979:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 980:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 982:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 984:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 985:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 986:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 987:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 991:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 992:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 993:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 994:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 995:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1000:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1001:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1002:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1003:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1004:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1005:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1006:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1007:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1008:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1009:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1010:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1011:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CLZ             (uint8_t)__builtin_clz
1012:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1013:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1014:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1015:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1016:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1017:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1018:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1019:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
1020:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 71


1021:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1022:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1023:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1024:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
1025:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1026:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1027:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1028:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1029:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
1030:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1031:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1032:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1033:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
1034:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1035:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1036:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1037:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1038:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1039:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1040:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1041:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
1042:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
1043:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1044:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1045:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1046:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
1047:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1048:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1049:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1051:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
1052:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1053:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1054:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1055:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
1056:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1057:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1058:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1059:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1060:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1061:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1062:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1063:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
1064:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
1065:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1066:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1067:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
1069:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1070:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1071:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 1549              		.loc 2 1072 4
 1550 00b6 BB69     		ldr	r3, [r7, #24]
 1551              		.syntax unified
 1552              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1553 00b8 53E8003F 		ldrex r3, [r3]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 72


 1554              	@ 0 "" 2
 1555              		.thumb
 1556              		.syntax unified
 1557 00bc 7B61     		str	r3, [r7, #20]
1073:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1558              		.loc 2 1073 10
 1559 00be 7B69     		ldr	r3, [r7, #20]
 1560              	.LBE322:
 1561              	.LBE321:
 1562              		.loc 1 1441 5 discriminator 1
 1563 00c0 43F08003 		orr	r3, r3, #128
 1564 00c4 BB62     		str	r3, [r7, #40]
 1565 00c6 FB68     		ldr	r3, [r7, #12]
 1566 00c8 1B68     		ldr	r3, [r3]
 1567 00ca 1433     		adds	r3, r3, #20
 1568 00cc BA6A     		ldr	r2, [r7, #40]
 1569 00ce 7A62     		str	r2, [r7, #36]
 1570 00d0 3B62     		str	r3, [r7, #32]
 1571              	.LBB323:
 1572              	.LBB324:
1074:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1075:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1076:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1077:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1078:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
1079:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
1080:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1081:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1082:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1083:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1084:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1085:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
1086:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1087:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1088:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1090:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
1091:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1092:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1093:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1094:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1095:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
1096:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
1097:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1098:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1099:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1100:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1101:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1102:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
1103:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1104:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1105:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1106:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1107:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
1108:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1109:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1110:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 73


1111:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1112:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
1113:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
1114:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1115:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1116:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1117:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1118:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1119:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
1120:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1121:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1122:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 1573              		.loc 2 1123 4
 1574 00d2 396A     		ldr	r1, [r7, #32]
 1575 00d4 7A6A     		ldr	r2, [r7, #36]
 1576              		.syntax unified
 1577              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1578 00d6 41E80023 		strex r3, r2, [r1]
 1579              	@ 0 "" 2
 1580              		.thumb
 1581              		.syntax unified
 1582 00da FB61     		str	r3, [r7, #28]
1124:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1583              		.loc 2 1124 10
 1584 00dc FB69     		ldr	r3, [r7, #28]
 1585              	.LBE324:
 1586              	.LBE323:
 1587              		.loc 1 1441 5 discriminator 1
 1588 00de 002B     		cmp	r3, #0
 1589 00e0 E5D1     		bne	.L72
 1590              	.LBE320:
1442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1591              		.loc 1 1443 12
 1592 00e2 0023     		movs	r3, #0
 1593 00e4 00E0     		b	.L68
 1594              	.L65:
1444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1595              		.loc 1 1447 12
 1596 00e6 0223     		movs	r3, #2
 1597              	.L68:
1448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1598              		.loc 1 1449 1
 1599 00e8 1846     		mov	r0, r3
 1600 00ea 3037     		adds	r7, r7, #48
 1601              	.LCFI61:
 1602              		.cfi_def_cfa_offset 8
 1603 00ec BD46     		mov	sp, r7
 1604              	.LCFI62:
 1605              		.cfi_def_cfa_register 13
 1606              		@ sp needed
 1607 00ee 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 74


 1608              	.L74:
 1609              		.align	2
 1610              	.L73:
 1611 00f0 00000000 		.word	UART_DMATransmitCplt
 1612 00f4 00000000 		.word	UART_DMATxHalfCplt
 1613 00f8 00000000 		.word	UART_DMAError
 1614              		.cfi_endproc
 1615              	.LFE227:
 1617              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1618              		.align	1
 1619              		.global	HAL_UART_Receive_DMA
 1620              		.syntax unified
 1621              		.thumb
 1622              		.thumb_func
 1624              	HAL_UART_Receive_DMA:
 1625              	.LFB228:
1450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in DMA mode.
1453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 available through pData.
1456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1) the received data contains the parity bit.
1461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1626              		.loc 1 1464 1
 1627              		.cfi_startproc
 1628              		@ args = 0, pretend = 0, frame = 16
 1629              		@ frame_needed = 1, uses_anonymous_args = 0
 1630 0000 80B5     		push	{r7, lr}
 1631              	.LCFI63:
 1632              		.cfi_def_cfa_offset 8
 1633              		.cfi_offset 7, -8
 1634              		.cfi_offset 14, -4
 1635 0002 84B0     		sub	sp, sp, #16
 1636              	.LCFI64:
 1637              		.cfi_def_cfa_offset 24
 1638 0004 00AF     		add	r7, sp, #0
 1639              	.LCFI65:
 1640              		.cfi_def_cfa_register 7
 1641 0006 F860     		str	r0, [r7, #12]
 1642 0008 B960     		str	r1, [r7, #8]
 1643 000a 1346     		mov	r3, r2
 1644 000c FB80     		strh	r3, [r7, #6]	@ movhi
1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1645              		.loc 1 1466 12
 1646 000e FB68     		ldr	r3, [r7, #12]
 1647 0010 93F83E30 		ldrb	r3, [r3, #62]
 1648 0014 DBB2     		uxtb	r3, r3
 1649              		.loc 1 1466 6
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 75


 1650 0016 202B     		cmp	r3, #32
 1651 0018 1DD1     		bne	.L76
1467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1652              		.loc 1 1468 8
 1653 001a BB68     		ldr	r3, [r7, #8]
 1654 001c 002B     		cmp	r3, #0
 1655 001e 02D0     		beq	.L77
 1656              		.loc 1 1468 25 discriminator 1
 1657 0020 FB88     		ldrh	r3, [r7, #6]
 1658 0022 002B     		cmp	r3, #0
 1659 0024 01D1     		bne	.L78
 1660              	.L77:
1469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1661              		.loc 1 1470 14
 1662 0026 0123     		movs	r3, #1
 1663 0028 16E0     		b	.L79
 1664              	.L78:
1471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1665              		.loc 1 1474 5
 1666 002a FB68     		ldr	r3, [r7, #12]
 1667 002c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1668 0030 012B     		cmp	r3, #1
 1669 0032 01D1     		bne	.L80
 1670              		.loc 1 1474 5 is_stmt 0 discriminator 1
 1671 0034 0223     		movs	r3, #2
 1672              		.loc 1 1474 5
 1673 0036 0FE0     		b	.L79
 1674              	.L80:
 1675              		.loc 1 1474 5 discriminator 2
 1676 0038 FB68     		ldr	r3, [r7, #12]
 1677 003a 0122     		movs	r2, #1
 1678 003c 83F83C20 		strb	r2, [r3, #60]
1475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1679              		.loc 1 1477 26 is_stmt 1
 1680 0040 FB68     		ldr	r3, [r7, #12]
 1681 0042 0022     		movs	r2, #0
 1682 0044 1A63     		str	r2, [r3, #48]
1478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return (UART_Start_Receive_DMA(huart, pData, Size));
 1683              		.loc 1 1479 13
 1684 0046 FB88     		ldrh	r3, [r7, #6]
 1685 0048 1A46     		mov	r2, r3
 1686 004a B968     		ldr	r1, [r7, #8]
 1687 004c F868     		ldr	r0, [r7, #12]
 1688 004e FFF7FEFF 		bl	UART_Start_Receive_DMA
 1689 0052 0346     		mov	r3, r0
 1690 0054 00E0     		b	.L79
 1691              	.L76:
1480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 76


1482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1692              		.loc 1 1483 12
 1693 0056 0223     		movs	r3, #2
 1694              	.L79:
1484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1695              		.loc 1 1485 1
 1696 0058 1846     		mov	r0, r3
 1697 005a 1037     		adds	r7, r7, #16
 1698              	.LCFI66:
 1699              		.cfi_def_cfa_offset 8
 1700 005c BD46     		mov	sp, r7
 1701              	.LCFI67:
 1702              		.cfi_def_cfa_register 13
 1703              		@ sp needed
 1704 005e 80BD     		pop	{r7, pc}
 1705              		.cfi_endproc
 1706              	.LFE228:
 1708              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1709              		.align	1
 1710              		.global	HAL_UART_DMAPause
 1711              		.syntax unified
 1712              		.thumb
 1713              		.thumb_func
 1715              	HAL_UART_DMAPause:
 1716              	.LFB229:
1486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Pauses the DMA Transfer.
1489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1717              		.loc 1 1494 1
 1718              		.cfi_startproc
 1719              		@ args = 0, pretend = 0, frame = 112
 1720              		@ frame_needed = 1, uses_anonymous_args = 0
 1721              		@ link register save eliminated.
 1722 0000 80B4     		push	{r7}
 1723              	.LCFI68:
 1724              		.cfi_def_cfa_offset 4
 1725              		.cfi_offset 7, -4
 1726 0002 9DB0     		sub	sp, sp, #116
 1727              	.LCFI69:
 1728              		.cfi_def_cfa_offset 120
 1729 0004 00AF     		add	r7, sp, #0
 1730              	.LCFI70:
 1731              		.cfi_def_cfa_register 7
 1732 0006 7860     		str	r0, [r7, #4]
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 1733              		.loc 1 1495 12
 1734 0008 0023     		movs	r3, #0
 1735 000a FB66     		str	r3, [r7, #108]
1496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 77


1497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 1736              		.loc 1 1498 3
 1737 000c 7B68     		ldr	r3, [r7, #4]
 1738 000e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1739 0012 012B     		cmp	r3, #1
 1740 0014 01D1     		bne	.L82
 1741              		.loc 1 1498 3 is_stmt 0 discriminator 1
 1742 0016 0223     		movs	r3, #2
 1743              		.loc 1 1498 3
 1744 0018 98E0     		b	.L83
 1745              	.L82:
 1746              		.loc 1 1498 3 discriminator 2
 1747 001a 7B68     		ldr	r3, [r7, #4]
 1748 001c 0122     		movs	r2, #1
 1749 001e 83F83C20 		strb	r2, [r3, #60]
1499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 1750              		.loc 1 1500 16 is_stmt 1
 1751 0022 7B68     		ldr	r3, [r7, #4]
 1752 0024 1B68     		ldr	r3, [r3]
 1753 0026 5B69     		ldr	r3, [r3, #20]
 1754 0028 03F08003 		and	r3, r3, #128
 1755 002c 802B     		cmp	r3, #128
 1756 002e 0CBF     		ite	eq
 1757 0030 0123     		moveq	r3, #1
 1758 0032 0023     		movne	r3, #0
 1759 0034 DBB2     		uxtb	r3, r3
 1760              		.loc 1 1500 14
 1761 0036 FB66     		str	r3, [r7, #108]
1501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 1762              		.loc 1 1501 13
 1763 0038 7B68     		ldr	r3, [r7, #4]
 1764 003a 93F83D30 		ldrb	r3, [r3, #61]
 1765 003e DBB2     		uxtb	r3, r3
 1766              		.loc 1 1501 6
 1767 0040 212B     		cmp	r3, #33
 1768 0042 1CD1     		bne	.L84
 1769              		.loc 1 1501 49 discriminator 1
 1770 0044 FB6E     		ldr	r3, [r7, #108]
 1771 0046 002B     		cmp	r3, #0
 1772 0048 19D0     		beq	.L84
 1773              	.L87:
 1774              	.LBB325:
1502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1775              		.loc 1 1504 5 discriminator 1
 1776 004a 7B68     		ldr	r3, [r7, #4]
 1777 004c 1B68     		ldr	r3, [r3]
 1778 004e 1433     		adds	r3, r3, #20
 1779 0050 FB64     		str	r3, [r7, #76]
 1780              	.LBB326:
 1781              	.LBB327:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1782              		.loc 2 1072 4
 1783 0052 FB6C     		ldr	r3, [r7, #76]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 78


 1784              		.syntax unified
 1785              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1786 0054 53E8003F 		ldrex r3, [r3]
 1787              	@ 0 "" 2
 1788              		.thumb
 1789              		.syntax unified
 1790 0058 BB64     		str	r3, [r7, #72]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1791              		.loc 2 1073 10
 1792 005a BB6C     		ldr	r3, [r7, #72]
 1793              	.LBE327:
 1794              	.LBE326:
 1795              		.loc 1 1504 5 discriminator 1
 1796 005c 23F08003 		bic	r3, r3, #128
 1797 0060 BB66     		str	r3, [r7, #104]
 1798 0062 7B68     		ldr	r3, [r7, #4]
 1799 0064 1B68     		ldr	r3, [r3]
 1800 0066 1433     		adds	r3, r3, #20
 1801 0068 BA6E     		ldr	r2, [r7, #104]
 1802 006a BA65     		str	r2, [r7, #88]
 1803 006c 7B65     		str	r3, [r7, #84]
 1804              	.LBB328:
 1805              	.LBB329:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1806              		.loc 2 1123 4
 1807 006e 796D     		ldr	r1, [r7, #84]
 1808 0070 BA6D     		ldr	r2, [r7, #88]
 1809              		.syntax unified
 1810              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1811 0072 41E80023 		strex r3, r2, [r1]
 1812              	@ 0 "" 2
 1813              		.thumb
 1814              		.syntax unified
 1815 0076 3B65     		str	r3, [r7, #80]
 1816              		.loc 2 1124 10
 1817 0078 3B6D     		ldr	r3, [r7, #80]
 1818              	.LBE329:
 1819              	.LBE328:
 1820              		.loc 1 1504 5 discriminator 1
 1821 007a 002B     		cmp	r3, #0
 1822 007c E5D1     		bne	.L87
 1823              	.L84:
 1824              	.LBE325:
1505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 1825              		.loc 1 1507 16
 1826 007e 7B68     		ldr	r3, [r7, #4]
 1827 0080 1B68     		ldr	r3, [r3]
 1828 0082 5B69     		ldr	r3, [r3, #20]
 1829 0084 03F04003 		and	r3, r3, #64
 1830 0088 402B     		cmp	r3, #64
 1831 008a 0CBF     		ite	eq
 1832 008c 0123     		moveq	r3, #1
 1833 008e 0023     		movne	r3, #0
 1834 0090 DBB2     		uxtb	r3, r3
 1835              		.loc 1 1507 14
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 79


 1836 0092 FB66     		str	r3, [r7, #108]
1508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 1837              		.loc 1 1508 13
 1838 0094 7B68     		ldr	r3, [r7, #4]
 1839 0096 93F83E30 		ldrb	r3, [r3, #62]
 1840 009a DBB2     		uxtb	r3, r3
 1841              		.loc 1 1508 6
 1842 009c 222B     		cmp	r3, #34
 1843 009e 50D1     		bne	.L88
 1844              		.loc 1 1508 50 discriminator 1
 1845 00a0 FB6E     		ldr	r3, [r7, #108]
 1846 00a2 002B     		cmp	r3, #0
 1847 00a4 4DD0     		beq	.L88
 1848              	.L91:
 1849              	.LBB330:
1509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1850              		.loc 1 1511 5 discriminator 1
 1851 00a6 7B68     		ldr	r3, [r7, #4]
 1852 00a8 1B68     		ldr	r3, [r3]
 1853 00aa 0C33     		adds	r3, r3, #12
 1854 00ac BB63     		str	r3, [r7, #56]
 1855              	.LBB331:
 1856              	.LBB332:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1857              		.loc 2 1072 4
 1858 00ae BB6B     		ldr	r3, [r7, #56]
 1859              		.syntax unified
 1860              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1861 00b0 53E8003F 		ldrex r3, [r3]
 1862              	@ 0 "" 2
 1863              		.thumb
 1864              		.syntax unified
 1865 00b4 7B63     		str	r3, [r7, #52]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1866              		.loc 2 1073 10
 1867 00b6 7B6B     		ldr	r3, [r7, #52]
 1868              	.LBE332:
 1869              	.LBE331:
 1870              		.loc 1 1511 5 discriminator 1
 1871 00b8 23F48073 		bic	r3, r3, #256
 1872 00bc 7B66     		str	r3, [r7, #100]
 1873 00be 7B68     		ldr	r3, [r7, #4]
 1874 00c0 1B68     		ldr	r3, [r3]
 1875 00c2 0C33     		adds	r3, r3, #12
 1876 00c4 7A6E     		ldr	r2, [r7, #100]
 1877 00c6 7A64     		str	r2, [r7, #68]
 1878 00c8 3B64     		str	r3, [r7, #64]
 1879              	.LBB333:
 1880              	.LBB334:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1881              		.loc 2 1123 4
 1882 00ca 396C     		ldr	r1, [r7, #64]
 1883 00cc 7A6C     		ldr	r2, [r7, #68]
 1884              		.syntax unified
 1885              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 80


 1886 00ce 41E80023 		strex r3, r2, [r1]
 1887              	@ 0 "" 2
 1888              		.thumb
 1889              		.syntax unified
 1890 00d2 FB63     		str	r3, [r7, #60]
 1891              		.loc 2 1124 10
 1892 00d4 FB6B     		ldr	r3, [r7, #60]
 1893              	.LBE334:
 1894              	.LBE333:
 1895              		.loc 1 1511 5 discriminator 1
 1896 00d6 002B     		cmp	r3, #0
 1897 00d8 E5D1     		bne	.L91
 1898              	.L94:
 1899              	.LBE330:
 1900              	.LBB335:
1512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1901              		.loc 1 1512 5 discriminator 1
 1902 00da 7B68     		ldr	r3, [r7, #4]
 1903 00dc 1B68     		ldr	r3, [r3]
 1904 00de 1433     		adds	r3, r3, #20
 1905 00e0 7B62     		str	r3, [r7, #36]
 1906              	.LBB336:
 1907              	.LBB337:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1908              		.loc 2 1072 4
 1909 00e2 7B6A     		ldr	r3, [r7, #36]
 1910              		.syntax unified
 1911              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1912 00e4 53E8003F 		ldrex r3, [r3]
 1913              	@ 0 "" 2
 1914              		.thumb
 1915              		.syntax unified
 1916 00e8 3B62     		str	r3, [r7, #32]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1917              		.loc 2 1073 10
 1918 00ea 3B6A     		ldr	r3, [r7, #32]
 1919              	.LBE337:
 1920              	.LBE336:
 1921              		.loc 1 1512 5 discriminator 1
 1922 00ec 23F00103 		bic	r3, r3, #1
 1923 00f0 3B66     		str	r3, [r7, #96]
 1924 00f2 7B68     		ldr	r3, [r7, #4]
 1925 00f4 1B68     		ldr	r3, [r3]
 1926 00f6 1433     		adds	r3, r3, #20
 1927 00f8 3A6E     		ldr	r2, [r7, #96]
 1928 00fa 3A63     		str	r2, [r7, #48]
 1929 00fc FB62     		str	r3, [r7, #44]
 1930              	.LBB338:
 1931              	.LBB339:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1932              		.loc 2 1123 4
 1933 00fe F96A     		ldr	r1, [r7, #44]
 1934 0100 3A6B     		ldr	r2, [r7, #48]
 1935              		.syntax unified
 1936              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1937 0102 41E80023 		strex r3, r2, [r1]
 1938              	@ 0 "" 2
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 81


 1939              		.thumb
 1940              		.syntax unified
 1941 0106 BB62     		str	r3, [r7, #40]
 1942              		.loc 2 1124 10
 1943 0108 BB6A     		ldr	r3, [r7, #40]
 1944              	.LBE339:
 1945              	.LBE338:
 1946              		.loc 1 1512 5 discriminator 1
 1947 010a 002B     		cmp	r3, #0
 1948 010c E5D1     		bne	.L94
 1949              	.L97:
 1950              	.LBE335:
 1951              	.LBB340:
1513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1952              		.loc 1 1515 5 discriminator 1
 1953 010e 7B68     		ldr	r3, [r7, #4]
 1954 0110 1B68     		ldr	r3, [r3]
 1955 0112 1433     		adds	r3, r3, #20
 1956 0114 3B61     		str	r3, [r7, #16]
 1957              	.LBB341:
 1958              	.LBB342:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1959              		.loc 2 1072 4
 1960 0116 3B69     		ldr	r3, [r7, #16]
 1961              		.syntax unified
 1962              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1963 0118 53E8003F 		ldrex r3, [r3]
 1964              	@ 0 "" 2
 1965              		.thumb
 1966              		.syntax unified
 1967 011c FB60     		str	r3, [r7, #12]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1968              		.loc 2 1073 10
 1969 011e FB68     		ldr	r3, [r7, #12]
 1970              	.LBE342:
 1971              	.LBE341:
 1972              		.loc 1 1515 5 discriminator 1
 1973 0120 23F04003 		bic	r3, r3, #64
 1974 0124 FB65     		str	r3, [r7, #92]
 1975 0126 7B68     		ldr	r3, [r7, #4]
 1976 0128 1B68     		ldr	r3, [r3]
 1977 012a 1433     		adds	r3, r3, #20
 1978 012c FA6D     		ldr	r2, [r7, #92]
 1979 012e FA61     		str	r2, [r7, #28]
 1980 0130 BB61     		str	r3, [r7, #24]
 1981              	.LBB343:
 1982              	.LBB344:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1983              		.loc 2 1123 4
 1984 0132 B969     		ldr	r1, [r7, #24]
 1985 0134 FA69     		ldr	r2, [r7, #28]
 1986              		.syntax unified
 1987              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1988 0136 41E80023 		strex r3, r2, [r1]
 1989              	@ 0 "" 2
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 82


 1990              		.thumb
 1991              		.syntax unified
 1992 013a 7B61     		str	r3, [r7, #20]
 1993              		.loc 2 1124 10
 1994 013c 7B69     		ldr	r3, [r7, #20]
 1995              	.LBE344:
 1996              	.LBE343:
 1997              		.loc 1 1515 5 discriminator 1
 1998 013e 002B     		cmp	r3, #0
 1999 0140 E5D1     		bne	.L97
 2000              	.L88:
 2001              	.LBE340:
1516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2002              		.loc 1 1519 3
 2003 0142 7B68     		ldr	r3, [r7, #4]
 2004 0144 0022     		movs	r2, #0
 2005 0146 83F83C20 		strb	r2, [r3, #60]
1520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2006              		.loc 1 1521 10
 2007 014a 0023     		movs	r3, #0
 2008              	.L83:
1522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2009              		.loc 1 1522 1
 2010 014c 1846     		mov	r0, r3
 2011 014e 7437     		adds	r7, r7, #116
 2012              	.LCFI71:
 2013              		.cfi_def_cfa_offset 4
 2014 0150 BD46     		mov	sp, r7
 2015              	.LCFI72:
 2016              		.cfi_def_cfa_register 13
 2017              		@ sp needed
 2018 0152 5DF8047B 		ldr	r7, [sp], #4
 2019              	.LCFI73:
 2020              		.cfi_restore 7
 2021              		.cfi_def_cfa_offset 0
 2022 0156 7047     		bx	lr
 2023              		.cfi_endproc
 2024              	.LFE229:
 2026              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 2027              		.align	1
 2028              		.global	HAL_UART_DMAResume
 2029              		.syntax unified
 2030              		.thumb
 2031              		.thumb_func
 2033              	HAL_UART_DMAResume:
 2034              	.LFB230:
1523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Resumes the DMA Transfer.
1526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 83


1530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2035              		.loc 1 1531 1
 2036              		.cfi_startproc
 2037              		@ args = 0, pretend = 0, frame = 112
 2038              		@ frame_needed = 1, uses_anonymous_args = 0
 2039              		@ link register save eliminated.
 2040 0000 80B4     		push	{r7}
 2041              	.LCFI74:
 2042              		.cfi_def_cfa_offset 4
 2043              		.cfi_offset 7, -4
 2044 0002 9DB0     		sub	sp, sp, #116
 2045              	.LCFI75:
 2046              		.cfi_def_cfa_offset 120
 2047 0004 00AF     		add	r7, sp, #0
 2048              	.LCFI76:
 2049              		.cfi_def_cfa_register 7
 2050 0006 7860     		str	r0, [r7, #4]
1532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 2051              		.loc 1 1533 3
 2052 0008 7B68     		ldr	r3, [r7, #4]
 2053 000a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2054 000e 012B     		cmp	r3, #1
 2055 0010 01D1     		bne	.L99
 2056              		.loc 1 1533 3 is_stmt 0 discriminator 1
 2057 0012 0223     		movs	r3, #2
 2058              		.loc 1 1533 3
 2059 0014 8BE0     		b	.L100
 2060              	.L99:
 2061              		.loc 1 1533 3 discriminator 2
 2062 0016 7B68     		ldr	r3, [r7, #4]
 2063 0018 0122     		movs	r2, #1
 2064 001a 83F83C20 		strb	r2, [r3, #60]
1534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 2065              		.loc 1 1535 12 is_stmt 1
 2066 001e 7B68     		ldr	r3, [r7, #4]
 2067 0020 93F83D30 		ldrb	r3, [r3, #61]
 2068 0024 DBB2     		uxtb	r3, r3
 2069              		.loc 1 1535 6
 2070 0026 212B     		cmp	r3, #33
 2071 0028 19D1     		bne	.L101
 2072              	.L104:
 2073              	.LBB345:
1536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2074              		.loc 1 1538 5 discriminator 1
 2075 002a 7B68     		ldr	r3, [r7, #4]
 2076 002c 1B68     		ldr	r3, [r3]
 2077 002e 1433     		adds	r3, r3, #20
 2078 0030 3B65     		str	r3, [r7, #80]
 2079              	.LBB346:
 2080              	.LBB347:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2081              		.loc 2 1072 4
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 84


 2082 0032 3B6D     		ldr	r3, [r7, #80]
 2083              		.syntax unified
 2084              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2085 0034 53E8003F 		ldrex r3, [r3]
 2086              	@ 0 "" 2
 2087              		.thumb
 2088              		.syntax unified
 2089 0038 FB64     		str	r3, [r7, #76]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2090              		.loc 2 1073 10
 2091 003a FB6C     		ldr	r3, [r7, #76]
 2092              	.LBE347:
 2093              	.LBE346:
 2094              		.loc 1 1538 5 discriminator 1
 2095 003c 43F08003 		orr	r3, r3, #128
 2096 0040 FB66     		str	r3, [r7, #108]
 2097 0042 7B68     		ldr	r3, [r7, #4]
 2098 0044 1B68     		ldr	r3, [r3]
 2099 0046 1433     		adds	r3, r3, #20
 2100 0048 FA6E     		ldr	r2, [r7, #108]
 2101 004a FA65     		str	r2, [r7, #92]
 2102 004c BB65     		str	r3, [r7, #88]
 2103              	.LBB348:
 2104              	.LBB349:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2105              		.loc 2 1123 4
 2106 004e B96D     		ldr	r1, [r7, #88]
 2107 0050 FA6D     		ldr	r2, [r7, #92]
 2108              		.syntax unified
 2109              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2110 0052 41E80023 		strex r3, r2, [r1]
 2111              	@ 0 "" 2
 2112              		.thumb
 2113              		.syntax unified
 2114 0056 7B65     		str	r3, [r7, #84]
 2115              		.loc 2 1124 10
 2116 0058 7B6D     		ldr	r3, [r7, #84]
 2117              	.LBE349:
 2118              	.LBE348:
 2119              		.loc 1 1538 5 discriminator 1
 2120 005a 002B     		cmp	r3, #0
 2121 005c E5D1     		bne	.L104
 2122              	.L101:
 2123              	.LBE345:
1539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2124              		.loc 1 1541 12
 2125 005e 7B68     		ldr	r3, [r7, #4]
 2126 0060 93F83E30 		ldrb	r3, [r3, #62]
 2127 0064 DBB2     		uxtb	r3, r3
 2128              		.loc 1 1541 6
 2129 0066 222B     		cmp	r3, #34
 2130 0068 5CD1     		bne	.L105
 2131              	.LBB350:
1542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 85


1544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
 2132              		.loc 1 1544 5
 2133 006a 0023     		movs	r3, #0
 2134 006c FB60     		str	r3, [r7, #12]
 2135 006e 7B68     		ldr	r3, [r7, #4]
 2136 0070 1B68     		ldr	r3, [r3]
 2137 0072 1B68     		ldr	r3, [r3]
 2138 0074 FB60     		str	r3, [r7, #12]
 2139 0076 7B68     		ldr	r3, [r7, #4]
 2140 0078 1B68     		ldr	r3, [r3]
 2141 007a 5B68     		ldr	r3, [r3, #4]
 2142 007c FB60     		str	r3, [r7, #12]
 2143 007e FB68     		ldr	r3, [r7, #12]
 2144              	.LBE350:
1545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Re-enable PE and ERR (Frame error, noise error, overrun error) interrupts */
1547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->Init.Parity != UART_PARITY_NONE)
 2145              		.loc 1 1547 20
 2146 0080 7B68     		ldr	r3, [r7, #4]
 2147 0082 1B69     		ldr	r3, [r3, #16]
 2148              		.loc 1 1547 8
 2149 0084 002B     		cmp	r3, #0
 2150 0086 19D0     		beq	.L112
 2151              	.L109:
 2152              	.LBB351:
1548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2153              		.loc 1 1549 7 discriminator 1
 2154 0088 7B68     		ldr	r3, [r7, #4]
 2155 008a 1B68     		ldr	r3, [r3]
 2156 008c 0C33     		adds	r3, r3, #12
 2157 008e FB63     		str	r3, [r7, #60]
 2158              	.LBB352:
 2159              	.LBB353:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2160              		.loc 2 1072 4
 2161 0090 FB6B     		ldr	r3, [r7, #60]
 2162              		.syntax unified
 2163              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2164 0092 53E8003F 		ldrex r3, [r3]
 2165              	@ 0 "" 2
 2166              		.thumb
 2167              		.syntax unified
 2168 0096 BB63     		str	r3, [r7, #56]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2169              		.loc 2 1073 10
 2170 0098 BB6B     		ldr	r3, [r7, #56]
 2171              	.LBE353:
 2172              	.LBE352:
 2173              		.loc 1 1549 7 discriminator 1
 2174 009a 43F48073 		orr	r3, r3, #256
 2175 009e BB66     		str	r3, [r7, #104]
 2176 00a0 7B68     		ldr	r3, [r7, #4]
 2177 00a2 1B68     		ldr	r3, [r3]
 2178 00a4 0C33     		adds	r3, r3, #12
 2179 00a6 BA6E     		ldr	r2, [r7, #104]
 2180 00a8 BA64     		str	r2, [r7, #72]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 86


 2181 00aa 7B64     		str	r3, [r7, #68]
 2182              	.LBB354:
 2183              	.LBB355:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2184              		.loc 2 1123 4
 2185 00ac 796C     		ldr	r1, [r7, #68]
 2186 00ae BA6C     		ldr	r2, [r7, #72]
 2187              		.syntax unified
 2188              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2189 00b0 41E80023 		strex r3, r2, [r1]
 2190              	@ 0 "" 2
 2191              		.thumb
 2192              		.syntax unified
 2193 00b4 3B64     		str	r3, [r7, #64]
 2194              		.loc 2 1124 10
 2195 00b6 3B6C     		ldr	r3, [r7, #64]
 2196              	.LBE355:
 2197              	.LBE354:
 2198              		.loc 1 1549 7 discriminator 1
 2199 00b8 002B     		cmp	r3, #0
 2200 00ba E5D1     		bne	.L109
 2201              	.L112:
 2202              	.LBE351:
 2203              	.LBB356:
1550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2204              		.loc 1 1551 5 discriminator 1
 2205 00bc 7B68     		ldr	r3, [r7, #4]
 2206 00be 1B68     		ldr	r3, [r3]
 2207 00c0 1433     		adds	r3, r3, #20
 2208 00c2 BB62     		str	r3, [r7, #40]
 2209              	.LBB357:
 2210              	.LBB358:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2211              		.loc 2 1072 4
 2212 00c4 BB6A     		ldr	r3, [r7, #40]
 2213              		.syntax unified
 2214              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2215 00c6 53E8003F 		ldrex r3, [r3]
 2216              	@ 0 "" 2
 2217              		.thumb
 2218              		.syntax unified
 2219 00ca 7B62     		str	r3, [r7, #36]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2220              		.loc 2 1073 10
 2221 00cc 7B6A     		ldr	r3, [r7, #36]
 2222              	.LBE358:
 2223              	.LBE357:
 2224              		.loc 1 1551 5 discriminator 1
 2225 00ce 43F00103 		orr	r3, r3, #1
 2226 00d2 7B66     		str	r3, [r7, #100]
 2227 00d4 7B68     		ldr	r3, [r7, #4]
 2228 00d6 1B68     		ldr	r3, [r3]
 2229 00d8 1433     		adds	r3, r3, #20
 2230 00da 7A6E     		ldr	r2, [r7, #100]
 2231 00dc 7A63     		str	r2, [r7, #52]
 2232 00de 3B63     		str	r3, [r7, #48]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 87


 2233              	.LBB359:
 2234              	.LBB360:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2235              		.loc 2 1123 4
 2236 00e0 396B     		ldr	r1, [r7, #48]
 2237 00e2 7A6B     		ldr	r2, [r7, #52]
 2238              		.syntax unified
 2239              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2240 00e4 41E80023 		strex r3, r2, [r1]
 2241              	@ 0 "" 2
 2242              		.thumb
 2243              		.syntax unified
 2244 00e8 FB62     		str	r3, [r7, #44]
 2245              		.loc 2 1124 10
 2246 00ea FB6A     		ldr	r3, [r7, #44]
 2247              	.LBE360:
 2248              	.LBE359:
 2249              		.loc 1 1551 5 discriminator 1
 2250 00ec 002B     		cmp	r3, #0
 2251 00ee E5D1     		bne	.L112
 2252              	.L115:
 2253              	.LBE356:
 2254              	.LBB361:
1552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2255              		.loc 1 1554 5 discriminator 1
 2256 00f0 7B68     		ldr	r3, [r7, #4]
 2257 00f2 1B68     		ldr	r3, [r3]
 2258 00f4 1433     		adds	r3, r3, #20
 2259 00f6 7B61     		str	r3, [r7, #20]
 2260              	.LBB362:
 2261              	.LBB363:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2262              		.loc 2 1072 4
 2263 00f8 7B69     		ldr	r3, [r7, #20]
 2264              		.syntax unified
 2265              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2266 00fa 53E8003F 		ldrex r3, [r3]
 2267              	@ 0 "" 2
 2268              		.thumb
 2269              		.syntax unified
 2270 00fe 3B61     		str	r3, [r7, #16]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2271              		.loc 2 1073 10
 2272 0100 3B69     		ldr	r3, [r7, #16]
 2273              	.LBE363:
 2274              	.LBE362:
 2275              		.loc 1 1554 5 discriminator 1
 2276 0102 43F04003 		orr	r3, r3, #64
 2277 0106 3B66     		str	r3, [r7, #96]
 2278 0108 7B68     		ldr	r3, [r7, #4]
 2279 010a 1B68     		ldr	r3, [r3]
 2280 010c 1433     		adds	r3, r3, #20
 2281 010e 3A6E     		ldr	r2, [r7, #96]
 2282 0110 3A62     		str	r2, [r7, #32]
 2283 0112 FB61     		str	r3, [r7, #28]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 88


 2284              	.LBB364:
 2285              	.LBB365:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2286              		.loc 2 1123 4
 2287 0114 F969     		ldr	r1, [r7, #28]
 2288 0116 3A6A     		ldr	r2, [r7, #32]
 2289              		.syntax unified
 2290              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2291 0118 41E80023 		strex r3, r2, [r1]
 2292              	@ 0 "" 2
 2293              		.thumb
 2294              		.syntax unified
 2295 011c BB61     		str	r3, [r7, #24]
 2296              		.loc 2 1124 10
 2297 011e BB69     		ldr	r3, [r7, #24]
 2298              	.LBE365:
 2299              	.LBE364:
 2300              		.loc 1 1554 5 discriminator 1
 2301 0120 002B     		cmp	r3, #0
 2302 0122 E5D1     		bne	.L115
 2303              	.L105:
 2304              	.LBE361:
1555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2305              		.loc 1 1558 3
 2306 0124 7B68     		ldr	r3, [r7, #4]
 2307 0126 0022     		movs	r2, #0
 2308 0128 83F83C20 		strb	r2, [r3, #60]
1559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2309              		.loc 1 1560 10
 2310 012c 0023     		movs	r3, #0
 2311              	.L100:
1561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2312              		.loc 1 1561 1
 2313 012e 1846     		mov	r0, r3
 2314 0130 7437     		adds	r7, r7, #116
 2315              	.LCFI77:
 2316              		.cfi_def_cfa_offset 4
 2317 0132 BD46     		mov	sp, r7
 2318              	.LCFI78:
 2319              		.cfi_def_cfa_register 13
 2320              		@ sp needed
 2321 0134 5DF8047B 		ldr	r7, [sp], #4
 2322              	.LCFI79:
 2323              		.cfi_restore 7
 2324              		.cfi_def_cfa_offset 0
 2325 0138 7047     		bx	lr
 2326              		.cfi_endproc
 2327              	.LFE230:
 2329              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2330              		.align	1
 2331              		.global	HAL_UART_DMAStop
 2332              		.syntax unified
 2333              		.thumb
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 89


 2334              		.thumb_func
 2336              	HAL_UART_DMAStop:
 2337              	.LFB231:
1562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Stops the DMA Transfer.
1565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2338              		.loc 1 1570 1
 2339              		.cfi_startproc
 2340              		@ args = 0, pretend = 0, frame = 64
 2341              		@ frame_needed = 1, uses_anonymous_args = 0
 2342 0000 80B5     		push	{r7, lr}
 2343              	.LCFI80:
 2344              		.cfi_def_cfa_offset 8
 2345              		.cfi_offset 7, -8
 2346              		.cfi_offset 14, -4
 2347 0002 90B0     		sub	sp, sp, #64
 2348              	.LCFI81:
 2349              		.cfi_def_cfa_offset 72
 2350 0004 00AF     		add	r7, sp, #0
 2351              	.LCFI82:
 2352              		.cfi_def_cfa_register 7
 2353 0006 7860     		str	r0, [r7, #4]
1571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2354              		.loc 1 1571 12
 2355 0008 0023     		movs	r3, #0
 2356 000a FB63     		str	r3, [r7, #60]
1572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
1575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      and the correspond call back is executed HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      */
1577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 2357              		.loc 1 1579 16
 2358 000c 7B68     		ldr	r3, [r7, #4]
 2359 000e 1B68     		ldr	r3, [r3]
 2360 0010 5B69     		ldr	r3, [r3, #20]
 2361 0012 03F08003 		and	r3, r3, #128
 2362 0016 802B     		cmp	r3, #128
 2363 0018 0CBF     		ite	eq
 2364 001a 0123     		moveq	r3, #1
 2365 001c 0023     		movne	r3, #0
 2366 001e DBB2     		uxtb	r3, r3
 2367              		.loc 1 1579 14
 2368 0020 FB63     		str	r3, [r7, #60]
1580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2369              		.loc 1 1580 13
 2370 0022 7B68     		ldr	r3, [r7, #4]
 2371 0024 93F83D30 		ldrb	r3, [r3, #61]
 2372 0028 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 90


 2373              		.loc 1 1580 6
 2374 002a 212B     		cmp	r3, #33
 2375 002c 28D1     		bne	.L117
 2376              		.loc 1 1580 49 discriminator 1
 2377 002e FB6B     		ldr	r3, [r7, #60]
 2378 0030 002B     		cmp	r3, #0
 2379 0032 25D0     		beq	.L117
 2380              	.L120:
 2381              	.LBB366:
1581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2382              		.loc 1 1582 5 discriminator 1
 2383 0034 7B68     		ldr	r3, [r7, #4]
 2384 0036 1B68     		ldr	r3, [r3]
 2385 0038 1433     		adds	r3, r3, #20
 2386 003a 7B62     		str	r3, [r7, #36]
 2387              	.LBB367:
 2388              	.LBB368:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2389              		.loc 2 1072 4
 2390 003c 7B6A     		ldr	r3, [r7, #36]
 2391              		.syntax unified
 2392              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2393 003e 53E8003F 		ldrex r3, [r3]
 2394              	@ 0 "" 2
 2395              		.thumb
 2396              		.syntax unified
 2397 0042 3B62     		str	r3, [r7, #32]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2398              		.loc 2 1073 10
 2399 0044 3B6A     		ldr	r3, [r7, #32]
 2400              	.LBE368:
 2401              	.LBE367:
 2402              		.loc 1 1582 5 discriminator 1
 2403 0046 23F08003 		bic	r3, r3, #128
 2404 004a BB63     		str	r3, [r7, #56]
 2405 004c 7B68     		ldr	r3, [r7, #4]
 2406 004e 1B68     		ldr	r3, [r3]
 2407 0050 1433     		adds	r3, r3, #20
 2408 0052 BA6B     		ldr	r2, [r7, #56]
 2409 0054 3A63     		str	r2, [r7, #48]
 2410 0056 FB62     		str	r3, [r7, #44]
 2411              	.LBB369:
 2412              	.LBB370:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2413              		.loc 2 1123 4
 2414 0058 F96A     		ldr	r1, [r7, #44]
 2415 005a 3A6B     		ldr	r2, [r7, #48]
 2416              		.syntax unified
 2417              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2418 005c 41E80023 		strex r3, r2, [r1]
 2419              	@ 0 "" 2
 2420              		.thumb
 2421              		.syntax unified
 2422 0060 BB62     		str	r3, [r7, #40]
 2423              		.loc 2 1124 10
 2424 0062 BB6A     		ldr	r3, [r7, #40]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 91


 2425              	.LBE370:
 2426              	.LBE369:
 2427              		.loc 1 1582 5 discriminator 1
 2428 0064 002B     		cmp	r3, #0
 2429 0066 E5D1     		bne	.L120
 2430              	.LBE366:
1583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream */
1585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2431              		.loc 1 1585 14
 2432 0068 7B68     		ldr	r3, [r7, #4]
 2433 006a 5B6B     		ldr	r3, [r3, #52]
 2434              		.loc 1 1585 8
 2435 006c 002B     		cmp	r3, #0
 2436 006e 04D0     		beq	.L121
1586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
 2437              		.loc 1 1587 7
 2438 0070 7B68     		ldr	r3, [r7, #4]
 2439 0072 5B6B     		ldr	r3, [r3, #52]
 2440 0074 1846     		mov	r0, r3
 2441 0076 FFF7FEFF 		bl	HAL_DMA_Abort
 2442              	.L121:
1588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2443              		.loc 1 1589 5
 2444 007a 7868     		ldr	r0, [r7, #4]
 2445 007c FFF7FEFF 		bl	UART_EndTxTransfer
 2446              	.L117:
1590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 2447              		.loc 1 1593 16
 2448 0080 7B68     		ldr	r3, [r7, #4]
 2449 0082 1B68     		ldr	r3, [r3]
 2450 0084 5B69     		ldr	r3, [r3, #20]
 2451 0086 03F04003 		and	r3, r3, #64
 2452 008a 402B     		cmp	r3, #64
 2453 008c 0CBF     		ite	eq
 2454 008e 0123     		moveq	r3, #1
 2455 0090 0023     		movne	r3, #0
 2456 0092 DBB2     		uxtb	r3, r3
 2457              		.loc 1 1593 14
 2458 0094 FB63     		str	r3, [r7, #60]
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2459              		.loc 1 1594 13
 2460 0096 7B68     		ldr	r3, [r7, #4]
 2461 0098 93F83E30 		ldrb	r3, [r3, #62]
 2462 009c DBB2     		uxtb	r3, r3
 2463              		.loc 1 1594 6
 2464 009e 222B     		cmp	r3, #34
 2465 00a0 28D1     		bne	.L122
 2466              		.loc 1 1594 50 discriminator 1
 2467 00a2 FB6B     		ldr	r3, [r7, #60]
 2468 00a4 002B     		cmp	r3, #0
 2469 00a6 25D0     		beq	.L122
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 92


 2470              	.L125:
 2471              	.LBB371:
1595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2472              		.loc 1 1596 5 discriminator 1
 2473 00a8 7B68     		ldr	r3, [r7, #4]
 2474 00aa 1B68     		ldr	r3, [r3]
 2475 00ac 1433     		adds	r3, r3, #20
 2476 00ae 3B61     		str	r3, [r7, #16]
 2477              	.LBB372:
 2478              	.LBB373:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2479              		.loc 2 1072 4
 2480 00b0 3B69     		ldr	r3, [r7, #16]
 2481              		.syntax unified
 2482              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2483 00b2 53E8003F 		ldrex r3, [r3]
 2484              	@ 0 "" 2
 2485              		.thumb
 2486              		.syntax unified
 2487 00b6 FB60     		str	r3, [r7, #12]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2488              		.loc 2 1073 10
 2489 00b8 FB68     		ldr	r3, [r7, #12]
 2490              	.LBE373:
 2491              	.LBE372:
 2492              		.loc 1 1596 5 discriminator 1
 2493 00ba 23F04003 		bic	r3, r3, #64
 2494 00be 7B63     		str	r3, [r7, #52]
 2495 00c0 7B68     		ldr	r3, [r7, #4]
 2496 00c2 1B68     		ldr	r3, [r3]
 2497 00c4 1433     		adds	r3, r3, #20
 2498 00c6 7A6B     		ldr	r2, [r7, #52]
 2499 00c8 FA61     		str	r2, [r7, #28]
 2500 00ca BB61     		str	r3, [r7, #24]
 2501              	.LBB374:
 2502              	.LBB375:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2503              		.loc 2 1123 4
 2504 00cc B969     		ldr	r1, [r7, #24]
 2505 00ce FA69     		ldr	r2, [r7, #28]
 2506              		.syntax unified
 2507              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2508 00d0 41E80023 		strex r3, r2, [r1]
 2509              	@ 0 "" 2
 2510              		.thumb
 2511              		.syntax unified
 2512 00d4 7B61     		str	r3, [r7, #20]
 2513              		.loc 2 1124 10
 2514 00d6 7B69     		ldr	r3, [r7, #20]
 2515              	.LBE375:
 2516              	.LBE374:
 2517              		.loc 1 1596 5 discriminator 1
 2518 00d8 002B     		cmp	r3, #0
 2519 00da E5D1     		bne	.L125
 2520              	.LBE371:
1597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 93


1598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream */
1599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2521              		.loc 1 1599 14
 2522 00dc 7B68     		ldr	r3, [r7, #4]
 2523 00de 9B6B     		ldr	r3, [r3, #56]
 2524              		.loc 1 1599 8
 2525 00e0 002B     		cmp	r3, #0
 2526 00e2 04D0     		beq	.L126
1600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
 2527              		.loc 1 1601 7
 2528 00e4 7B68     		ldr	r3, [r7, #4]
 2529 00e6 9B6B     		ldr	r3, [r3, #56]
 2530 00e8 1846     		mov	r0, r3
 2531 00ea FFF7FEFF 		bl	HAL_DMA_Abort
 2532              	.L126:
1602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2533              		.loc 1 1603 5
 2534 00ee 7868     		ldr	r0, [r7, #4]
 2535 00f0 FFF7FEFF 		bl	UART_EndRxTransfer
 2536              	.L122:
1604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2537              		.loc 1 1606 10
 2538 00f4 0023     		movs	r3, #0
1607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2539              		.loc 1 1607 1
 2540 00f6 1846     		mov	r0, r3
 2541 00f8 4037     		adds	r7, r7, #64
 2542              	.LCFI83:
 2543              		.cfi_def_cfa_offset 8
 2544 00fa BD46     		mov	sp, r7
 2545              	.LCFI84:
 2546              		.cfi_def_cfa_register 13
 2547              		@ sp needed
 2548 00fc 80BD     		pop	{r7, pc}
 2549              		.cfi_endproc
 2550              	.LFE231:
 2552              		.section	.text.HAL_UARTEx_ReceiveToIdle,"ax",%progbits
 2553              		.align	1
 2554              		.global	HAL_UARTEx_ReceiveToIdle
 2555              		.syntax unified
 2556              		.thumb
 2557              		.thumb_func
 2559              	HAL_UARTEx_ReceiveToIdle:
 2560              	.LFB232:
1608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode till either the expected number of data is re
1611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   HAL_OK is returned if reception is completed (expected number of data has been received
1612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         or if reception is stopped after IDLE event (less than the expected number of data has 
1613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         In this case, RxLen output parameter indicates number of data available in reception bu
1614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M =
1615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of uint16_t. In this case, Size must indicate the
1616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of uint16_t available through pData.
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 94


1617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param huart   UART handle.
1618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param pData   Pointer to data buffer (uint8_t or uint16_t data elements).
1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param Size    Amount of data elements (uint8_t or uint16_t) to be received.
1620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param RxLen   Number of data elements finally received (could be lower than Size, in case rece
1621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param Timeout Timeout duration expressed in ms (covers the whole reception sequence).
1622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size
1625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                            uint32_t Timeout)
1626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2561              		.loc 1 1626 1
 2562              		.cfi_startproc
 2563              		@ args = 4, pretend = 0, frame = 32
 2564              		@ frame_needed = 1, uses_anonymous_args = 0
 2565 0000 80B5     		push	{r7, lr}
 2566              	.LCFI85:
 2567              		.cfi_def_cfa_offset 8
 2568              		.cfi_offset 7, -8
 2569              		.cfi_offset 14, -4
 2570 0002 88B0     		sub	sp, sp, #32
 2571              	.LCFI86:
 2572              		.cfi_def_cfa_offset 40
 2573 0004 00AF     		add	r7, sp, #0
 2574              	.LCFI87:
 2575              		.cfi_def_cfa_register 7
 2576 0006 F860     		str	r0, [r7, #12]
 2577 0008 B960     		str	r1, [r7, #8]
 2578 000a 3B60     		str	r3, [r7]
 2579 000c 1346     		mov	r3, r2	@ movhi
 2580 000e FB80     		strh	r3, [r7, #6]	@ movhi
1627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint8_t  *pdata8bits;
1628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *pdata16bits;
1629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart;
1630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 2581              		.loc 1 1632 12
 2582 0010 FB68     		ldr	r3, [r7, #12]
 2583 0012 93F83E30 		ldrb	r3, [r3, #62]
 2584 0016 DBB2     		uxtb	r3, r3
 2585              		.loc 1 1632 6
 2586 0018 202B     		cmp	r3, #32
 2587 001a 40F0C980 		bne	.L129
1633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 2588              		.loc 1 1634 8
 2589 001e BB68     		ldr	r3, [r7, #8]
 2590 0020 002B     		cmp	r3, #0
 2591 0022 02D0     		beq	.L130
 2592              		.loc 1 1634 25 discriminator 1
 2593 0024 FB88     		ldrh	r3, [r7, #6]
 2594 0026 002B     		cmp	r3, #0
 2595 0028 01D1     		bne	.L131
 2596              	.L130:
1635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 2597              		.loc 1 1636 15
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 95


 2598 002a 0123     		movs	r3, #1
 2599 002c C1E0     		b	.L132
 2600              	.L131:
1637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 2601              		.loc 1 1639 5
 2602 002e FB68     		ldr	r3, [r7, #12]
 2603 0030 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2604 0034 012B     		cmp	r3, #1
 2605 0036 01D1     		bne	.L133
 2606              		.loc 1 1639 5 is_stmt 0 discriminator 1
 2607 0038 0223     		movs	r3, #2
 2608              		.loc 1 1639 5
 2609 003a BAE0     		b	.L132
 2610              	.L133:
 2611              		.loc 1 1639 5 discriminator 2
 2612 003c FB68     		ldr	r3, [r7, #12]
 2613 003e 0122     		movs	r2, #1
 2614 0040 83F83C20 		strb	r2, [r3, #60]
1640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 2615              		.loc 1 1641 22 is_stmt 1
 2616 0044 FB68     		ldr	r3, [r7, #12]
 2617 0046 0022     		movs	r2, #0
 2618 0048 1A64     		str	r2, [r3, #64]
1642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 2619              		.loc 1 1642 20
 2620 004a FB68     		ldr	r3, [r7, #12]
 2621 004c 2222     		movs	r2, #34
 2622 004e 83F83E20 		strb	r2, [r3, #62]
1643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 2623              		.loc 1 1643 26
 2624 0052 FB68     		ldr	r3, [r7, #12]
 2625 0054 0122     		movs	r2, #1
 2626 0056 1A63     		str	r2, [r3, #48]
1644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout management */
1646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 2627              		.loc 1 1646 17
 2628 0058 FFF7FEFF 		bl	HAL_GetTick
 2629 005c 7861     		str	r0, [r7, #20]
1647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize  = Size;
 2630              		.loc 1 1648 24
 2631 005e FB68     		ldr	r3, [r7, #12]
 2632 0060 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2633 0062 9A85     		strh	r2, [r3, #44]	@ movhi
1649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 2634              		.loc 1 1649 24
 2635 0064 FB68     		ldr	r3, [r7, #12]
 2636 0066 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2637 0068 DA85     		strh	r2, [r3, #46]	@ movhi
1650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 2638              		.loc 1 1652 21
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 96


 2639 006a FB68     		ldr	r3, [r7, #12]
 2640 006c 9B68     		ldr	r3, [r3, #8]
 2641              		.loc 1 1652 8
 2642 006e B3F5805F 		cmp	r3, #4096
 2643 0072 08D1     		bne	.L134
 2644              		.loc 1 1652 71 discriminator 1
 2645 0074 FB68     		ldr	r3, [r7, #12]
 2646 0076 1B69     		ldr	r3, [r3, #16]
 2647              		.loc 1 1652 56 discriminator 1
 2648 0078 002B     		cmp	r3, #0
 2649 007a 04D1     		bne	.L134
1653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = NULL;
 2650              		.loc 1 1654 19
 2651 007c 0023     		movs	r3, #0
 2652 007e FB61     		str	r3, [r7, #28]
1655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 2653              		.loc 1 1655 19
 2654 0080 BB68     		ldr	r3, [r7, #8]
 2655 0082 BB61     		str	r3, [r7, #24]
 2656 0084 03E0     		b	.L135
 2657              	.L134:
1656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = pData;
 2658              		.loc 1 1659 19
 2659 0086 BB68     		ldr	r3, [r7, #8]
 2660 0088 FB61     		str	r3, [r7, #28]
1660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = NULL;
 2661              		.loc 1 1660 19
 2662 008a 0023     		movs	r3, #0
 2663 008c BB61     		str	r3, [r7, #24]
 2664              	.L135:
1661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 2665              		.loc 1 1663 5
 2666 008e FB68     		ldr	r3, [r7, #12]
 2667 0090 0022     		movs	r2, #0
 2668 0092 83F83C20 		strb	r2, [r3, #60]
1664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Initialize output number of received elements */
1666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     *RxLen = 0U;
 2669              		.loc 1 1666 12
 2670 0096 3B68     		ldr	r3, [r7]
 2671 0098 0022     		movs	r2, #0
 2672 009a 1A80     		strh	r2, [r3]	@ movhi
1667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* as long as data have to be received */
1669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
 2673              		.loc 1 1669 11
 2674 009c 74E0     		b	.L136
 2675              	.L146:
1670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check if IDLE flag is set */
1672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE))
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 97


 2676              		.loc 1 1672 11
 2677 009e FB68     		ldr	r3, [r7, #12]
 2678 00a0 1B68     		ldr	r3, [r3]
 2679 00a2 1B68     		ldr	r3, [r3]
 2680 00a4 03F01003 		and	r3, r3, #16
 2681              		.loc 1 1672 10
 2682 00a8 102B     		cmp	r3, #16
 2683 00aa 14D1     		bne	.L137
 2684              	.LBB376:
1673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Clear IDLE flag in ISR */
1675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         __HAL_UART_CLEAR_IDLEFLAG(huart);
 2685              		.loc 1 1675 9
 2686 00ac 0023     		movs	r3, #0
 2687 00ae 3B61     		str	r3, [r7, #16]
 2688 00b0 FB68     		ldr	r3, [r7, #12]
 2689 00b2 1B68     		ldr	r3, [r3]
 2690 00b4 1B68     		ldr	r3, [r3]
 2691 00b6 3B61     		str	r3, [r7, #16]
 2692 00b8 FB68     		ldr	r3, [r7, #12]
 2693 00ba 1B68     		ldr	r3, [r3]
 2694 00bc 5B68     		ldr	r3, [r3, #4]
 2695 00be 3B61     		str	r3, [r7, #16]
 2696 00c0 3B69     		ldr	r3, [r7, #16]
 2697              	.LBE376:
1676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* If Set, but no data ever received, clear flag without exiting loop */
1678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* If Set, and data has already been received, this means Idle Event is valid : End recepti
1679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (*RxLen > 0U)
 2698              		.loc 1 1679 13
 2699 00c2 3B68     		ldr	r3, [r7]
 2700 00c4 1B88     		ldrh	r3, [r3]
 2701              		.loc 1 1679 12
 2702 00c6 002B     		cmp	r3, #0
 2703 00c8 05D0     		beq	.L137
1680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 2704              		.loc 1 1681 26
 2705 00ca FB68     		ldr	r3, [r7, #12]
 2706 00cc 2022     		movs	r2, #32
 2707 00ce 83F83E20 		strb	r2, [r3, #62]
1682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_OK;
 2708              		.loc 1 1683 18
 2709 00d2 0023     		movs	r3, #0
 2710 00d4 6DE0     		b	.L132
 2711              	.L137:
1684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check if RXNE flag is set */
1688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RXNE))
 2712              		.loc 1 1688 11
 2713 00d6 FB68     		ldr	r3, [r7, #12]
 2714 00d8 1B68     		ldr	r3, [r3]
 2715 00da 1B68     		ldr	r3, [r3]
 2716 00dc 03F02003 		and	r3, r3, #32
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 98


 2717              		.loc 1 1688 10
 2718 00e0 202B     		cmp	r3, #32
 2719 00e2 3CD1     		bne	.L138
1689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (pdata8bits == NULL)
 2720              		.loc 1 1690 12
 2721 00e4 FB69     		ldr	r3, [r7, #28]
 2722 00e6 002B     		cmp	r3, #0
 2723 00e8 0CD1     		bne	.L139
1691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pdata16bits = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 2724              		.loc 1 1692 42
 2725 00ea FB68     		ldr	r3, [r7, #12]
 2726 00ec 1B68     		ldr	r3, [r3]
 2727              		.loc 1 1692 52
 2728 00ee 5B68     		ldr	r3, [r3, #4]
 2729              		.loc 1 1692 26
 2730 00f0 9BB2     		uxth	r3, r3
 2731 00f2 C3F30803 		ubfx	r3, r3, #0, #9
 2732 00f6 9AB2     		uxth	r2, r3
 2733              		.loc 1 1692 24
 2734 00f8 BB69     		ldr	r3, [r7, #24]
 2735 00fa 1A80     		strh	r2, [r3]	@ movhi
1693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pdata16bits++;
 2736              		.loc 1 1693 22
 2737 00fc BB69     		ldr	r3, [r7, #24]
 2738 00fe 0233     		adds	r3, r3, #2
 2739 0100 BB61     		str	r3, [r7, #24]
 2740 0102 1FE0     		b	.L140
 2741              	.L139:
1694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
1696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WO
 2742              		.loc 1 1697 27
 2743 0104 FB68     		ldr	r3, [r7, #12]
 2744 0106 9B68     		ldr	r3, [r3, #8]
 2745              		.loc 1 1697 14
 2746 0108 B3F5805F 		cmp	r3, #4096
 2747 010c 07D0     		beq	.L141
 2748              		.loc 1 1697 78 discriminator 1
 2749 010e FB68     		ldr	r3, [r7, #12]
 2750 0110 9B68     		ldr	r3, [r3, #8]
 2751              		.loc 1 1697 62 discriminator 1
 2752 0112 002B     		cmp	r3, #0
 2753 0114 0AD1     		bne	.L142
 2754              		.loc 1 1697 128 discriminator 2
 2755 0116 FB68     		ldr	r3, [r7, #12]
 2756 0118 1B69     		ldr	r3, [r3, #16]
 2757              		.loc 1 1697 113 discriminator 2
 2758 011a 002B     		cmp	r3, #0
 2759 011c 06D1     		bne	.L142
 2760              	.L141:
1698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
1699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 2761              		.loc 1 1699 42
 2762 011e FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 99


 2763 0120 1B68     		ldr	r3, [r3]
 2764              		.loc 1 1699 52
 2765 0122 5B68     		ldr	r3, [r3, #4]
 2766              		.loc 1 1699 27
 2767 0124 DAB2     		uxtb	r2, r3
 2768              		.loc 1 1699 25
 2769 0126 FB69     		ldr	r3, [r7, #28]
 2770 0128 1A70     		strb	r2, [r3]
 2771 012a 08E0     		b	.L143
 2772              	.L142:
1700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
1701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           else
1702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
1703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 2773              		.loc 1 1703 42
 2774 012c FB68     		ldr	r3, [r7, #12]
 2775 012e 1B68     		ldr	r3, [r3]
 2776              		.loc 1 1703 52
 2777 0130 5B68     		ldr	r3, [r3, #4]
 2778              		.loc 1 1703 27
 2779 0132 DBB2     		uxtb	r3, r3
 2780 0134 03F07F03 		and	r3, r3, #127
 2781 0138 DAB2     		uxtb	r2, r3
 2782              		.loc 1 1703 25
 2783 013a FB69     		ldr	r3, [r7, #28]
 2784 013c 1A70     		strb	r2, [r3]
 2785              	.L143:
1704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
1705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pdata8bits++;
 2786              		.loc 1 1706 21
 2787 013e FB69     		ldr	r3, [r7, #28]
 2788 0140 0133     		adds	r3, r3, #1
 2789 0142 FB61     		str	r3, [r7, #28]
 2790              	.L140:
1707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Increment number of received elements */
1709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *RxLen += 1U;
 2791              		.loc 1 1709 9
 2792 0144 3B68     		ldr	r3, [r7]
 2793 0146 1B88     		ldrh	r3, [r3]
 2794              		.loc 1 1709 16
 2795 0148 0133     		adds	r3, r3, #1
 2796 014a 9AB2     		uxth	r2, r3
 2797 014c 3B68     		ldr	r3, [r7]
 2798 014e 1A80     		strh	r2, [r3]	@ movhi
1710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxXferCount--;
 2799              		.loc 1 1710 14
 2800 0150 FB68     		ldr	r3, [r7, #12]
 2801 0152 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 2802 0154 9BB2     		uxth	r3, r3
 2803              		.loc 1 1710 27
 2804 0156 013B     		subs	r3, r3, #1
 2805 0158 9AB2     		uxth	r2, r3
 2806 015a FB68     		ldr	r3, [r7, #12]
 2807 015c DA85     		strh	r2, [r3, #46]	@ movhi
 2808              	.L138:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 100


1711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check for the Timeout */
1714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (Timeout != HAL_MAX_DELAY)
 2809              		.loc 1 1714 10
 2810 015e BB6A     		ldr	r3, [r7, #40]
 2811 0160 B3F1FF3F 		cmp	r3, #-1
 2812 0164 10D0     		beq	.L136
1715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 2813              		.loc 1 1716 15
 2814 0166 FFF7FEFF 		bl	HAL_GetTick
 2815 016a 0246     		mov	r2, r0
 2816              		.loc 1 1716 29 discriminator 1
 2817 016c 7B69     		ldr	r3, [r7, #20]
 2818 016e D31A     		subs	r3, r2, r3
 2819              		.loc 1 1716 12 discriminator 1
 2820 0170 BA6A     		ldr	r2, [r7, #40]
 2821 0172 9A42     		cmp	r2, r3
 2822 0174 02D3     		bcc	.L145
 2823              		.loc 1 1716 53 discriminator 1
 2824 0176 BB6A     		ldr	r3, [r7, #40]
 2825 0178 002B     		cmp	r3, #0
 2826 017a 05D1     		bne	.L136
 2827              	.L145:
1717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 2828              		.loc 1 1718 26
 2829 017c FB68     		ldr	r3, [r7, #12]
 2830 017e 2022     		movs	r2, #32
 2831 0180 83F83E20 		strb	r2, [r3, #62]
1719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2832              		.loc 1 1720 18
 2833 0184 0323     		movs	r3, #3
 2834 0186 14E0     		b	.L132
 2835              	.L136:
1669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2836              		.loc 1 1669 17
 2837 0188 FB68     		ldr	r3, [r7, #12]
 2838 018a DB8D     		ldrh	r3, [r3, #46]	@ movhi
 2839 018c 9BB2     		uxth	r3, r3
1669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2840              		.loc 1 1669 31
 2841 018e 002B     		cmp	r3, #0
 2842 0190 85D1     		bne	.L146
1721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set number of received elements in output parameter : RxLen */
1726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     *RxLen = huart->RxXferSize - huart->RxXferCount;
 2843              		.loc 1 1726 19
 2844 0192 FB68     		ldr	r3, [r7, #12]
 2845 0194 9A8D     		ldrh	r2, [r3, #44]
 2846              		.loc 1 1726 39
 2847 0196 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 101


 2848 0198 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 2849 019a 9BB2     		uxth	r3, r3
 2850              		.loc 1 1726 32
 2851 019c D31A     		subs	r3, r2, r3
 2852 019e 9AB2     		uxth	r2, r3
 2853              		.loc 1 1726 12
 2854 01a0 3B68     		ldr	r3, [r7]
 2855 01a2 1A80     		strh	r2, [r3]	@ movhi
1727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2856              		.loc 1 1728 20
 2857 01a4 FB68     		ldr	r3, [r7, #12]
 2858 01a6 2022     		movs	r2, #32
 2859 01a8 83F83E20 		strb	r2, [r3, #62]
1729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 2860              		.loc 1 1730 12
 2861 01ac 0023     		movs	r3, #0
 2862 01ae 00E0     		b	.L132
 2863              	.L129:
1731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 2864              		.loc 1 1734 12
 2865 01b0 0223     		movs	r3, #2
 2866              	.L132:
1735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2867              		.loc 1 1736 1
 2868 01b2 1846     		mov	r0, r3
 2869 01b4 2037     		adds	r7, r7, #32
 2870              	.LCFI88:
 2871              		.cfi_def_cfa_offset 8
 2872 01b6 BD46     		mov	sp, r7
 2873              	.LCFI89:
 2874              		.cfi_def_cfa_register 13
 2875              		@ sp needed
 2876 01b8 80BD     		pop	{r7, pc}
 2877              		.cfi_endproc
 2878              	.LFE232:
 2880              		.section	.text.HAL_UARTEx_ReceiveToIdle_IT,"ax",%progbits
 2881              		.align	1
 2882              		.global	HAL_UARTEx_ReceiveToIdle_IT
 2883              		.syntax unified
 2884              		.thumb
 2885              		.thumb_func
 2887              	HAL_UARTEx_ReceiveToIdle_IT:
 2888              	.LFB233:
1737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode till either the expected number of data is r
1740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   Reception is initiated by this function call. Further progress of reception is achieved
1741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         to UART interrupts raised by RXNE and IDLE events. Callback is called at end of recepti
1742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         number of received data elements.
1743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M =
1744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of uint16_t. In this case, Size must indicate the
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 102


1745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of uint16_t available through pData.
1746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param huart UART handle.
1747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param pData Pointer to data buffer (uint8_t or uint16_t data elements).
1748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param Size  Amount of data elements (uint8_t or uint16_t) to be received.
1749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t S
1752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2889              		.loc 1 1752 1
 2890              		.cfi_startproc
 2891              		@ args = 0, pretend = 0, frame = 48
 2892              		@ frame_needed = 1, uses_anonymous_args = 0
 2893 0000 80B5     		push	{r7, lr}
 2894              	.LCFI90:
 2895              		.cfi_def_cfa_offset 8
 2896              		.cfi_offset 7, -8
 2897              		.cfi_offset 14, -4
 2898 0002 8CB0     		sub	sp, sp, #48
 2899              	.LCFI91:
 2900              		.cfi_def_cfa_offset 56
 2901 0004 00AF     		add	r7, sp, #0
 2902              	.LCFI92:
 2903              		.cfi_def_cfa_register 7
 2904 0006 F860     		str	r0, [r7, #12]
 2905 0008 B960     		str	r1, [r7, #8]
 2906 000a 1346     		mov	r3, r2
 2907 000c FB80     		strh	r3, [r7, #6]	@ movhi
1753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status;
1754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 2908              		.loc 1 1756 12
 2909 000e FB68     		ldr	r3, [r7, #12]
 2910 0010 93F83E30 		ldrb	r3, [r3, #62]
 2911 0014 DBB2     		uxtb	r3, r3
 2912              		.loc 1 1756 6
 2913 0016 202B     		cmp	r3, #32
 2914 0018 52D1     		bne	.L148
1757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 2915              		.loc 1 1758 8
 2916 001a BB68     		ldr	r3, [r7, #8]
 2917 001c 002B     		cmp	r3, #0
 2918 001e 02D0     		beq	.L149
 2919              		.loc 1 1758 25 discriminator 1
 2920 0020 FB88     		ldrh	r3, [r7, #6]
 2921 0022 002B     		cmp	r3, #0
 2922 0024 01D1     		bne	.L150
 2923              	.L149:
1759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 2924              		.loc 1 1760 14
 2925 0026 0123     		movs	r3, #1
 2926 0028 4BE0     		b	.L151
 2927              	.L150:
1761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 103


1763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 2928              		.loc 1 1763 5
 2929 002a FB68     		ldr	r3, [r7, #12]
 2930 002c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2931 0030 012B     		cmp	r3, #1
 2932 0032 01D1     		bne	.L152
 2933              		.loc 1 1763 5 is_stmt 0 discriminator 1
 2934 0034 0223     		movs	r3, #2
 2935              		.loc 1 1763 5
 2936 0036 44E0     		b	.L151
 2937              	.L152:
 2938              		.loc 1 1763 5 discriminator 2
 2939 0038 FB68     		ldr	r3, [r7, #12]
 2940 003a 0122     		movs	r2, #1
 2941 003c 83F83C20 		strb	r2, [r3, #60]
1764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set Reception type to reception till IDLE Event*/
1766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 2942              		.loc 1 1766 26 is_stmt 1
 2943 0040 FB68     		ldr	r3, [r7, #12]
 2944 0042 0122     		movs	r2, #1
 2945 0044 1A63     		str	r2, [r3, #48]
1767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  UART_Start_Receive_IT(huart, pData, Size);
 2946              		.loc 1 1768 15
 2947 0046 FB88     		ldrh	r3, [r7, #6]
 2948 0048 1A46     		mov	r2, r3
 2949 004a B968     		ldr	r1, [r7, #8]
 2950 004c F868     		ldr	r0, [r7, #12]
 2951 004e FFF7FEFF 		bl	UART_Start_Receive_IT
 2952 0052 0346     		mov	r3, r0
 2953 0054 87F82F30 		strb	r3, [r7, #47]
1769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check Rx process has been successfully started */
1771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (status == HAL_OK)
 2954              		.loc 1 1771 8
 2955 0058 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 2956 005c 002B     		cmp	r3, #0
 2957 005e 2CD1     		bne	.L153
1772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 2958              		.loc 1 1773 16
 2959 0060 FB68     		ldr	r3, [r7, #12]
 2960 0062 1B6B     		ldr	r3, [r3, #48]
 2961              		.loc 1 1773 10
 2962 0064 012B     		cmp	r3, #1
 2963 0066 25D1     		bne	.L154
 2964              	.LBB377:
1774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         __HAL_UART_CLEAR_IDLEFLAG(huart);
 2965              		.loc 1 1775 9
 2966 0068 0023     		movs	r3, #0
 2967 006a 3B61     		str	r3, [r7, #16]
 2968 006c FB68     		ldr	r3, [r7, #12]
 2969 006e 1B68     		ldr	r3, [r3]
 2970 0070 1B68     		ldr	r3, [r3]
 2971 0072 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 104


 2972 0074 FB68     		ldr	r3, [r7, #12]
 2973 0076 1B68     		ldr	r3, [r3]
 2974 0078 5B68     		ldr	r3, [r3, #4]
 2975 007a 3B61     		str	r3, [r7, #16]
 2976 007c 3B69     		ldr	r3, [r7, #16]
 2977              	.L157:
 2978              	.LBE377:
 2979              	.LBB378:
1776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 2980              		.loc 1 1776 9 discriminator 1
 2981 007e FB68     		ldr	r3, [r7, #12]
 2982 0080 1B68     		ldr	r3, [r3]
 2983 0082 0C33     		adds	r3, r3, #12
 2984 0084 BB61     		str	r3, [r7, #24]
 2985              	.LBB379:
 2986              	.LBB380:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2987              		.loc 2 1072 4
 2988 0086 BB69     		ldr	r3, [r7, #24]
 2989              		.syntax unified
 2990              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2991 0088 53E8003F 		ldrex r3, [r3]
 2992              	@ 0 "" 2
 2993              		.thumb
 2994              		.syntax unified
 2995 008c 7B61     		str	r3, [r7, #20]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2996              		.loc 2 1073 10
 2997 008e 7B69     		ldr	r3, [r7, #20]
 2998              	.LBE380:
 2999              	.LBE379:
 3000              		.loc 1 1776 9 discriminator 1
 3001 0090 43F01003 		orr	r3, r3, #16
 3002 0094 BB62     		str	r3, [r7, #40]
 3003 0096 FB68     		ldr	r3, [r7, #12]
 3004 0098 1B68     		ldr	r3, [r3]
 3005 009a 0C33     		adds	r3, r3, #12
 3006 009c BA6A     		ldr	r2, [r7, #40]
 3007 009e 7A62     		str	r2, [r7, #36]
 3008 00a0 3B62     		str	r3, [r7, #32]
 3009              	.LBB381:
 3010              	.LBB382:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3011              		.loc 2 1123 4
 3012 00a2 396A     		ldr	r1, [r7, #32]
 3013 00a4 7A6A     		ldr	r2, [r7, #36]
 3014              		.syntax unified
 3015              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3016 00a6 41E80023 		strex r3, r2, [r1]
 3017              	@ 0 "" 2
 3018              		.thumb
 3019              		.syntax unified
 3020 00aa FB61     		str	r3, [r7, #28]
 3021              		.loc 2 1124 10
 3022 00ac FB69     		ldr	r3, [r7, #28]
 3023              	.LBE382:
 3024              	.LBE381:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 105


 3025              		.loc 1 1776 9 discriminator 1
 3026 00ae 002B     		cmp	r3, #0
 3027 00b0 E5D1     		bne	.L157
 3028 00b2 02E0     		b	.L153
 3029              	.L154:
 3030              	.LBE378:
1777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* In case of errors already pending when reception is started,
1781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Interrupts may have already been raised and lead to reception abortion.
1782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            (Overrun error for instance).
1783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            In such case Reception Type has been reset to HAL_UART_RECEPTION_STANDARD. */
1784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status = HAL_ERROR;
 3031              		.loc 1 1784 16
 3032 00b4 0123     		movs	r3, #1
 3033 00b6 87F82F30 		strb	r3, [r7, #47]
 3034              	.L153:
1785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return status;
 3035              		.loc 1 1788 12
 3036 00ba 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 3037 00be 00E0     		b	.L151
 3038              	.L148:
1789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 3039              		.loc 1 1792 12
 3040 00c0 0223     		movs	r3, #2
 3041              	.L151:
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3042              		.loc 1 1794 1
 3043 00c2 1846     		mov	r0, r3
 3044 00c4 3037     		adds	r7, r7, #48
 3045              	.LCFI93:
 3046              		.cfi_def_cfa_offset 8
 3047 00c6 BD46     		mov	sp, r7
 3048              	.LCFI94:
 3049              		.cfi_def_cfa_register 13
 3050              		@ sp needed
 3051 00c8 80BD     		pop	{r7, pc}
 3052              		.cfi_endproc
 3053              	.LFE233:
 3055              		.section	.text.HAL_UARTEx_ReceiveToIdle_DMA,"ax",%progbits
 3056              		.align	1
 3057              		.global	HAL_UARTEx_ReceiveToIdle_DMA
 3058              		.syntax unified
 3059              		.thumb
 3060              		.thumb_func
 3062              	HAL_UARTEx_ReceiveToIdle_DMA:
 3063              	.LFB234:
1795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 106


1797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode till either the expected number of data is receive
1798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   Reception is initiated by this function call. Further progress of reception is achieved
1799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         to DMA services, transferring automatically received data elements in user reception bu
1800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         calling registered callbacks at half/end of reception. UART IDLE events are also used t
1801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         reception phase as ended. In all cases, callback execution will indicate number of rece
1802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the parity bit (MSB position).
1804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M =
1805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of uint16_t. In this case, Size must indicate the
1806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of uint16_t available through pData.
1807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param huart UART handle.
1808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param pData Pointer to data buffer (uint8_t or uint16_t data elements).
1809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param Size  Amount of data elements (uint8_t or uint16_t) to be received.
1810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t 
1813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3064              		.loc 1 1813 1
 3065              		.cfi_startproc
 3066              		@ args = 0, pretend = 0, frame = 48
 3067              		@ frame_needed = 1, uses_anonymous_args = 0
 3068 0000 80B5     		push	{r7, lr}
 3069              	.LCFI95:
 3070              		.cfi_def_cfa_offset 8
 3071              		.cfi_offset 7, -8
 3072              		.cfi_offset 14, -4
 3073 0002 8CB0     		sub	sp, sp, #48
 3074              	.LCFI96:
 3075              		.cfi_def_cfa_offset 56
 3076 0004 00AF     		add	r7, sp, #0
 3077              	.LCFI97:
 3078              		.cfi_def_cfa_register 7
 3079 0006 F860     		str	r0, [r7, #12]
 3080 0008 B960     		str	r1, [r7, #8]
 3081 000a 1346     		mov	r3, r2
 3082 000c FB80     		strh	r3, [r7, #6]	@ movhi
1814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status;
1815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 3083              		.loc 1 1817 12
 3084 000e FB68     		ldr	r3, [r7, #12]
 3085 0010 93F83E30 		ldrb	r3, [r3, #62]
 3086 0014 DBB2     		uxtb	r3, r3
 3087              		.loc 1 1817 6
 3088 0016 202B     		cmp	r3, #32
 3089 0018 52D1     		bne	.L159
1818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 3090              		.loc 1 1819 8
 3091 001a BB68     		ldr	r3, [r7, #8]
 3092 001c 002B     		cmp	r3, #0
 3093 001e 02D0     		beq	.L160
 3094              		.loc 1 1819 25 discriminator 1
 3095 0020 FB88     		ldrh	r3, [r7, #6]
 3096 0022 002B     		cmp	r3, #0
 3097 0024 01D1     		bne	.L161
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 107


 3098              	.L160:
1820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 3099              		.loc 1 1821 14
 3100 0026 0123     		movs	r3, #1
 3101 0028 4BE0     		b	.L162
 3102              	.L161:
1822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 3103              		.loc 1 1824 5
 3104 002a FB68     		ldr	r3, [r7, #12]
 3105 002c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 3106 0030 012B     		cmp	r3, #1
 3107 0032 01D1     		bne	.L163
 3108              		.loc 1 1824 5 is_stmt 0 discriminator 1
 3109 0034 0223     		movs	r3, #2
 3110              		.loc 1 1824 5
 3111 0036 44E0     		b	.L162
 3112              	.L163:
 3113              		.loc 1 1824 5 discriminator 2
 3114 0038 FB68     		ldr	r3, [r7, #12]
 3115 003a 0122     		movs	r2, #1
 3116 003c 83F83C20 		strb	r2, [r3, #60]
1825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set Reception type to reception till IDLE Event*/
1827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 3117              		.loc 1 1827 26 is_stmt 1
 3118 0040 FB68     		ldr	r3, [r7, #12]
 3119 0042 0122     		movs	r2, #1
 3120 0044 1A63     		str	r2, [r3, #48]
1828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  UART_Start_Receive_DMA(huart, pData, Size);
 3121              		.loc 1 1829 15
 3122 0046 FB88     		ldrh	r3, [r7, #6]
 3123 0048 1A46     		mov	r2, r3
 3124 004a B968     		ldr	r1, [r7, #8]
 3125 004c F868     		ldr	r0, [r7, #12]
 3126 004e FFF7FEFF 		bl	UART_Start_Receive_DMA
 3127 0052 0346     		mov	r3, r0
 3128 0054 87F82F30 		strb	r3, [r7, #47]
1830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check Rx process has been successfully started */
1832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (status == HAL_OK)
 3129              		.loc 1 1832 8
 3130 0058 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 3131 005c 002B     		cmp	r3, #0
 3132 005e 2CD1     		bne	.L164
1833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 3133              		.loc 1 1834 16
 3134 0060 FB68     		ldr	r3, [r7, #12]
 3135 0062 1B6B     		ldr	r3, [r3, #48]
 3136              		.loc 1 1834 10
 3137 0064 012B     		cmp	r3, #1
 3138 0066 25D1     		bne	.L165
 3139              	.LBB383:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 108


1835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         __HAL_UART_CLEAR_IDLEFLAG(huart);
 3140              		.loc 1 1836 9
 3141 0068 0023     		movs	r3, #0
 3142 006a 3B61     		str	r3, [r7, #16]
 3143 006c FB68     		ldr	r3, [r7, #12]
 3144 006e 1B68     		ldr	r3, [r3]
 3145 0070 1B68     		ldr	r3, [r3]
 3146 0072 3B61     		str	r3, [r7, #16]
 3147 0074 FB68     		ldr	r3, [r7, #12]
 3148 0076 1B68     		ldr	r3, [r3]
 3149 0078 5B68     		ldr	r3, [r3, #4]
 3150 007a 3B61     		str	r3, [r7, #16]
 3151 007c 3B69     		ldr	r3, [r7, #16]
 3152              	.L168:
 3153              	.LBE383:
 3154              	.LBB384:
1837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 3155              		.loc 1 1837 9 discriminator 1
 3156 007e FB68     		ldr	r3, [r7, #12]
 3157 0080 1B68     		ldr	r3, [r3]
 3158 0082 0C33     		adds	r3, r3, #12
 3159 0084 BB61     		str	r3, [r7, #24]
 3160              	.LBB385:
 3161              	.LBB386:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3162              		.loc 2 1072 4
 3163 0086 BB69     		ldr	r3, [r7, #24]
 3164              		.syntax unified
 3165              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3166 0088 53E8003F 		ldrex r3, [r3]
 3167              	@ 0 "" 2
 3168              		.thumb
 3169              		.syntax unified
 3170 008c 7B61     		str	r3, [r7, #20]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3171              		.loc 2 1073 10
 3172 008e 7B69     		ldr	r3, [r7, #20]
 3173              	.LBE386:
 3174              	.LBE385:
 3175              		.loc 1 1837 9 discriminator 1
 3176 0090 43F01003 		orr	r3, r3, #16
 3177 0094 BB62     		str	r3, [r7, #40]
 3178 0096 FB68     		ldr	r3, [r7, #12]
 3179 0098 1B68     		ldr	r3, [r3]
 3180 009a 0C33     		adds	r3, r3, #12
 3181 009c BA6A     		ldr	r2, [r7, #40]
 3182 009e 7A62     		str	r2, [r7, #36]
 3183 00a0 3B62     		str	r3, [r7, #32]
 3184              	.LBB387:
 3185              	.LBB388:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3186              		.loc 2 1123 4
 3187 00a2 396A     		ldr	r1, [r7, #32]
 3188 00a4 7A6A     		ldr	r2, [r7, #36]
 3189              		.syntax unified
 3190              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 109


 3191 00a6 41E80023 		strex r3, r2, [r1]
 3192              	@ 0 "" 2
 3193              		.thumb
 3194              		.syntax unified
 3195 00aa FB61     		str	r3, [r7, #28]
 3196              		.loc 2 1124 10
 3197 00ac FB69     		ldr	r3, [r7, #28]
 3198              	.LBE388:
 3199              	.LBE387:
 3200              		.loc 1 1837 9 discriminator 1
 3201 00ae 002B     		cmp	r3, #0
 3202 00b0 E5D1     		bne	.L168
 3203 00b2 02E0     		b	.L164
 3204              	.L165:
 3205              	.LBE384:
1838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* In case of errors already pending when reception is started,
1842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Interrupts may have already been raised and lead to reception abortion.
1843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            (Overrun error for instance).
1844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            In such case Reception Type has been reset to HAL_UART_RECEPTION_STANDARD. */
1845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status = HAL_ERROR;
 3206              		.loc 1 1845 16
 3207 00b4 0123     		movs	r3, #1
 3208 00b6 87F82F30 		strb	r3, [r7, #47]
 3209              	.L164:
1846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return status;
 3210              		.loc 1 1849 12
 3211 00ba 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 3212 00be 00E0     		b	.L162
 3213              	.L159:
1850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 3214              		.loc 1 1853 12
 3215 00c0 0223     		movs	r3, #2
 3216              	.L162:
1854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3217              		.loc 1 1855 1
 3218 00c2 1846     		mov	r0, r3
 3219 00c4 3037     		adds	r7, r7, #48
 3220              	.LCFI98:
 3221              		.cfi_def_cfa_offset 8
 3222 00c6 BD46     		mov	sp, r7
 3223              	.LCFI99:
 3224              		.cfi_def_cfa_register 13
 3225              		@ sp needed
 3226 00c8 80BD     		pop	{r7, pc}
 3227              		.cfi_endproc
 3228              	.LFE234:
 3230              		.section	.text.HAL_UART_Abort,"ax",%progbits
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 110


 3231              		.align	1
 3232              		.global	HAL_UART_Abort
 3233              		.syntax unified
 3234              		.thumb
 3235              		.thumb_func
 3237              	HAL_UART_Abort:
 3238              	.LFB235:
1856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3239              		.loc 1 1870 1
 3240              		.cfi_startproc
 3241              		@ args = 0, pretend = 0, frame = 128
 3242              		@ frame_needed = 1, uses_anonymous_args = 0
 3243 0000 80B5     		push	{r7, lr}
 3244              	.LCFI100:
 3245              		.cfi_def_cfa_offset 8
 3246              		.cfi_offset 7, -8
 3247              		.cfi_offset 14, -4
 3248 0002 A0B0     		sub	sp, sp, #128
 3249              	.LCFI101:
 3250              		.cfi_def_cfa_offset 136
 3251 0004 00AF     		add	r7, sp, #0
 3252              	.LCFI102:
 3253              		.cfi_def_cfa_register 7
 3254 0006 7860     		str	r0, [r7, #4]
 3255              	.L172:
 3256              	.LBB389:
1871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USA
 3257              		.loc 1 1872 3 discriminator 1
 3258 0008 7B68     		ldr	r3, [r7, #4]
 3259 000a 1B68     		ldr	r3, [r3]
 3260 000c 0C33     		adds	r3, r3, #12
 3261 000e FB65     		str	r3, [r7, #92]
 3262              	.LBB390:
 3263              	.LBB391:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3264              		.loc 2 1072 4
 3265 0010 FB6D     		ldr	r3, [r7, #92]
 3266              		.syntax unified
 3267              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3268 0012 53E8003F 		ldrex r3, [r3]
 3269              	@ 0 "" 2
 3270              		.thumb
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 111


 3271              		.syntax unified
 3272 0016 BB65     		str	r3, [r7, #88]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3273              		.loc 2 1073 10
 3274 0018 BB6D     		ldr	r3, [r7, #88]
 3275              	.LBE391:
 3276              	.LBE390:
 3277              		.loc 1 1872 3 discriminator 1
 3278 001a 23F4F073 		bic	r3, r3, #480
 3279 001e FB67     		str	r3, [r7, #124]
 3280 0020 7B68     		ldr	r3, [r7, #4]
 3281 0022 1B68     		ldr	r3, [r3]
 3282 0024 0C33     		adds	r3, r3, #12
 3283 0026 FA6F     		ldr	r2, [r7, #124]
 3284 0028 BA66     		str	r2, [r7, #104]
 3285 002a 7B66     		str	r3, [r7, #100]
 3286              	.LBB392:
 3287              	.LBB393:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3288              		.loc 2 1123 4
 3289 002c 796E     		ldr	r1, [r7, #100]
 3290 002e BA6E     		ldr	r2, [r7, #104]
 3291              		.syntax unified
 3292              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3293 0030 41E80023 		strex r3, r2, [r1]
 3294              	@ 0 "" 2
 3295              		.thumb
 3296              		.syntax unified
 3297 0034 3B66     		str	r3, [r7, #96]
 3298              		.loc 2 1124 10
 3299 0036 3B6E     		ldr	r3, [r7, #96]
 3300              	.LBE393:
 3301              	.LBE392:
 3302              		.loc 1 1872 3 discriminator 1
 3303 0038 002B     		cmp	r3, #0
 3304 003a E5D1     		bne	.L172
 3305              	.L175:
 3306              	.LBE389:
 3307              	.LBB394:
1873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3308              		.loc 1 1873 3 discriminator 1
 3309 003c 7B68     		ldr	r3, [r7, #4]
 3310 003e 1B68     		ldr	r3, [r3]
 3311 0040 1433     		adds	r3, r3, #20
 3312 0042 BB64     		str	r3, [r7, #72]
 3313              	.LBB395:
 3314              	.LBB396:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3315              		.loc 2 1072 4
 3316 0044 BB6C     		ldr	r3, [r7, #72]
 3317              		.syntax unified
 3318              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3319 0046 53E8003F 		ldrex r3, [r3]
 3320              	@ 0 "" 2
 3321              		.thumb
 3322              		.syntax unified
 3323 004a 7B64     		str	r3, [r7, #68]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 112


1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3324              		.loc 2 1073 10
 3325 004c 7B6C     		ldr	r3, [r7, #68]
 3326              	.LBE396:
 3327              	.LBE395:
 3328              		.loc 1 1873 3 discriminator 1
 3329 004e 23F00103 		bic	r3, r3, #1
 3330 0052 BB67     		str	r3, [r7, #120]
 3331 0054 7B68     		ldr	r3, [r7, #4]
 3332 0056 1B68     		ldr	r3, [r3]
 3333 0058 1433     		adds	r3, r3, #20
 3334 005a BA6F     		ldr	r2, [r7, #120]
 3335 005c 7A65     		str	r2, [r7, #84]
 3336 005e 3B65     		str	r3, [r7, #80]
 3337              	.LBB397:
 3338              	.LBB398:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3339              		.loc 2 1123 4
 3340 0060 396D     		ldr	r1, [r7, #80]
 3341 0062 7A6D     		ldr	r2, [r7, #84]
 3342              		.syntax unified
 3343              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3344 0064 41E80023 		strex r3, r2, [r1]
 3345              	@ 0 "" 2
 3346              		.thumb
 3347              		.syntax unified
 3348 0068 FB64     		str	r3, [r7, #76]
 3349              		.loc 2 1124 10
 3350 006a FB6C     		ldr	r3, [r7, #76]
 3351              	.LBE398:
 3352              	.LBE397:
 3353              		.loc 1 1873 3 discriminator 1
 3354 006c 002B     		cmp	r3, #0
 3355 006e E5D1     		bne	.L175
 3356              	.LBE394:
1874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 3357              		.loc 1 1876 12
 3358 0070 7B68     		ldr	r3, [r7, #4]
 3359 0072 1B6B     		ldr	r3, [r3, #48]
 3360              		.loc 1 1876 6
 3361 0074 012B     		cmp	r3, #1
 3362 0076 19D1     		bne	.L176
 3363              	.L179:
 3364              	.LBB399:
1877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 3365              		.loc 1 1878 5 discriminator 1
 3366 0078 7B68     		ldr	r3, [r7, #4]
 3367 007a 1B68     		ldr	r3, [r3]
 3368 007c 0C33     		adds	r3, r3, #12
 3369 007e 7B63     		str	r3, [r7, #52]
 3370              	.LBB400:
 3371              	.LBB401:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3372              		.loc 2 1072 4
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 113


 3373 0080 7B6B     		ldr	r3, [r7, #52]
 3374              		.syntax unified
 3375              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3376 0082 53E8003F 		ldrex r3, [r3]
 3377              	@ 0 "" 2
 3378              		.thumb
 3379              		.syntax unified
 3380 0086 3B63     		str	r3, [r7, #48]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3381              		.loc 2 1073 10
 3382 0088 3B6B     		ldr	r3, [r7, #48]
 3383              	.LBE401:
 3384              	.LBE400:
 3385              		.loc 1 1878 5 discriminator 1
 3386 008a 23F01003 		bic	r3, r3, #16
 3387 008e 7B67     		str	r3, [r7, #116]
 3388 0090 7B68     		ldr	r3, [r7, #4]
 3389 0092 1B68     		ldr	r3, [r3]
 3390 0094 0C33     		adds	r3, r3, #12
 3391 0096 7A6F     		ldr	r2, [r7, #116]
 3392 0098 3A64     		str	r2, [r7, #64]
 3393 009a FB63     		str	r3, [r7, #60]
 3394              	.LBB402:
 3395              	.LBB403:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3396              		.loc 2 1123 4
 3397 009c F96B     		ldr	r1, [r7, #60]
 3398 009e 3A6C     		ldr	r2, [r7, #64]
 3399              		.syntax unified
 3400              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3401 00a0 41E80023 		strex r3, r2, [r1]
 3402              	@ 0 "" 2
 3403              		.thumb
 3404              		.syntax unified
 3405 00a4 BB63     		str	r3, [r7, #56]
 3406              		.loc 2 1124 10
 3407 00a6 BB6B     		ldr	r3, [r7, #56]
 3408              	.LBE403:
 3409              	.LBE402:
 3410              		.loc 1 1878 5 discriminator 1
 3411 00a8 002B     		cmp	r3, #0
 3412 00aa E5D1     		bne	.L179
 3413              	.L176:
 3414              	.LBE399:
1879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3415              		.loc 1 1882 7
 3416 00ac 7B68     		ldr	r3, [r7, #4]
 3417 00ae 1B68     		ldr	r3, [r3]
 3418 00b0 5B69     		ldr	r3, [r3, #20]
 3419 00b2 03F08003 		and	r3, r3, #128
 3420              		.loc 1 1882 6
 3421 00b6 802B     		cmp	r3, #128
 3422 00b8 36D1     		bne	.L180
 3423              	.L183:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 114


 3424              	.LBB404:
1883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3425              		.loc 1 1884 5 discriminator 1
 3426 00ba 7B68     		ldr	r3, [r7, #4]
 3427 00bc 1B68     		ldr	r3, [r3]
 3428 00be 1433     		adds	r3, r3, #20
 3429 00c0 3B62     		str	r3, [r7, #32]
 3430              	.LBB405:
 3431              	.LBB406:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3432              		.loc 2 1072 4
 3433 00c2 3B6A     		ldr	r3, [r7, #32]
 3434              		.syntax unified
 3435              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3436 00c4 53E8003F 		ldrex r3, [r3]
 3437              	@ 0 "" 2
 3438              		.thumb
 3439              		.syntax unified
 3440 00c8 FB61     		str	r3, [r7, #28]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3441              		.loc 2 1073 10
 3442 00ca FB69     		ldr	r3, [r7, #28]
 3443              	.LBE406:
 3444              	.LBE405:
 3445              		.loc 1 1884 5 discriminator 1
 3446 00cc 23F08003 		bic	r3, r3, #128
 3447 00d0 3B67     		str	r3, [r7, #112]
 3448 00d2 7B68     		ldr	r3, [r7, #4]
 3449 00d4 1B68     		ldr	r3, [r3]
 3450 00d6 1433     		adds	r3, r3, #20
 3451 00d8 3A6F     		ldr	r2, [r7, #112]
 3452 00da FA62     		str	r2, [r7, #44]
 3453 00dc BB62     		str	r3, [r7, #40]
 3454              	.LBB407:
 3455              	.LBB408:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3456              		.loc 2 1123 4
 3457 00de B96A     		ldr	r1, [r7, #40]
 3458 00e0 FA6A     		ldr	r2, [r7, #44]
 3459              		.syntax unified
 3460              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3461 00e2 41E80023 		strex r3, r2, [r1]
 3462              	@ 0 "" 2
 3463              		.thumb
 3464              		.syntax unified
 3465 00e6 7B62     		str	r3, [r7, #36]
 3466              		.loc 2 1124 10
 3467 00e8 7B6A     		ldr	r3, [r7, #36]
 3468              	.LBE408:
 3469              	.LBE407:
 3470              		.loc 1 1884 5 discriminator 1
 3471 00ea 002B     		cmp	r3, #0
 3472 00ec E5D1     		bne	.L183
 3473              	.LBE404:
1885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream: use blocking DMA Abort API (no callback) */
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 115


1887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3474              		.loc 1 1887 14
 3475 00ee 7B68     		ldr	r3, [r7, #4]
 3476 00f0 5B6B     		ldr	r3, [r3, #52]
 3477              		.loc 1 1887 8
 3478 00f2 002B     		cmp	r3, #0
 3479 00f4 18D0     		beq	.L180
1888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 3480              		.loc 1 1891 12
 3481 00f6 7B68     		ldr	r3, [r7, #4]
 3482 00f8 5B6B     		ldr	r3, [r3, #52]
 3483              		.loc 1 1891 40
 3484 00fa 0022     		movs	r2, #0
 3485 00fc 1A65     		str	r2, [r3, #80]
1892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 3486              		.loc 1 1893 11
 3487 00fe 7B68     		ldr	r3, [r7, #4]
 3488 0100 5B6B     		ldr	r3, [r3, #52]
 3489 0102 1846     		mov	r0, r3
 3490 0104 FFF7FEFF 		bl	HAL_DMA_Abort
 3491 0108 0346     		mov	r3, r0
 3492              		.loc 1 1893 10 discriminator 1
 3493 010a 002B     		cmp	r3, #0
 3494 010c 0CD0     		beq	.L180
1894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 3495              		.loc 1 1895 13
 3496 010e 7B68     		ldr	r3, [r7, #4]
 3497 0110 5B6B     		ldr	r3, [r3, #52]
 3498 0112 1846     		mov	r0, r3
 3499 0114 FFF7FEFF 		bl	HAL_DMA_GetError
 3500 0118 0346     		mov	r3, r0
 3501              		.loc 1 1895 12 discriminator 1
 3502 011a 202B     		cmp	r3, #32
 3503 011c 04D1     		bne	.L180
1896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3504              		.loc 1 1898 28
 3505 011e 7B68     		ldr	r3, [r7, #4]
 3506 0120 1022     		movs	r2, #16
 3507 0122 1A64     		str	r2, [r3, #64]
1899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 3508              		.loc 1 1900 18
 3509 0124 0323     		movs	r3, #3
 3510 0126 52E0     		b	.L184
 3511              	.L180:
1901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 116


1906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3512              		.loc 1 1907 7
 3513 0128 7B68     		ldr	r3, [r7, #4]
 3514 012a 1B68     		ldr	r3, [r3]
 3515 012c 5B69     		ldr	r3, [r3, #20]
 3516 012e 03F04003 		and	r3, r3, #64
 3517              		.loc 1 1907 6
 3518 0132 402B     		cmp	r3, #64
 3519 0134 36D1     		bne	.L185
 3520              	.L188:
 3521              	.LBB409:
1908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3522              		.loc 1 1909 5 discriminator 1
 3523 0136 7B68     		ldr	r3, [r7, #4]
 3524 0138 1B68     		ldr	r3, [r3]
 3525 013a 1433     		adds	r3, r3, #20
 3526 013c FB60     		str	r3, [r7, #12]
 3527              	.LBB410:
 3528              	.LBB411:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3529              		.loc 2 1072 4
 3530 013e FB68     		ldr	r3, [r7, #12]
 3531              		.syntax unified
 3532              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3533 0140 53E8003F 		ldrex r3, [r3]
 3534              	@ 0 "" 2
 3535              		.thumb
 3536              		.syntax unified
 3537 0144 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3538              		.loc 2 1073 10
 3539 0146 BB68     		ldr	r3, [r7, #8]
 3540              	.LBE411:
 3541              	.LBE410:
 3542              		.loc 1 1909 5 discriminator 1
 3543 0148 23F04003 		bic	r3, r3, #64
 3544 014c FB66     		str	r3, [r7, #108]
 3545 014e 7B68     		ldr	r3, [r7, #4]
 3546 0150 1B68     		ldr	r3, [r3]
 3547 0152 1433     		adds	r3, r3, #20
 3548 0154 FA6E     		ldr	r2, [r7, #108]
 3549 0156 BA61     		str	r2, [r7, #24]
 3550 0158 7B61     		str	r3, [r7, #20]
 3551              	.LBB412:
 3552              	.LBB413:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3553              		.loc 2 1123 4
 3554 015a 7969     		ldr	r1, [r7, #20]
 3555 015c BA69     		ldr	r2, [r7, #24]
 3556              		.syntax unified
 3557              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3558 015e 41E80023 		strex r3, r2, [r1]
 3559              	@ 0 "" 2
 3560              		.thumb
 3561              		.syntax unified
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 117


 3562 0162 3B61     		str	r3, [r7, #16]
 3563              		.loc 2 1124 10
 3564 0164 3B69     		ldr	r3, [r7, #16]
 3565              	.LBE413:
 3566              	.LBE412:
 3567              		.loc 1 1909 5 discriminator 1
 3568 0166 002B     		cmp	r3, #0
 3569 0168 E5D1     		bne	.L188
 3570              	.LBE409:
1910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream: use blocking DMA Abort API (no callback) */
1912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3571              		.loc 1 1912 14
 3572 016a 7B68     		ldr	r3, [r7, #4]
 3573 016c 9B6B     		ldr	r3, [r3, #56]
 3574              		.loc 1 1912 8
 3575 016e 002B     		cmp	r3, #0
 3576 0170 18D0     		beq	.L185
1913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 3577              		.loc 1 1916 12
 3578 0172 7B68     		ldr	r3, [r7, #4]
 3579 0174 9B6B     		ldr	r3, [r3, #56]
 3580              		.loc 1 1916 40
 3581 0176 0022     		movs	r2, #0
 3582 0178 1A65     		str	r2, [r3, #80]
1917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 3583              		.loc 1 1918 11
 3584 017a 7B68     		ldr	r3, [r7, #4]
 3585 017c 9B6B     		ldr	r3, [r3, #56]
 3586 017e 1846     		mov	r0, r3
 3587 0180 FFF7FEFF 		bl	HAL_DMA_Abort
 3588 0184 0346     		mov	r3, r0
 3589              		.loc 1 1918 10 discriminator 1
 3590 0186 002B     		cmp	r3, #0
 3591 0188 0CD0     		beq	.L185
1919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 3592              		.loc 1 1920 13
 3593 018a 7B68     		ldr	r3, [r7, #4]
 3594 018c 9B6B     		ldr	r3, [r3, #56]
 3595 018e 1846     		mov	r0, r3
 3596 0190 FFF7FEFF 		bl	HAL_DMA_GetError
 3597 0194 0346     		mov	r3, r0
 3598              		.loc 1 1920 12 discriminator 1
 3599 0196 202B     		cmp	r3, #32
 3600 0198 04D1     		bne	.L185
1921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3601              		.loc 1 1923 28
 3602 019a 7B68     		ldr	r3, [r7, #4]
 3603 019c 1022     		movs	r2, #16
 3604 019e 1A64     		str	r2, [r3, #64]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 118


1924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 3605              		.loc 1 1925 18
 3606 01a0 0323     		movs	r3, #3
 3607 01a2 14E0     		b	.L184
 3608              	.L185:
1926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 3609              		.loc 1 1932 22
 3610 01a4 7B68     		ldr	r3, [r7, #4]
 3611 01a6 0022     		movs	r2, #0
 3612 01a8 DA84     		strh	r2, [r3, #38]	@ movhi
1933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3613              		.loc 1 1933 22
 3614 01aa 7B68     		ldr	r3, [r7, #4]
 3615 01ac 0022     		movs	r2, #0
 3616 01ae DA85     		strh	r2, [r3, #46]	@ movhi
1934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
1936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 3617              		.loc 1 1936 20
 3618 01b0 7B68     		ldr	r3, [r7, #4]
 3619 01b2 0022     		movs	r2, #0
 3620 01b4 1A64     		str	r2, [r3, #64]
1937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState and huart->gState to Ready */
1939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3621              		.loc 1 1939 18
 3622 01b6 7B68     		ldr	r3, [r7, #4]
 3623 01b8 2022     		movs	r2, #32
 3624 01ba 83F83E20 		strb	r2, [r3, #62]
1940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3625              		.loc 1 1940 17
 3626 01be 7B68     		ldr	r3, [r7, #4]
 3627 01c0 2022     		movs	r2, #32
 3628 01c2 83F83D20 		strb	r2, [r3, #61]
1941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3629              		.loc 1 1941 24
 3630 01c6 7B68     		ldr	r3, [r7, #4]
 3631 01c8 0022     		movs	r2, #0
 3632 01ca 1A63     		str	r2, [r3, #48]
1942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 3633              		.loc 1 1943 10
 3634 01cc 0023     		movs	r3, #0
 3635              	.L184:
1944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3636              		.loc 1 1944 1
 3637 01ce 1846     		mov	r0, r3
 3638 01d0 8037     		adds	r7, r7, #128
 3639              	.LCFI103:
 3640              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 119


 3641 01d2 BD46     		mov	sp, r7
 3642              	.LCFI104:
 3643              		.cfi_def_cfa_register 13
 3644              		@ sp needed
 3645 01d4 80BD     		pop	{r7, pc}
 3646              		.cfi_endproc
 3647              	.LFE235:
 3649              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 3650              		.align	1
 3651              		.global	HAL_UART_AbortTransmit
 3652              		.syntax unified
 3653              		.thumb
 3654              		.thumb_func
 3656              	HAL_UART_AbortTransmit:
 3657              	.LFB236:
1945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3658              		.loc 1 1959 1
 3659              		.cfi_startproc
 3660              		@ args = 0, pretend = 0, frame = 56
 3661              		@ frame_needed = 1, uses_anonymous_args = 0
 3662 0000 80B5     		push	{r7, lr}
 3663              	.LCFI105:
 3664              		.cfi_def_cfa_offset 8
 3665              		.cfi_offset 7, -8
 3666              		.cfi_offset 14, -4
 3667 0002 8EB0     		sub	sp, sp, #56
 3668              	.LCFI106:
 3669              		.cfi_def_cfa_offset 64
 3670 0004 00AF     		add	r7, sp, #0
 3671              	.LCFI107:
 3672              		.cfi_def_cfa_register 7
 3673 0006 7860     		str	r0, [r7, #4]
 3674              	.L192:
 3675              	.LBB414:
1960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 3676              		.loc 1 1961 3 discriminator 1
 3677 0008 7B68     		ldr	r3, [r7, #4]
 3678 000a 1B68     		ldr	r3, [r3]
 3679 000c 0C33     		adds	r3, r3, #12
 3680 000e 3B62     		str	r3, [r7, #32]
 3681              	.LBB415:
 3682              	.LBB416:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 120


1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3683              		.loc 2 1072 4
 3684 0010 3B6A     		ldr	r3, [r7, #32]
 3685              		.syntax unified
 3686              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3687 0012 53E8003F 		ldrex r3, [r3]
 3688              	@ 0 "" 2
 3689              		.thumb
 3690              		.syntax unified
 3691 0016 FB61     		str	r3, [r7, #28]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3692              		.loc 2 1073 10
 3693 0018 FB69     		ldr	r3, [r7, #28]
 3694              	.LBE416:
 3695              	.LBE415:
 3696              		.loc 1 1961 3 discriminator 1
 3697 001a 23F0C003 		bic	r3, r3, #192
 3698 001e 7B63     		str	r3, [r7, #52]
 3699 0020 7B68     		ldr	r3, [r7, #4]
 3700 0022 1B68     		ldr	r3, [r3]
 3701 0024 0C33     		adds	r3, r3, #12
 3702 0026 7A6B     		ldr	r2, [r7, #52]
 3703 0028 FA62     		str	r2, [r7, #44]
 3704 002a BB62     		str	r3, [r7, #40]
 3705              	.LBB417:
 3706              	.LBB418:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3707              		.loc 2 1123 4
 3708 002c B96A     		ldr	r1, [r7, #40]
 3709 002e FA6A     		ldr	r2, [r7, #44]
 3710              		.syntax unified
 3711              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3712 0030 41E80023 		strex r3, r2, [r1]
 3713              	@ 0 "" 2
 3714              		.thumb
 3715              		.syntax unified
 3716 0034 7B62     		str	r3, [r7, #36]
 3717              		.loc 2 1124 10
 3718 0036 7B6A     		ldr	r3, [r7, #36]
 3719              	.LBE418:
 3720              	.LBE417:
 3721              		.loc 1 1961 3 discriminator 1
 3722 0038 002B     		cmp	r3, #0
 3723 003a E5D1     		bne	.L192
 3724              	.LBE414:
1962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3725              		.loc 1 1964 7
 3726 003c 7B68     		ldr	r3, [r7, #4]
 3727 003e 1B68     		ldr	r3, [r3]
 3728 0040 5B69     		ldr	r3, [r3, #20]
 3729 0042 03F08003 		and	r3, r3, #128
 3730              		.loc 1 1964 6
 3731 0046 802B     		cmp	r3, #128
 3732 0048 36D1     		bne	.L193
 3733              	.L196:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 121


 3734              	.LBB419:
1965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3735              		.loc 1 1966 5 discriminator 1
 3736 004a 7B68     		ldr	r3, [r7, #4]
 3737 004c 1B68     		ldr	r3, [r3]
 3738 004e 1433     		adds	r3, r3, #20
 3739 0050 FB60     		str	r3, [r7, #12]
 3740              	.LBB420:
 3741              	.LBB421:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3742              		.loc 2 1072 4
 3743 0052 FB68     		ldr	r3, [r7, #12]
 3744              		.syntax unified
 3745              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3746 0054 53E8003F 		ldrex r3, [r3]
 3747              	@ 0 "" 2
 3748              		.thumb
 3749              		.syntax unified
 3750 0058 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3751              		.loc 2 1073 10
 3752 005a BB68     		ldr	r3, [r7, #8]
 3753              	.LBE421:
 3754              	.LBE420:
 3755              		.loc 1 1966 5 discriminator 1
 3756 005c 23F08003 		bic	r3, r3, #128
 3757 0060 3B63     		str	r3, [r7, #48]
 3758 0062 7B68     		ldr	r3, [r7, #4]
 3759 0064 1B68     		ldr	r3, [r3]
 3760 0066 1433     		adds	r3, r3, #20
 3761 0068 3A6B     		ldr	r2, [r7, #48]
 3762 006a BA61     		str	r2, [r7, #24]
 3763 006c 7B61     		str	r3, [r7, #20]
 3764              	.LBB422:
 3765              	.LBB423:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3766              		.loc 2 1123 4
 3767 006e 7969     		ldr	r1, [r7, #20]
 3768 0070 BA69     		ldr	r2, [r7, #24]
 3769              		.syntax unified
 3770              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3771 0072 41E80023 		strex r3, r2, [r1]
 3772              	@ 0 "" 2
 3773              		.thumb
 3774              		.syntax unified
 3775 0076 3B61     		str	r3, [r7, #16]
 3776              		.loc 2 1124 10
 3777 0078 3B69     		ldr	r3, [r7, #16]
 3778              	.LBE423:
 3779              	.LBE422:
 3780              		.loc 1 1966 5 discriminator 1
 3781 007a 002B     		cmp	r3, #0
 3782 007c E5D1     		bne	.L196
 3783              	.LBE419:
1967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream : use blocking DMA Abort API (no callback) */
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 122


1969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3784              		.loc 1 1969 14
 3785 007e 7B68     		ldr	r3, [r7, #4]
 3786 0080 5B6B     		ldr	r3, [r3, #52]
 3787              		.loc 1 1969 8
 3788 0082 002B     		cmp	r3, #0
 3789 0084 18D0     		beq	.L193
1970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 3790              		.loc 1 1973 12
 3791 0086 7B68     		ldr	r3, [r7, #4]
 3792 0088 5B6B     		ldr	r3, [r3, #52]
 3793              		.loc 1 1973 40
 3794 008a 0022     		movs	r2, #0
 3795 008c 1A65     		str	r2, [r3, #80]
1974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 3796              		.loc 1 1975 11
 3797 008e 7B68     		ldr	r3, [r7, #4]
 3798 0090 5B6B     		ldr	r3, [r3, #52]
 3799 0092 1846     		mov	r0, r3
 3800 0094 FFF7FEFF 		bl	HAL_DMA_Abort
 3801 0098 0346     		mov	r3, r0
 3802              		.loc 1 1975 10 discriminator 1
 3803 009a 002B     		cmp	r3, #0
 3804 009c 0CD0     		beq	.L193
1976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 3805              		.loc 1 1977 13
 3806 009e 7B68     		ldr	r3, [r7, #4]
 3807 00a0 5B6B     		ldr	r3, [r3, #52]
 3808 00a2 1846     		mov	r0, r3
 3809 00a4 FFF7FEFF 		bl	HAL_DMA_GetError
 3810 00a8 0346     		mov	r3, r0
 3811              		.loc 1 1977 12 discriminator 1
 3812 00aa 202B     		cmp	r3, #32
 3813 00ac 04D1     		bne	.L193
1978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3814              		.loc 1 1980 28
 3815 00ae 7B68     		ldr	r3, [r7, #4]
 3816 00b0 1022     		movs	r2, #16
 3817 00b2 1A64     		str	r2, [r3, #64]
1981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 3818              		.loc 1 1982 18
 3819 00b4 0323     		movs	r3, #3
 3820 00b6 07E0     		b	.L197
 3821              	.L193:
1983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 123


1988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Tx transfer counter */
1989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 3822              		.loc 1 1989 22
 3823 00b8 7B68     		ldr	r3, [r7, #4]
 3824 00ba 0022     		movs	r2, #0
 3825 00bc DA84     		strh	r2, [r3, #38]	@ movhi
1990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3826              		.loc 1 1992 17
 3827 00be 7B68     		ldr	r3, [r7, #4]
 3828 00c0 2022     		movs	r2, #32
 3829 00c2 83F83D20 		strb	r2, [r3, #61]
1993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 3830              		.loc 1 1994 10
 3831 00c6 0023     		movs	r3, #0
 3832              	.L197:
1995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3833              		.loc 1 1995 1
 3834 00c8 1846     		mov	r0, r3
 3835 00ca 3837     		adds	r7, r7, #56
 3836              	.LCFI108:
 3837              		.cfi_def_cfa_offset 8
 3838 00cc BD46     		mov	sp, r7
 3839              	.LCFI109:
 3840              		.cfi_def_cfa_register 13
 3841              		@ sp needed
 3842 00ce 80BD     		pop	{r7, pc}
 3843              		.cfi_endproc
 3844              	.LFE236:
 3846              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 3847              		.align	1
 3848              		.global	HAL_UART_AbortReceive
 3849              		.syntax unified
 3850              		.thumb
 3851              		.thumb_func
 3853              	HAL_UART_AbortReceive:
 3854              	.LFB237:
1996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
2002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
2005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
2006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
2007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
2010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3855              		.loc 1 2010 1
 3856              		.cfi_startproc
 3857              		@ args = 0, pretend = 0, frame = 104
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 124


 3858              		@ frame_needed = 1, uses_anonymous_args = 0
 3859 0000 80B5     		push	{r7, lr}
 3860              	.LCFI110:
 3861              		.cfi_def_cfa_offset 8
 3862              		.cfi_offset 7, -8
 3863              		.cfi_offset 14, -4
 3864 0002 9AB0     		sub	sp, sp, #104
 3865              	.LCFI111:
 3866              		.cfi_def_cfa_offset 112
 3867 0004 00AF     		add	r7, sp, #0
 3868              	.LCFI112:
 3869              		.cfi_def_cfa_register 7
 3870 0006 7860     		str	r0, [r7, #4]
 3871              	.L201:
 3872              	.LBB424:
2011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 3873              		.loc 1 2012 3 discriminator 1
 3874 0008 7B68     		ldr	r3, [r7, #4]
 3875 000a 1B68     		ldr	r3, [r3]
 3876 000c 0C33     		adds	r3, r3, #12
 3877 000e BB64     		str	r3, [r7, #72]
 3878              	.LBB425:
 3879              	.LBB426:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3880              		.loc 2 1072 4
 3881 0010 BB6C     		ldr	r3, [r7, #72]
 3882              		.syntax unified
 3883              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3884 0012 53E8003F 		ldrex r3, [r3]
 3885              	@ 0 "" 2
 3886              		.thumb
 3887              		.syntax unified
 3888 0016 7B64     		str	r3, [r7, #68]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3889              		.loc 2 1073 10
 3890 0018 7B6C     		ldr	r3, [r7, #68]
 3891              	.LBE426:
 3892              	.LBE425:
 3893              		.loc 1 2012 3 discriminator 1
 3894 001a 23F49073 		bic	r3, r3, #288
 3895 001e 7B66     		str	r3, [r7, #100]
 3896 0020 7B68     		ldr	r3, [r7, #4]
 3897 0022 1B68     		ldr	r3, [r3]
 3898 0024 0C33     		adds	r3, r3, #12
 3899 0026 7A6E     		ldr	r2, [r7, #100]
 3900 0028 7A65     		str	r2, [r7, #84]
 3901 002a 3B65     		str	r3, [r7, #80]
 3902              	.LBB427:
 3903              	.LBB428:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3904              		.loc 2 1123 4
 3905 002c 396D     		ldr	r1, [r7, #80]
 3906 002e 7A6D     		ldr	r2, [r7, #84]
 3907              		.syntax unified
 3908              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3909 0030 41E80023 		strex r3, r2, [r1]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 125


 3910              	@ 0 "" 2
 3911              		.thumb
 3912              		.syntax unified
 3913 0034 FB64     		str	r3, [r7, #76]
 3914              		.loc 2 1124 10
 3915 0036 FB6C     		ldr	r3, [r7, #76]
 3916              	.LBE428:
 3917              	.LBE427:
 3918              		.loc 1 2012 3 discriminator 1
 3919 0038 002B     		cmp	r3, #0
 3920 003a E5D1     		bne	.L201
 3921              	.L204:
 3922              	.LBE424:
 3923              	.LBB429:
2013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3924              		.loc 1 2013 3 discriminator 1
 3925 003c 7B68     		ldr	r3, [r7, #4]
 3926 003e 1B68     		ldr	r3, [r3]
 3927 0040 1433     		adds	r3, r3, #20
 3928 0042 7B63     		str	r3, [r7, #52]
 3929              	.LBB430:
 3930              	.LBB431:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3931              		.loc 2 1072 4
 3932 0044 7B6B     		ldr	r3, [r7, #52]
 3933              		.syntax unified
 3934              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3935 0046 53E8003F 		ldrex r3, [r3]
 3936              	@ 0 "" 2
 3937              		.thumb
 3938              		.syntax unified
 3939 004a 3B63     		str	r3, [r7, #48]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3940              		.loc 2 1073 10
 3941 004c 3B6B     		ldr	r3, [r7, #48]
 3942              	.LBE431:
 3943              	.LBE430:
 3944              		.loc 1 2013 3 discriminator 1
 3945 004e 23F00103 		bic	r3, r3, #1
 3946 0052 3B66     		str	r3, [r7, #96]
 3947 0054 7B68     		ldr	r3, [r7, #4]
 3948 0056 1B68     		ldr	r3, [r3]
 3949 0058 1433     		adds	r3, r3, #20
 3950 005a 3A6E     		ldr	r2, [r7, #96]
 3951 005c 3A64     		str	r2, [r7, #64]
 3952 005e FB63     		str	r3, [r7, #60]
 3953              	.LBB432:
 3954              	.LBB433:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3955              		.loc 2 1123 4
 3956 0060 F96B     		ldr	r1, [r7, #60]
 3957 0062 3A6C     		ldr	r2, [r7, #64]
 3958              		.syntax unified
 3959              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3960 0064 41E80023 		strex r3, r2, [r1]
 3961              	@ 0 "" 2
 3962              		.thumb
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 126


 3963              		.syntax unified
 3964 0068 BB63     		str	r3, [r7, #56]
 3965              		.loc 2 1124 10
 3966 006a BB6B     		ldr	r3, [r7, #56]
 3967              	.LBE433:
 3968              	.LBE432:
 3969              		.loc 1 2013 3 discriminator 1
 3970 006c 002B     		cmp	r3, #0
 3971 006e E5D1     		bne	.L204
 3972              	.LBE429:
2014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 3973              		.loc 1 2016 12
 3974 0070 7B68     		ldr	r3, [r7, #4]
 3975 0072 1B6B     		ldr	r3, [r3, #48]
 3976              		.loc 1 2016 6
 3977 0074 012B     		cmp	r3, #1
 3978 0076 19D1     		bne	.L205
 3979              	.L208:
 3980              	.LBB434:
2017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 3981              		.loc 1 2018 5 discriminator 1
 3982 0078 7B68     		ldr	r3, [r7, #4]
 3983 007a 1B68     		ldr	r3, [r3]
 3984 007c 0C33     		adds	r3, r3, #12
 3985 007e 3B62     		str	r3, [r7, #32]
 3986              	.LBB435:
 3987              	.LBB436:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3988              		.loc 2 1072 4
 3989 0080 3B6A     		ldr	r3, [r7, #32]
 3990              		.syntax unified
 3991              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3992 0082 53E8003F 		ldrex r3, [r3]
 3993              	@ 0 "" 2
 3994              		.thumb
 3995              		.syntax unified
 3996 0086 FB61     		str	r3, [r7, #28]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3997              		.loc 2 1073 10
 3998 0088 FB69     		ldr	r3, [r7, #28]
 3999              	.LBE436:
 4000              	.LBE435:
 4001              		.loc 1 2018 5 discriminator 1
 4002 008a 23F01003 		bic	r3, r3, #16
 4003 008e FB65     		str	r3, [r7, #92]
 4004 0090 7B68     		ldr	r3, [r7, #4]
 4005 0092 1B68     		ldr	r3, [r3]
 4006 0094 0C33     		adds	r3, r3, #12
 4007 0096 FA6D     		ldr	r2, [r7, #92]
 4008 0098 FA62     		str	r2, [r7, #44]
 4009 009a BB62     		str	r3, [r7, #40]
 4010              	.LBB437:
 4011              	.LBB438:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 127


 4012              		.loc 2 1123 4
 4013 009c B96A     		ldr	r1, [r7, #40]
 4014 009e FA6A     		ldr	r2, [r7, #44]
 4015              		.syntax unified
 4016              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4017 00a0 41E80023 		strex r3, r2, [r1]
 4018              	@ 0 "" 2
 4019              		.thumb
 4020              		.syntax unified
 4021 00a4 7B62     		str	r3, [r7, #36]
 4022              		.loc 2 1124 10
 4023 00a6 7B6A     		ldr	r3, [r7, #36]
 4024              	.LBE438:
 4025              	.LBE437:
 4026              		.loc 1 2018 5 discriminator 1
 4027 00a8 002B     		cmp	r3, #0
 4028 00aa E5D1     		bne	.L208
 4029              	.L205:
 4030              	.LBE434:
2019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 4031              		.loc 1 2022 7
 4032 00ac 7B68     		ldr	r3, [r7, #4]
 4033 00ae 1B68     		ldr	r3, [r3]
 4034 00b0 5B69     		ldr	r3, [r3, #20]
 4035 00b2 03F04003 		and	r3, r3, #64
 4036              		.loc 1 2022 6
 4037 00b6 402B     		cmp	r3, #64
 4038 00b8 36D1     		bne	.L209
 4039              	.L212:
 4040              	.LBB439:
2023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 4041              		.loc 1 2024 5 discriminator 1
 4042 00ba 7B68     		ldr	r3, [r7, #4]
 4043 00bc 1B68     		ldr	r3, [r3]
 4044 00be 1433     		adds	r3, r3, #20
 4045 00c0 FB60     		str	r3, [r7, #12]
 4046              	.LBB440:
 4047              	.LBB441:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4048              		.loc 2 1072 4
 4049 00c2 FB68     		ldr	r3, [r7, #12]
 4050              		.syntax unified
 4051              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4052 00c4 53E8003F 		ldrex r3, [r3]
 4053              	@ 0 "" 2
 4054              		.thumb
 4055              		.syntax unified
 4056 00c8 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4057              		.loc 2 1073 10
 4058 00ca BB68     		ldr	r3, [r7, #8]
 4059              	.LBE441:
 4060              	.LBE440:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 128


 4061              		.loc 1 2024 5 discriminator 1
 4062 00cc 23F04003 		bic	r3, r3, #64
 4063 00d0 BB65     		str	r3, [r7, #88]
 4064 00d2 7B68     		ldr	r3, [r7, #4]
 4065 00d4 1B68     		ldr	r3, [r3]
 4066 00d6 1433     		adds	r3, r3, #20
 4067 00d8 BA6D     		ldr	r2, [r7, #88]
 4068 00da BA61     		str	r2, [r7, #24]
 4069 00dc 7B61     		str	r3, [r7, #20]
 4070              	.LBB442:
 4071              	.LBB443:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4072              		.loc 2 1123 4
 4073 00de 7969     		ldr	r1, [r7, #20]
 4074 00e0 BA69     		ldr	r2, [r7, #24]
 4075              		.syntax unified
 4076              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4077 00e2 41E80023 		strex r3, r2, [r1]
 4078              	@ 0 "" 2
 4079              		.thumb
 4080              		.syntax unified
 4081 00e6 3B61     		str	r3, [r7, #16]
 4082              		.loc 2 1124 10
 4083 00e8 3B69     		ldr	r3, [r7, #16]
 4084              	.LBE443:
 4085              	.LBE442:
 4086              		.loc 1 2024 5 discriminator 1
 4087 00ea 002B     		cmp	r3, #0
 4088 00ec E5D1     		bne	.L212
 4089              	.LBE439:
2025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream : use blocking DMA Abort API (no callback) */
2027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 4090              		.loc 1 2027 14
 4091 00ee 7B68     		ldr	r3, [r7, #4]
 4092 00f0 9B6B     		ldr	r3, [r3, #56]
 4093              		.loc 1 2027 8
 4094 00f2 002B     		cmp	r3, #0
 4095 00f4 18D0     		beq	.L209
2028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
2030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
2031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 4096              		.loc 1 2031 12
 4097 00f6 7B68     		ldr	r3, [r7, #4]
 4098 00f8 9B6B     		ldr	r3, [r3, #56]
 4099              		.loc 1 2031 40
 4100 00fa 0022     		movs	r2, #0
 4101 00fc 1A65     		str	r2, [r3, #80]
2032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 4102              		.loc 1 2033 11
 4103 00fe 7B68     		ldr	r3, [r7, #4]
 4104 0100 9B6B     		ldr	r3, [r3, #56]
 4105 0102 1846     		mov	r0, r3
 4106 0104 FFF7FEFF 		bl	HAL_DMA_Abort
 4107 0108 0346     		mov	r3, r0
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 129


 4108              		.loc 1 2033 10 discriminator 1
 4109 010a 002B     		cmp	r3, #0
 4110 010c 0CD0     		beq	.L209
2034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 4111              		.loc 1 2035 13
 4112 010e 7B68     		ldr	r3, [r7, #4]
 4113 0110 9B6B     		ldr	r3, [r3, #56]
 4114 0112 1846     		mov	r0, r3
 4115 0114 FFF7FEFF 		bl	HAL_DMA_GetError
 4116 0118 0346     		mov	r3, r0
 4117              		.loc 1 2035 12 discriminator 1
 4118 011a 202B     		cmp	r3, #32
 4119 011c 04D1     		bne	.L209
2036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
2038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 4120              		.loc 1 2038 28
 4121 011e 7B68     		ldr	r3, [r7, #4]
 4122 0120 1022     		movs	r2, #16
 4123 0122 1A64     		str	r2, [r3, #64]
2039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 4124              		.loc 1 2040 18
 4125 0124 0323     		movs	r3, #3
 4126 0126 0AE0     		b	.L213
 4127              	.L209:
2041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Rx transfer counter */
2047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 4128              		.loc 1 2047 22
 4129 0128 7B68     		ldr	r3, [r7, #4]
 4130 012a 0022     		movs	r2, #0
 4131 012c DA85     		strh	r2, [r3, #46]	@ movhi
2048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4132              		.loc 1 2050 18
 4133 012e 7B68     		ldr	r3, [r7, #4]
 4134 0130 2022     		movs	r2, #32
 4135 0132 83F83E20 		strb	r2, [r3, #62]
2051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4136              		.loc 1 2051 24
 4137 0136 7B68     		ldr	r3, [r7, #4]
 4138 0138 0022     		movs	r2, #0
 4139 013a 1A63     		str	r2, [r3, #48]
2052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 4140              		.loc 1 2053 10
 4141 013c 0023     		movs	r3, #0
 4142              	.L213:
2054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4143              		.loc 1 2054 1
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 130


 4144 013e 1846     		mov	r0, r3
 4145 0140 6837     		adds	r7, r7, #104
 4146              	.LCFI113:
 4147              		.cfi_def_cfa_offset 8
 4148 0142 BD46     		mov	sp, r7
 4149              	.LCFI114:
 4150              		.cfi_def_cfa_register 13
 4151              		@ sp needed
 4152 0144 80BD     		pop	{r7, pc}
 4153              		.cfi_endproc
 4154              	.LFE237:
 4156              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 4157              		.align	1
 4158              		.global	HAL_UART_Abort_IT
 4159              		.syntax unified
 4160              		.thumb
 4161              		.thumb_func
 4163              	HAL_UART_Abort_IT:
 4164              	.LFB238:
2055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
2058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
2060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
2061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
2062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
2065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
2071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4165              		.loc 1 2071 1
 4166              		.cfi_startproc
 4167              		@ args = 0, pretend = 0, frame = 136
 4168              		@ frame_needed = 1, uses_anonymous_args = 0
 4169 0000 80B5     		push	{r7, lr}
 4170              	.LCFI115:
 4171              		.cfi_def_cfa_offset 8
 4172              		.cfi_offset 7, -8
 4173              		.cfi_offset 14, -4
 4174 0002 A2B0     		sub	sp, sp, #136
 4175              	.LCFI116:
 4176              		.cfi_def_cfa_offset 144
 4177 0004 00AF     		add	r7, sp, #0
 4178              	.LCFI117:
 4179              		.cfi_def_cfa_register 7
 4180 0006 7860     		str	r0, [r7, #4]
2072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
 4181              		.loc 1 2072 12
 4182 0008 0123     		movs	r3, #1
 4183 000a C7F88430 		str	r3, [r7, #132]
 4184              	.L217:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 131


 4185              	.LBB444:
2073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USA
 4186              		.loc 1 2075 3 discriminator 1
 4187 000e 7B68     		ldr	r3, [r7, #4]
 4188 0010 1B68     		ldr	r3, [r3]
 4189 0012 0C33     		adds	r3, r3, #12
 4190 0014 3B66     		str	r3, [r7, #96]
 4191              	.LBB445:
 4192              	.LBB446:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4193              		.loc 2 1072 4
 4194 0016 3B6E     		ldr	r3, [r7, #96]
 4195              		.syntax unified
 4196              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4197 0018 53E8003F 		ldrex r3, [r3]
 4198              	@ 0 "" 2
 4199              		.thumb
 4200              		.syntax unified
 4201 001c FB65     		str	r3, [r7, #92]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4202              		.loc 2 1073 10
 4203 001e FB6D     		ldr	r3, [r7, #92]
 4204              	.LBE446:
 4205              	.LBE445:
 4206              		.loc 1 2075 3 discriminator 1
 4207 0020 23F4F073 		bic	r3, r3, #480
 4208 0024 C7F88030 		str	r3, [r7, #128]
 4209 0028 7B68     		ldr	r3, [r7, #4]
 4210 002a 1B68     		ldr	r3, [r3]
 4211 002c 0C33     		adds	r3, r3, #12
 4212 002e D7F88020 		ldr	r2, [r7, #128]
 4213 0032 FA66     		str	r2, [r7, #108]
 4214 0034 BB66     		str	r3, [r7, #104]
 4215              	.LBB447:
 4216              	.LBB448:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4217              		.loc 2 1123 4
 4218 0036 B96E     		ldr	r1, [r7, #104]
 4219 0038 FA6E     		ldr	r2, [r7, #108]
 4220              		.syntax unified
 4221              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4222 003a 41E80023 		strex r3, r2, [r1]
 4223              	@ 0 "" 2
 4224              		.thumb
 4225              		.syntax unified
 4226 003e 7B66     		str	r3, [r7, #100]
 4227              		.loc 2 1124 10
 4228 0040 7B6E     		ldr	r3, [r7, #100]
 4229              	.LBE448:
 4230              	.LBE447:
 4231              		.loc 1 2075 3 discriminator 1
 4232 0042 002B     		cmp	r3, #0
 4233 0044 E3D1     		bne	.L217
 4234              	.L220:
 4235              	.LBE444:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 132


 4236              	.LBB449:
2076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4237              		.loc 1 2076 3 discriminator 1
 4238 0046 7B68     		ldr	r3, [r7, #4]
 4239 0048 1B68     		ldr	r3, [r3]
 4240 004a 1433     		adds	r3, r3, #20
 4241 004c FB64     		str	r3, [r7, #76]
 4242              	.LBB450:
 4243              	.LBB451:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4244              		.loc 2 1072 4
 4245 004e FB6C     		ldr	r3, [r7, #76]
 4246              		.syntax unified
 4247              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4248 0050 53E8003F 		ldrex r3, [r3]
 4249              	@ 0 "" 2
 4250              		.thumb
 4251              		.syntax unified
 4252 0054 BB64     		str	r3, [r7, #72]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4253              		.loc 2 1073 10
 4254 0056 BB6C     		ldr	r3, [r7, #72]
 4255              	.LBE451:
 4256              	.LBE450:
 4257              		.loc 1 2076 3 discriminator 1
 4258 0058 23F00103 		bic	r3, r3, #1
 4259 005c FB67     		str	r3, [r7, #124]
 4260 005e 7B68     		ldr	r3, [r7, #4]
 4261 0060 1B68     		ldr	r3, [r3]
 4262 0062 1433     		adds	r3, r3, #20
 4263 0064 FA6F     		ldr	r2, [r7, #124]
 4264 0066 BA65     		str	r2, [r7, #88]
 4265 0068 7B65     		str	r3, [r7, #84]
 4266              	.LBB452:
 4267              	.LBB453:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4268              		.loc 2 1123 4
 4269 006a 796D     		ldr	r1, [r7, #84]
 4270 006c BA6D     		ldr	r2, [r7, #88]
 4271              		.syntax unified
 4272              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4273 006e 41E80023 		strex r3, r2, [r1]
 4274              	@ 0 "" 2
 4275              		.thumb
 4276              		.syntax unified
 4277 0072 3B65     		str	r3, [r7, #80]
 4278              		.loc 2 1124 10
 4279 0074 3B6D     		ldr	r3, [r7, #80]
 4280              	.LBE453:
 4281              	.LBE452:
 4282              		.loc 1 2076 3 discriminator 1
 4283 0076 002B     		cmp	r3, #0
 4284 0078 E5D1     		bne	.L220
 4285              	.LBE449:
2077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 133


 4286              		.loc 1 2079 12
 4287 007a 7B68     		ldr	r3, [r7, #4]
 4288 007c 1B6B     		ldr	r3, [r3, #48]
 4289              		.loc 1 2079 6
 4290 007e 012B     		cmp	r3, #1
 4291 0080 19D1     		bne	.L221
 4292              	.L224:
 4293              	.LBB454:
2080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 4294              		.loc 1 2081 5 discriminator 1
 4295 0082 7B68     		ldr	r3, [r7, #4]
 4296 0084 1B68     		ldr	r3, [r3]
 4297 0086 0C33     		adds	r3, r3, #12
 4298 0088 BB63     		str	r3, [r7, #56]
 4299              	.LBB455:
 4300              	.LBB456:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4301              		.loc 2 1072 4
 4302 008a BB6B     		ldr	r3, [r7, #56]
 4303              		.syntax unified
 4304              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4305 008c 53E8003F 		ldrex r3, [r3]
 4306              	@ 0 "" 2
 4307              		.thumb
 4308              		.syntax unified
 4309 0090 7B63     		str	r3, [r7, #52]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4310              		.loc 2 1073 10
 4311 0092 7B6B     		ldr	r3, [r7, #52]
 4312              	.LBE456:
 4313              	.LBE455:
 4314              		.loc 1 2081 5 discriminator 1
 4315 0094 23F01003 		bic	r3, r3, #16
 4316 0098 BB67     		str	r3, [r7, #120]
 4317 009a 7B68     		ldr	r3, [r7, #4]
 4318 009c 1B68     		ldr	r3, [r3]
 4319 009e 0C33     		adds	r3, r3, #12
 4320 00a0 BA6F     		ldr	r2, [r7, #120]
 4321 00a2 7A64     		str	r2, [r7, #68]
 4322 00a4 3B64     		str	r3, [r7, #64]
 4323              	.LBB457:
 4324              	.LBB458:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4325              		.loc 2 1123 4
 4326 00a6 396C     		ldr	r1, [r7, #64]
 4327 00a8 7A6C     		ldr	r2, [r7, #68]
 4328              		.syntax unified
 4329              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4330 00aa 41E80023 		strex r3, r2, [r1]
 4331              	@ 0 "" 2
 4332              		.thumb
 4333              		.syntax unified
 4334 00ae FB63     		str	r3, [r7, #60]
 4335              		.loc 2 1124 10
 4336 00b0 FB6B     		ldr	r3, [r7, #60]
 4337              	.LBE458:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 134


 4338              	.LBE457:
 4339              		.loc 1 2081 5 discriminator 1
 4340 00b2 002B     		cmp	r3, #0
 4341 00b4 E5D1     		bne	.L224
 4342              	.L221:
 4343              	.LBE454:
2082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
2085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      before any call to DMA Abort functions */
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Tx Handle is valid */
2087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 4344              		.loc 1 2087 12
 4345 00b6 7B68     		ldr	r3, [r7, #4]
 4346 00b8 5B6B     		ldr	r3, [r3, #52]
 4347              		.loc 1 2087 6
 4348 00ba 002B     		cmp	r3, #0
 4349 00bc 0FD0     		beq	.L225
2088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
2090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Otherwise, set it to NULL */
2091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 4350              		.loc 1 2091 9
 4351 00be 7B68     		ldr	r3, [r7, #4]
 4352 00c0 1B68     		ldr	r3, [r3]
 4353 00c2 5B69     		ldr	r3, [r3, #20]
 4354 00c4 03F08003 		and	r3, r3, #128
 4355              		.loc 1 2091 8
 4356 00c8 802B     		cmp	r3, #128
 4357 00ca 04D1     		bne	.L226
2092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
 4358              		.loc 1 2093 12
 4359 00cc 7B68     		ldr	r3, [r7, #4]
 4360 00ce 5B6B     		ldr	r3, [r3, #52]
 4361              		.loc 1 2093 40
 4362 00d0 534A     		ldr	r2, .L241
 4363 00d2 1A65     		str	r2, [r3, #80]
 4364 00d4 03E0     		b	.L225
 4365              	.L226:
2094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 4366              		.loc 1 2097 12
 4367 00d6 7B68     		ldr	r3, [r7, #4]
 4368 00d8 5B6B     		ldr	r3, [r3, #52]
 4369              		.loc 1 2097 40
 4370 00da 0022     		movs	r2, #0
 4371 00dc 1A65     		str	r2, [r3, #80]
 4372              	.L225:
2098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Rx Handle is valid */
2101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 4373              		.loc 1 2101 12
 4374 00de 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 135


 4375 00e0 9B6B     		ldr	r3, [r3, #56]
 4376              		.loc 1 2101 6
 4377 00e2 002B     		cmp	r3, #0
 4378 00e4 0FD0     		beq	.L227
2102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
2104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Otherwise, set it to NULL */
2105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 4379              		.loc 1 2105 9
 4380 00e6 7B68     		ldr	r3, [r7, #4]
 4381 00e8 1B68     		ldr	r3, [r3]
 4382 00ea 5B69     		ldr	r3, [r3, #20]
 4383 00ec 03F04003 		and	r3, r3, #64
 4384              		.loc 1 2105 8
 4385 00f0 402B     		cmp	r3, #64
 4386 00f2 04D1     		bne	.L228
2106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
 4387              		.loc 1 2107 12
 4388 00f4 7B68     		ldr	r3, [r7, #4]
 4389 00f6 9B6B     		ldr	r3, [r3, #56]
 4390              		.loc 1 2107 40
 4391 00f8 4A4A     		ldr	r2, .L241+4
 4392 00fa 1A65     		str	r2, [r3, #80]
 4393 00fc 03E0     		b	.L227
 4394              	.L228:
2108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 4395              		.loc 1 2111 12
 4396 00fe 7B68     		ldr	r3, [r7, #4]
 4397 0100 9B6B     		ldr	r3, [r3, #56]
 4398              		.loc 1 2111 40
 4399 0102 0022     		movs	r2, #0
 4400 0104 1A65     		str	r2, [r3, #80]
 4401              	.L227:
2112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 4402              		.loc 1 2116 7
 4403 0106 7B68     		ldr	r3, [r7, #4]
 4404 0108 1B68     		ldr	r3, [r3]
 4405 010a 5B69     		ldr	r3, [r3, #20]
 4406 010c 03F08003 		and	r3, r3, #128
 4407              		.loc 1 2116 6
 4408 0110 802B     		cmp	r3, #128
 4409 0112 2DD1     		bne	.L229
 4410              	.L232:
 4411              	.LBB459:
2117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
2119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 4412              		.loc 1 2119 5 discriminator 1
 4413 0114 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 136


 4414 0116 1B68     		ldr	r3, [r3]
 4415 0118 1433     		adds	r3, r3, #20
 4416 011a 7B62     		str	r3, [r7, #36]
 4417              	.LBB460:
 4418              	.LBB461:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4419              		.loc 2 1072 4
 4420 011c 7B6A     		ldr	r3, [r7, #36]
 4421              		.syntax unified
 4422              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4423 011e 53E8003F 		ldrex r3, [r3]
 4424              	@ 0 "" 2
 4425              		.thumb
 4426              		.syntax unified
 4427 0122 3B62     		str	r3, [r7, #32]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4428              		.loc 2 1073 10
 4429 0124 3B6A     		ldr	r3, [r7, #32]
 4430              	.LBE461:
 4431              	.LBE460:
 4432              		.loc 1 2119 5 discriminator 1
 4433 0126 23F08003 		bic	r3, r3, #128
 4434 012a 7B67     		str	r3, [r7, #116]
 4435 012c 7B68     		ldr	r3, [r7, #4]
 4436 012e 1B68     		ldr	r3, [r3]
 4437 0130 1433     		adds	r3, r3, #20
 4438 0132 7A6F     		ldr	r2, [r7, #116]
 4439 0134 3A63     		str	r2, [r7, #48]
 4440 0136 FB62     		str	r3, [r7, #44]
 4441              	.LBB462:
 4442              	.LBB463:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4443              		.loc 2 1123 4
 4444 0138 F96A     		ldr	r1, [r7, #44]
 4445 013a 3A6B     		ldr	r2, [r7, #48]
 4446              		.syntax unified
 4447              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4448 013c 41E80023 		strex r3, r2, [r1]
 4449              	@ 0 "" 2
 4450              		.thumb
 4451              		.syntax unified
 4452 0140 BB62     		str	r3, [r7, #40]
 4453              		.loc 2 1124 10
 4454 0142 BB6A     		ldr	r3, [r7, #40]
 4455              	.LBE463:
 4456              	.LBE462:
 4457              		.loc 1 2119 5 discriminator 1
 4458 0144 002B     		cmp	r3, #0
 4459 0146 E5D1     		bne	.L232
 4460              	.LBE459:
2120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream : use non blocking DMA Abort API (callback) */
2122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 4461              		.loc 1 2122 14
 4462 0148 7B68     		ldr	r3, [r7, #4]
 4463 014a 5B6B     		ldr	r3, [r3, #52]
 4464              		.loc 1 2122 8
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 137


 4465 014c 002B     		cmp	r3, #0
 4466 014e 0FD0     		beq	.L229
2123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
2125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA TX */
2128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 4467              		.loc 1 2128 11
 4468 0150 7B68     		ldr	r3, [r7, #4]
 4469 0152 5B6B     		ldr	r3, [r3, #52]
 4470 0154 1846     		mov	r0, r3
 4471 0156 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4472 015a 0346     		mov	r3, r0
 4473              		.loc 1 2128 10 discriminator 1
 4474 015c 002B     		cmp	r3, #0
 4475 015e 04D0     		beq	.L233
2129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
 4476              		.loc 1 2130 14
 4477 0160 7B68     		ldr	r3, [r7, #4]
 4478 0162 5B6B     		ldr	r3, [r3, #52]
 4479              		.loc 1 2130 42
 4480 0164 0022     		movs	r2, #0
 4481 0166 1A65     		str	r2, [r3, #80]
 4482 0168 02E0     		b	.L229
 4483              	.L233:
2131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x00U;
 4484              		.loc 1 2134 19
 4485 016a 0023     		movs	r3, #0
 4486 016c C7F88430 		str	r3, [r7, #132]
 4487              	.L229:
2135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 4488              		.loc 1 2140 7
 4489 0170 7B68     		ldr	r3, [r7, #4]
 4490 0172 1B68     		ldr	r3, [r3]
 4491 0174 5B69     		ldr	r3, [r3, #20]
 4492 0176 03F04003 		and	r3, r3, #64
 4493              		.loc 1 2140 6
 4494 017a 402B     		cmp	r3, #64
 4495 017c 30D1     		bne	.L234
 4496              	.L237:
 4497              	.LBB464:
2141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 4498              		.loc 1 2142 5 discriminator 1
 4499 017e 7B68     		ldr	r3, [r7, #4]
 4500 0180 1B68     		ldr	r3, [r3]
 4501 0182 1433     		adds	r3, r3, #20
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 138


 4502 0184 3B61     		str	r3, [r7, #16]
 4503              	.LBB465:
 4504              	.LBB466:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4505              		.loc 2 1072 4
 4506 0186 3B69     		ldr	r3, [r7, #16]
 4507              		.syntax unified
 4508              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4509 0188 53E8003F 		ldrex r3, [r3]
 4510              	@ 0 "" 2
 4511              		.thumb
 4512              		.syntax unified
 4513 018c FB60     		str	r3, [r7, #12]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4514              		.loc 2 1073 10
 4515 018e FB68     		ldr	r3, [r7, #12]
 4516              	.LBE466:
 4517              	.LBE465:
 4518              		.loc 1 2142 5 discriminator 1
 4519 0190 23F04003 		bic	r3, r3, #64
 4520 0194 3B67     		str	r3, [r7, #112]
 4521 0196 7B68     		ldr	r3, [r7, #4]
 4522 0198 1B68     		ldr	r3, [r3]
 4523 019a 1433     		adds	r3, r3, #20
 4524 019c 3A6F     		ldr	r2, [r7, #112]
 4525 019e FA61     		str	r2, [r7, #28]
 4526 01a0 BB61     		str	r3, [r7, #24]
 4527              	.LBB467:
 4528              	.LBB468:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4529              		.loc 2 1123 4
 4530 01a2 B969     		ldr	r1, [r7, #24]
 4531 01a4 FA69     		ldr	r2, [r7, #28]
 4532              		.syntax unified
 4533              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4534 01a6 41E80023 		strex r3, r2, [r1]
 4535              	@ 0 "" 2
 4536              		.thumb
 4537              		.syntax unified
 4538 01aa 7B61     		str	r3, [r7, #20]
 4539              		.loc 2 1124 10
 4540 01ac 7B69     		ldr	r3, [r7, #20]
 4541              	.LBE468:
 4542              	.LBE467:
 4543              		.loc 1 2142 5 discriminator 1
 4544 01ae 002B     		cmp	r3, #0
 4545 01b0 E5D1     		bne	.L237
 4546              	.LBE464:
2143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream : use non blocking DMA Abort API (callback) */
2145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 4547              		.loc 1 2145 14
 4548 01b2 7B68     		ldr	r3, [r7, #4]
 4549 01b4 9B6B     		ldr	r3, [r3, #56]
 4550              		.loc 1 2145 8
 4551 01b6 002B     		cmp	r3, #0
 4552 01b8 12D0     		beq	.L234
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 139


2146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
2148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA RX */
2151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 4553              		.loc 1 2151 11
 4554 01ba 7B68     		ldr	r3, [r7, #4]
 4555 01bc 9B6B     		ldr	r3, [r3, #56]
 4556 01be 1846     		mov	r0, r3
 4557 01c0 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4558 01c4 0346     		mov	r3, r0
 4559              		.loc 1 2151 10 discriminator 1
 4560 01c6 002B     		cmp	r3, #0
 4561 01c8 07D0     		beq	.L238
2152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
 4562              		.loc 1 2153 14
 4563 01ca 7B68     		ldr	r3, [r7, #4]
 4564 01cc 9B6B     		ldr	r3, [r3, #56]
 4565              		.loc 1 2153 42
 4566 01ce 0022     		movs	r2, #0
 4567 01d0 1A65     		str	r2, [r3, #80]
2154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x01U;
 4568              		.loc 1 2154 19
 4569 01d2 0123     		movs	r3, #1
 4570 01d4 C7F88430 		str	r3, [r7, #132]
 4571 01d8 02E0     		b	.L234
 4572              	.L238:
2155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x00U;
 4573              		.loc 1 2158 19
 4574 01da 0023     		movs	r3, #0
 4575 01dc C7F88430 		str	r3, [r7, #132]
 4576              	.L234:
2159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
2164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (AbortCplt == 0x01U)
 4577              		.loc 1 2164 6
 4578 01e0 D7F88430 		ldr	r3, [r7, #132]
 4579 01e4 012B     		cmp	r3, #1
 4580 01e6 16D1     		bne	.L239
2165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
2167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 4581              		.loc 1 2167 24
 4582 01e8 7B68     		ldr	r3, [r7, #4]
 4583 01ea 0022     		movs	r2, #0
 4584 01ec DA84     		strh	r2, [r3, #38]	@ movhi
2168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 4585              		.loc 1 2168 24
 4586 01ee 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 140


 4587 01f0 0022     		movs	r2, #0
 4588 01f2 DA85     		strh	r2, [r3, #46]	@ movhi
2169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset ErrorCode */
2171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 4589              		.loc 1 2171 22
 4590 01f4 7B68     		ldr	r3, [r7, #4]
 4591 01f6 0022     		movs	r2, #0
 4592 01f8 1A64     		str	r2, [r3, #64]
2172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
2174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
 4593              		.loc 1 2174 20
 4594 01fa 7B68     		ldr	r3, [r7, #4]
 4595 01fc 2022     		movs	r2, #32
 4596 01fe 83F83D20 		strb	r2, [r3, #61]
2175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 4597              		.loc 1 2175 20
 4598 0202 7B68     		ldr	r3, [r7, #4]
 4599 0204 2022     		movs	r2, #32
 4600 0206 83F83E20 		strb	r2, [r3, #62]
2176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4601              		.loc 1 2176 26
 4602 020a 7B68     		ldr	r3, [r7, #4]
 4603 020c 0022     		movs	r2, #0
 4604 020e 1A63     		str	r2, [r3, #48]
2177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call registered Abort complete callback */
2181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
2182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
2184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
 4605              		.loc 1 2184 5
 4606 0210 7868     		ldr	r0, [r7, #4]
 4607 0212 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 4608              	.L239:
2185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 4609              		.loc 1 2188 10
 4610 0216 0023     		movs	r3, #0
2189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4611              		.loc 1 2189 1
 4612 0218 1846     		mov	r0, r3
 4613 021a 8837     		adds	r7, r7, #136
 4614              	.LCFI118:
 4615              		.cfi_def_cfa_offset 8
 4616 021c BD46     		mov	sp, r7
 4617              	.LCFI119:
 4618              		.cfi_def_cfa_register 13
 4619              		@ sp needed
 4620 021e 80BD     		pop	{r7, pc}
 4621              	.L242:
 4622              		.align	2
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 141


 4623              	.L241:
 4624 0220 00000000 		.word	UART_DMATxAbortCallback
 4625 0224 00000000 		.word	UART_DMARxAbortCallback
 4626              		.cfi_endproc
 4627              	.LFE238:
 4629              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 4630              		.align	1
 4631              		.global	HAL_UART_AbortTransmit_IT
 4632              		.syntax unified
 4633              		.thumb
 4634              		.thumb_func
 4636              	HAL_UART_AbortTransmit_IT:
 4637              	.LFB239:
2190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
2193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
2195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
2196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
2197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
2200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
2206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4638              		.loc 1 2206 1
 4639              		.cfi_startproc
 4640              		@ args = 0, pretend = 0, frame = 56
 4641              		@ frame_needed = 1, uses_anonymous_args = 0
 4642 0000 80B5     		push	{r7, lr}
 4643              	.LCFI120:
 4644              		.cfi_def_cfa_offset 8
 4645              		.cfi_offset 7, -8
 4646              		.cfi_offset 14, -4
 4647 0002 8EB0     		sub	sp, sp, #56
 4648              	.LCFI121:
 4649              		.cfi_def_cfa_offset 64
 4650 0004 00AF     		add	r7, sp, #0
 4651              	.LCFI122:
 4652              		.cfi_def_cfa_register 7
 4653 0006 7860     		str	r0, [r7, #4]
 4654              	.L246:
 4655              	.LBB469:
2207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 4656              		.loc 1 2208 3 discriminator 1
 4657 0008 7B68     		ldr	r3, [r7, #4]
 4658 000a 1B68     		ldr	r3, [r3]
 4659 000c 0C33     		adds	r3, r3, #12
 4660 000e 3B62     		str	r3, [r7, #32]
 4661              	.LBB470:
 4662              	.LBB471:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 142


1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4663              		.loc 2 1072 4
 4664 0010 3B6A     		ldr	r3, [r7, #32]
 4665              		.syntax unified
 4666              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4667 0012 53E8003F 		ldrex r3, [r3]
 4668              	@ 0 "" 2
 4669              		.thumb
 4670              		.syntax unified
 4671 0016 FB61     		str	r3, [r7, #28]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4672              		.loc 2 1073 10
 4673 0018 FB69     		ldr	r3, [r7, #28]
 4674              	.LBE471:
 4675              	.LBE470:
 4676              		.loc 1 2208 3 discriminator 1
 4677 001a 23F0C003 		bic	r3, r3, #192
 4678 001e 7B63     		str	r3, [r7, #52]
 4679 0020 7B68     		ldr	r3, [r7, #4]
 4680 0022 1B68     		ldr	r3, [r3]
 4681 0024 0C33     		adds	r3, r3, #12
 4682 0026 7A6B     		ldr	r2, [r7, #52]
 4683 0028 FA62     		str	r2, [r7, #44]
 4684 002a BB62     		str	r3, [r7, #40]
 4685              	.LBB472:
 4686              	.LBB473:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4687              		.loc 2 1123 4
 4688 002c B96A     		ldr	r1, [r7, #40]
 4689 002e FA6A     		ldr	r2, [r7, #44]
 4690              		.syntax unified
 4691              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4692 0030 41E80023 		strex r3, r2, [r1]
 4693              	@ 0 "" 2
 4694              		.thumb
 4695              		.syntax unified
 4696 0034 7B62     		str	r3, [r7, #36]
 4697              		.loc 2 1124 10
 4698 0036 7B6A     		ldr	r3, [r7, #36]
 4699              	.LBE473:
 4700              	.LBE472:
 4701              		.loc 1 2208 3 discriminator 1
 4702 0038 002B     		cmp	r3, #0
 4703 003a E5D1     		bne	.L246
 4704              	.LBE469:
2209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 4705              		.loc 1 2211 7
 4706 003c 7B68     		ldr	r3, [r7, #4]
 4707 003e 1B68     		ldr	r3, [r3]
 4708 0040 5B69     		ldr	r3, [r3, #20]
 4709 0042 03F08003 		and	r3, r3, #128
 4710              		.loc 1 2211 6
 4711 0046 802B     		cmp	r3, #128
 4712 0048 3CD1     		bne	.L247
 4713              	.L250:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 143


 4714              	.LBB474:
2212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 4715              		.loc 1 2213 5 discriminator 1
 4716 004a 7B68     		ldr	r3, [r7, #4]
 4717 004c 1B68     		ldr	r3, [r3]
 4718 004e 1433     		adds	r3, r3, #20
 4719 0050 FB60     		str	r3, [r7, #12]
 4720              	.LBB475:
 4721              	.LBB476:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4722              		.loc 2 1072 4
 4723 0052 FB68     		ldr	r3, [r7, #12]
 4724              		.syntax unified
 4725              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4726 0054 53E8003F 		ldrex r3, [r3]
 4727              	@ 0 "" 2
 4728              		.thumb
 4729              		.syntax unified
 4730 0058 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4731              		.loc 2 1073 10
 4732 005a BB68     		ldr	r3, [r7, #8]
 4733              	.LBE476:
 4734              	.LBE475:
 4735              		.loc 1 2213 5 discriminator 1
 4736 005c 23F08003 		bic	r3, r3, #128
 4737 0060 3B63     		str	r3, [r7, #48]
 4738 0062 7B68     		ldr	r3, [r7, #4]
 4739 0064 1B68     		ldr	r3, [r3]
 4740 0066 1433     		adds	r3, r3, #20
 4741 0068 3A6B     		ldr	r2, [r7, #48]
 4742 006a BA61     		str	r2, [r7, #24]
 4743 006c 7B61     		str	r3, [r7, #20]
 4744              	.LBB477:
 4745              	.LBB478:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4746              		.loc 2 1123 4
 4747 006e 7969     		ldr	r1, [r7, #20]
 4748 0070 BA69     		ldr	r2, [r7, #24]
 4749              		.syntax unified
 4750              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4751 0072 41E80023 		strex r3, r2, [r1]
 4752              	@ 0 "" 2
 4753              		.thumb
 4754              		.syntax unified
 4755 0076 3B61     		str	r3, [r7, #16]
 4756              		.loc 2 1124 10
 4757 0078 3B69     		ldr	r3, [r7, #16]
 4758              	.LBE478:
 4759              	.LBE477:
 4760              		.loc 1 2213 5 discriminator 1
 4761 007a 002B     		cmp	r3, #0
 4762 007c E5D1     		bne	.L250
 4763              	.LBE474:
2214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream : use blocking DMA Abort API (no callback) */
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 144


2216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 4764              		.loc 1 2216 14
 4765 007e 7B68     		ldr	r3, [r7, #4]
 4766 0080 5B6B     		ldr	r3, [r3, #52]
 4767              		.loc 1 2216 8
 4768 0082 002B     		cmp	r3, #0
 4769 0084 13D0     		beq	.L251
2217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
 4770              		.loc 1 2220 12
 4771 0086 7B68     		ldr	r3, [r7, #4]
 4772 0088 5B6B     		ldr	r3, [r3, #52]
 4773              		.loc 1 2220 40
 4774 008a 164A     		ldr	r2, .L254
 4775 008c 1A65     		str	r2, [r3, #80]
2221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA TX */
2223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 4776              		.loc 1 2223 11
 4777 008e 7B68     		ldr	r3, [r7, #4]
 4778 0090 5B6B     		ldr	r3, [r3, #52]
 4779 0092 1846     		mov	r0, r3
 4780 0094 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4781 0098 0346     		mov	r3, r0
 4782              		.loc 1 2223 10 discriminator 1
 4783 009a 002B     		cmp	r3, #0
 4784 009c 1CD0     		beq	.L252
2224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
2226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
 4785              		.loc 1 2226 14
 4786 009e 7B68     		ldr	r3, [r7, #4]
 4787 00a0 5B6B     		ldr	r3, [r3, #52]
 4788              		.loc 1 2226 22
 4789 00a2 1B6D     		ldr	r3, [r3, #80]
 4790              		.loc 1 2226 47
 4791 00a4 7A68     		ldr	r2, [r7, #4]
 4792 00a6 526B     		ldr	r2, [r2, #52]
 4793              		.loc 1 2226 9
 4794 00a8 1046     		mov	r0, r2
 4795 00aa 9847     		blx	r3
 4796              	.LVL0:
 4797 00ac 14E0     		b	.L252
 4798              	.L251:
2227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Reset Tx transfer counter */
2232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount = 0x00U;
 4799              		.loc 1 2232 26
 4800 00ae 7B68     		ldr	r3, [r7, #4]
 4801 00b0 0022     		movs	r2, #0
 4802 00b2 DA84     		strh	r2, [r3, #38]	@ movhi
2233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 145


2234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->gState to Ready */
2235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 4803              		.loc 1 2235 21
 4804 00b4 7B68     		ldr	r3, [r7, #4]
 4805 00b6 2022     		movs	r2, #32
 4806 00b8 83F83D20 		strb	r2, [r3, #61]
2236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
2240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
2241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
2243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
 4807              		.loc 1 2243 7
 4808 00bc 7868     		ldr	r0, [r7, #4]
 4809 00be FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 4810 00c2 09E0     		b	.L252
 4811              	.L247:
2244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Tx transfer counter */
2250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 4812              		.loc 1 2250 24
 4813 00c4 7B68     		ldr	r3, [r7, #4]
 4814 00c6 0022     		movs	r2, #0
 4815 00c8 DA84     		strh	r2, [r3, #38]	@ movhi
2251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 4816              		.loc 1 2253 19
 4817 00ca 7B68     		ldr	r3, [r7, #4]
 4818 00cc 2022     		movs	r2, #32
 4819 00ce 83F83D20 		strb	r2, [r3, #61]
2254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
2258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
2259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
 4820              		.loc 1 2261 5
 4821 00d2 7868     		ldr	r0, [r7, #4]
 4822 00d4 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 4823              	.L252:
2262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 4824              		.loc 1 2265 10
 4825 00d8 0023     		movs	r3, #0
2266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4826              		.loc 1 2266 1
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 146


 4827 00da 1846     		mov	r0, r3
 4828 00dc 3837     		adds	r7, r7, #56
 4829              	.LCFI123:
 4830              		.cfi_def_cfa_offset 8
 4831 00de BD46     		mov	sp, r7
 4832              	.LCFI124:
 4833              		.cfi_def_cfa_register 13
 4834              		@ sp needed
 4835 00e0 80BD     		pop	{r7, pc}
 4836              	.L255:
 4837 00e2 00BF     		.align	2
 4838              	.L254:
 4839 00e4 00000000 		.word	UART_DMATxOnlyAbortCallback
 4840              		.cfi_endproc
 4841              	.LFE239:
 4843              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 4844              		.align	1
 4845              		.global	HAL_UART_AbortReceive_IT
 4846              		.syntax unified
 4847              		.thumb
 4848              		.thumb_func
 4850              	HAL_UART_AbortReceive_IT:
 4851              	.LFB240:
2267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
2273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
2277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4852              		.loc 1 2283 1
 4853              		.cfi_startproc
 4854              		@ args = 0, pretend = 0, frame = 104
 4855              		@ frame_needed = 1, uses_anonymous_args = 0
 4856 0000 80B5     		push	{r7, lr}
 4857              	.LCFI125:
 4858              		.cfi_def_cfa_offset 8
 4859              		.cfi_offset 7, -8
 4860              		.cfi_offset 14, -4
 4861 0002 9AB0     		sub	sp, sp, #104
 4862              	.LCFI126:
 4863              		.cfi_def_cfa_offset 112
 4864 0004 00AF     		add	r7, sp, #0
 4865              	.LCFI127:
 4866              		.cfi_def_cfa_register 7
 4867 0006 7860     		str	r0, [r7, #4]
 4868              	.L259:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 147


 4869              	.LBB479:
2284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 4870              		.loc 1 2285 3 discriminator 1
 4871 0008 7B68     		ldr	r3, [r7, #4]
 4872 000a 1B68     		ldr	r3, [r3]
 4873 000c 0C33     		adds	r3, r3, #12
 4874 000e BB64     		str	r3, [r7, #72]
 4875              	.LBB480:
 4876              	.LBB481:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4877              		.loc 2 1072 4
 4878 0010 BB6C     		ldr	r3, [r7, #72]
 4879              		.syntax unified
 4880              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4881 0012 53E8003F 		ldrex r3, [r3]
 4882              	@ 0 "" 2
 4883              		.thumb
 4884              		.syntax unified
 4885 0016 7B64     		str	r3, [r7, #68]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4886              		.loc 2 1073 10
 4887 0018 7B6C     		ldr	r3, [r7, #68]
 4888              	.LBE481:
 4889              	.LBE480:
 4890              		.loc 1 2285 3 discriminator 1
 4891 001a 23F49073 		bic	r3, r3, #288
 4892 001e 7B66     		str	r3, [r7, #100]
 4893 0020 7B68     		ldr	r3, [r7, #4]
 4894 0022 1B68     		ldr	r3, [r3]
 4895 0024 0C33     		adds	r3, r3, #12
 4896 0026 7A6E     		ldr	r2, [r7, #100]
 4897 0028 7A65     		str	r2, [r7, #84]
 4898 002a 3B65     		str	r3, [r7, #80]
 4899              	.LBB482:
 4900              	.LBB483:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4901              		.loc 2 1123 4
 4902 002c 396D     		ldr	r1, [r7, #80]
 4903 002e 7A6D     		ldr	r2, [r7, #84]
 4904              		.syntax unified
 4905              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4906 0030 41E80023 		strex r3, r2, [r1]
 4907              	@ 0 "" 2
 4908              		.thumb
 4909              		.syntax unified
 4910 0034 FB64     		str	r3, [r7, #76]
 4911              		.loc 2 1124 10
 4912 0036 FB6C     		ldr	r3, [r7, #76]
 4913              	.LBE483:
 4914              	.LBE482:
 4915              		.loc 1 2285 3 discriminator 1
 4916 0038 002B     		cmp	r3, #0
 4917 003a E5D1     		bne	.L259
 4918              	.L262:
 4919              	.LBE479:
 4920              	.LBB484:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 148


2286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4921              		.loc 1 2286 3 discriminator 1
 4922 003c 7B68     		ldr	r3, [r7, #4]
 4923 003e 1B68     		ldr	r3, [r3]
 4924 0040 1433     		adds	r3, r3, #20
 4925 0042 7B63     		str	r3, [r7, #52]
 4926              	.LBB485:
 4927              	.LBB486:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4928              		.loc 2 1072 4
 4929 0044 7B6B     		ldr	r3, [r7, #52]
 4930              		.syntax unified
 4931              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4932 0046 53E8003F 		ldrex r3, [r3]
 4933              	@ 0 "" 2
 4934              		.thumb
 4935              		.syntax unified
 4936 004a 3B63     		str	r3, [r7, #48]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4937              		.loc 2 1073 10
 4938 004c 3B6B     		ldr	r3, [r7, #48]
 4939              	.LBE486:
 4940              	.LBE485:
 4941              		.loc 1 2286 3 discriminator 1
 4942 004e 23F00103 		bic	r3, r3, #1
 4943 0052 3B66     		str	r3, [r7, #96]
 4944 0054 7B68     		ldr	r3, [r7, #4]
 4945 0056 1B68     		ldr	r3, [r3]
 4946 0058 1433     		adds	r3, r3, #20
 4947 005a 3A6E     		ldr	r2, [r7, #96]
 4948 005c 3A64     		str	r2, [r7, #64]
 4949 005e FB63     		str	r3, [r7, #60]
 4950              	.LBB487:
 4951              	.LBB488:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4952              		.loc 2 1123 4
 4953 0060 F96B     		ldr	r1, [r7, #60]
 4954 0062 3A6C     		ldr	r2, [r7, #64]
 4955              		.syntax unified
 4956              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4957 0064 41E80023 		strex r3, r2, [r1]
 4958              	@ 0 "" 2
 4959              		.thumb
 4960              		.syntax unified
 4961 0068 BB63     		str	r3, [r7, #56]
 4962              		.loc 2 1124 10
 4963 006a BB6B     		ldr	r3, [r7, #56]
 4964              	.LBE488:
 4965              	.LBE487:
 4966              		.loc 1 2286 3 discriminator 1
 4967 006c 002B     		cmp	r3, #0
 4968 006e E5D1     		bne	.L262
 4969              	.LBE484:
2287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 4970              		.loc 1 2289 12
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 149


 4971 0070 7B68     		ldr	r3, [r7, #4]
 4972 0072 1B6B     		ldr	r3, [r3, #48]
 4973              		.loc 1 2289 6
 4974 0074 012B     		cmp	r3, #1
 4975 0076 19D1     		bne	.L263
 4976              	.L266:
 4977              	.LBB489:
2290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 4978              		.loc 1 2291 5 discriminator 1
 4979 0078 7B68     		ldr	r3, [r7, #4]
 4980 007a 1B68     		ldr	r3, [r3]
 4981 007c 0C33     		adds	r3, r3, #12
 4982 007e 3B62     		str	r3, [r7, #32]
 4983              	.LBB490:
 4984              	.LBB491:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4985              		.loc 2 1072 4
 4986 0080 3B6A     		ldr	r3, [r7, #32]
 4987              		.syntax unified
 4988              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4989 0082 53E8003F 		ldrex r3, [r3]
 4990              	@ 0 "" 2
 4991              		.thumb
 4992              		.syntax unified
 4993 0086 FB61     		str	r3, [r7, #28]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4994              		.loc 2 1073 10
 4995 0088 FB69     		ldr	r3, [r7, #28]
 4996              	.LBE491:
 4997              	.LBE490:
 4998              		.loc 1 2291 5 discriminator 1
 4999 008a 23F01003 		bic	r3, r3, #16
 5000 008e FB65     		str	r3, [r7, #92]
 5001 0090 7B68     		ldr	r3, [r7, #4]
 5002 0092 1B68     		ldr	r3, [r3]
 5003 0094 0C33     		adds	r3, r3, #12
 5004 0096 FA6D     		ldr	r2, [r7, #92]
 5005 0098 FA62     		str	r2, [r7, #44]
 5006 009a BB62     		str	r3, [r7, #40]
 5007              	.LBB492:
 5008              	.LBB493:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5009              		.loc 2 1123 4
 5010 009c B96A     		ldr	r1, [r7, #40]
 5011 009e FA6A     		ldr	r2, [r7, #44]
 5012              		.syntax unified
 5013              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5014 00a0 41E80023 		strex r3, r2, [r1]
 5015              	@ 0 "" 2
 5016              		.thumb
 5017              		.syntax unified
 5018 00a4 7B62     		str	r3, [r7, #36]
 5019              		.loc 2 1124 10
 5020 00a6 7B6A     		ldr	r3, [r7, #36]
 5021              	.LBE493:
 5022              	.LBE492:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 150


 5023              		.loc 1 2291 5 discriminator 1
 5024 00a8 002B     		cmp	r3, #0
 5025 00aa E5D1     		bne	.L266
 5026              	.L263:
 5027              	.LBE489:
2292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 5028              		.loc 1 2295 7
 5029 00ac 7B68     		ldr	r3, [r7, #4]
 5030 00ae 1B68     		ldr	r3, [r3]
 5031 00b0 5B69     		ldr	r3, [r3, #20]
 5032 00b2 03F04003 		and	r3, r3, #64
 5033              		.loc 1 2295 6
 5034 00b6 402B     		cmp	r3, #64
 5035 00b8 3FD1     		bne	.L267
 5036              	.L270:
 5037              	.LBB494:
2296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 5038              		.loc 1 2297 5 discriminator 1
 5039 00ba 7B68     		ldr	r3, [r7, #4]
 5040 00bc 1B68     		ldr	r3, [r3]
 5041 00be 1433     		adds	r3, r3, #20
 5042 00c0 FB60     		str	r3, [r7, #12]
 5043              	.LBB495:
 5044              	.LBB496:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5045              		.loc 2 1072 4
 5046 00c2 FB68     		ldr	r3, [r7, #12]
 5047              		.syntax unified
 5048              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5049 00c4 53E8003F 		ldrex r3, [r3]
 5050              	@ 0 "" 2
 5051              		.thumb
 5052              		.syntax unified
 5053 00c8 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5054              		.loc 2 1073 10
 5055 00ca BB68     		ldr	r3, [r7, #8]
 5056              	.LBE496:
 5057              	.LBE495:
 5058              		.loc 1 2297 5 discriminator 1
 5059 00cc 23F04003 		bic	r3, r3, #64
 5060 00d0 BB65     		str	r3, [r7, #88]
 5061 00d2 7B68     		ldr	r3, [r7, #4]
 5062 00d4 1B68     		ldr	r3, [r3]
 5063 00d6 1433     		adds	r3, r3, #20
 5064 00d8 BA6D     		ldr	r2, [r7, #88]
 5065 00da BA61     		str	r2, [r7, #24]
 5066 00dc 7B61     		str	r3, [r7, #20]
 5067              	.LBB497:
 5068              	.LBB498:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5069              		.loc 2 1123 4
 5070 00de 7969     		ldr	r1, [r7, #20]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 151


 5071 00e0 BA69     		ldr	r2, [r7, #24]
 5072              		.syntax unified
 5073              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5074 00e2 41E80023 		strex r3, r2, [r1]
 5075              	@ 0 "" 2
 5076              		.thumb
 5077              		.syntax unified
 5078 00e6 3B61     		str	r3, [r7, #16]
 5079              		.loc 2 1124 10
 5080 00e8 3B69     		ldr	r3, [r7, #16]
 5081              	.LBE498:
 5082              	.LBE497:
 5083              		.loc 1 2297 5 discriminator 1
 5084 00ea 002B     		cmp	r3, #0
 5085 00ec E5D1     		bne	.L270
 5086              	.LBE494:
2298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream : use blocking DMA Abort API (no callback) */
2300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 5087              		.loc 1 2300 14
 5088 00ee 7B68     		ldr	r3, [r7, #4]
 5089 00f0 9B6B     		ldr	r3, [r3, #56]
 5090              		.loc 1 2300 8
 5091 00f2 002B     		cmp	r3, #0
 5092 00f4 13D0     		beq	.L271
2301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
 5093              		.loc 1 2304 12
 5094 00f6 7B68     		ldr	r3, [r7, #4]
 5095 00f8 9B6B     		ldr	r3, [r3, #56]
 5096              		.loc 1 2304 40
 5097 00fa 194A     		ldr	r2, .L274
 5098 00fc 1A65     		str	r2, [r3, #80]
2305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA RX */
2307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 5099              		.loc 1 2307 11
 5100 00fe 7B68     		ldr	r3, [r7, #4]
 5101 0100 9B6B     		ldr	r3, [r3, #56]
 5102 0102 1846     		mov	r0, r3
 5103 0104 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5104 0108 0346     		mov	r3, r0
 5105              		.loc 1 2307 10 discriminator 1
 5106 010a 002B     		cmp	r3, #0
 5107 010c 22D0     		beq	.L272
2308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
 5108              		.loc 1 2310 14
 5109 010e 7B68     		ldr	r3, [r7, #4]
 5110 0110 9B6B     		ldr	r3, [r3, #56]
 5111              		.loc 1 2310 22
 5112 0112 1B6D     		ldr	r3, [r3, #80]
 5113              		.loc 1 2310 47
 5114 0114 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 152


 5115 0116 926B     		ldr	r2, [r2, #56]
 5116              		.loc 1 2310 9
 5117 0118 1046     		mov	r0, r2
 5118 011a 9847     		blx	r3
 5119              	.LVL1:
 5120 011c 1AE0     		b	.L272
 5121              	.L271:
2311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Reset Rx transfer counter */
2316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount = 0x00U;
 5122              		.loc 1 2316 26
 5123 011e 7B68     		ldr	r3, [r7, #4]
 5124 0120 0022     		movs	r2, #0
 5125 0122 DA85     		strh	r2, [r3, #46]	@ movhi
2317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 5126              		.loc 1 2319 22
 5127 0124 7B68     		ldr	r3, [r7, #4]
 5128 0126 2022     		movs	r2, #32
 5129 0128 83F83E20 		strb	r2, [r3, #62]
2320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5130              		.loc 1 2320 28
 5131 012c 7B68     		ldr	r3, [r7, #4]
 5132 012e 0022     		movs	r2, #0
 5133 0130 1A63     		str	r2, [r3, #48]
2321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
2328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
 5134              		.loc 1 2328 7
 5135 0132 7868     		ldr	r0, [r7, #4]
 5136 0134 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 5137 0138 0CE0     		b	.L272
 5138              	.L267:
2329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Rx transfer counter */
2335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 5139              		.loc 1 2335 24
 5140 013a 7B68     		ldr	r3, [r7, #4]
 5141 013c 0022     		movs	r2, #0
 5142 013e DA85     		strh	r2, [r3, #46]	@ movhi
2336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 5143              		.loc 1 2338 20
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 153


 5144 0140 7B68     		ldr	r3, [r7, #4]
 5145 0142 2022     		movs	r2, #32
 5146 0144 83F83E20 		strb	r2, [r3, #62]
2339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5147              		.loc 1 2339 26
 5148 0148 7B68     		ldr	r3, [r7, #4]
 5149 014a 0022     		movs	r2, #0
 5150 014c 1A63     		str	r2, [r3, #48]
2340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
 5151              		.loc 1 2347 5
 5152 014e 7868     		ldr	r0, [r7, #4]
 5153 0150 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 5154              	.L272:
2348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 5155              		.loc 1 2351 10
 5156 0154 0023     		movs	r3, #0
2352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5157              		.loc 1 2352 1
 5158 0156 1846     		mov	r0, r3
 5159 0158 6837     		adds	r7, r7, #104
 5160              	.LCFI128:
 5161              		.cfi_def_cfa_offset 8
 5162 015a BD46     		mov	sp, r7
 5163              	.LCFI129:
 5164              		.cfi_def_cfa_register 13
 5165              		@ sp needed
 5166 015c 80BD     		pop	{r7, pc}
 5167              	.L275:
 5168 015e 00BF     		.align	2
 5169              	.L274:
 5170 0160 00000000 		.word	UART_DMARxOnlyAbortCallback
 5171              		.cfi_endproc
 5172              	.LFE240:
 5174              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 5175              		.align	1
 5176              		.global	HAL_UART_IRQHandler
 5177              		.syntax unified
 5178              		.thumb
 5179              		.thumb_func
 5181              	HAL_UART_IRQHandler:
 5182              	.LFB241:
2353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART interrupt request.
2356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 154


2359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5183              		.loc 1 2361 1
 5184              		.cfi_startproc
 5185              		@ args = 0, pretend = 0, frame = 232
 5186              		@ frame_needed = 1, uses_anonymous_args = 0
 5187 0000 80B5     		push	{r7, lr}
 5188              	.LCFI130:
 5189              		.cfi_def_cfa_offset 8
 5190              		.cfi_offset 7, -8
 5191              		.cfi_offset 14, -4
 5192 0002 BAB0     		sub	sp, sp, #232
 5193              	.LCFI131:
 5194              		.cfi_def_cfa_offset 240
 5195 0004 00AF     		add	r7, sp, #0
 5196              	.LCFI132:
 5197              		.cfi_def_cfa_register 7
 5198 0006 7860     		str	r0, [r7, #4]
2362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->SR);
 5199              		.loc 1 2362 25
 5200 0008 7B68     		ldr	r3, [r7, #4]
 5201 000a 1B68     		ldr	r3, [r3]
 5202              		.loc 1 2362 12
 5203 000c 1B68     		ldr	r3, [r3]
 5204 000e C7F8E430 		str	r3, [r7, #228]
2363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 5205              		.loc 1 2363 25
 5206 0012 7B68     		ldr	r3, [r7, #4]
 5207 0014 1B68     		ldr	r3, [r3]
 5208              		.loc 1 2363 12
 5209 0016 DB68     		ldr	r3, [r3, #12]
 5210 0018 C7F8E030 		str	r3, [r7, #224]
2364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 5211              		.loc 1 2364 25
 5212 001c 7B68     		ldr	r3, [r7, #4]
 5213 001e 1B68     		ldr	r3, [r3]
 5214              		.loc 1 2364 12
 5215 0020 5B69     		ldr	r3, [r3, #20]
 5216 0022 C7F8DC30 		str	r3, [r7, #220]
2365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t errorflags = 0x00U;
 5217              		.loc 1 2365 12
 5218 0026 0023     		movs	r3, #0
 5219 0028 C7F8D830 		str	r3, [r7, #216]
2366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 5220              		.loc 1 2366 12
 5221 002c 0023     		movs	r3, #0
 5222 002e C7F8D430 		str	r3, [r7, #212]
2367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If no error occurs */
2369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
 5223              		.loc 1 2369 14
 5224 0032 D7F8E430 		ldr	r3, [r7, #228]
 5225 0036 03F00F03 		and	r3, r3, #15
 5226 003a C7F8D830 		str	r3, [r7, #216]
2370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (errorflags == RESET)
 5227              		.loc 1 2370 6
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 155


 5228 003e D7F8D830 		ldr	r3, [r7, #216]
 5229 0042 002B     		cmp	r3, #0
 5230 0044 0FD1     		bne	.L277
2371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART in mode Receiver -------------------------------------------------*/
2373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 5231              		.loc 1 2373 20
 5232 0046 D7F8E430 		ldr	r3, [r7, #228]
 5233 004a 03F02003 		and	r3, r3, #32
 5234              		.loc 1 2373 8
 5235 004e 002B     		cmp	r3, #0
 5236 0050 09D0     		beq	.L277
 5237              		.loc 1 2373 59 discriminator 1
 5238 0052 D7F8E030 		ldr	r3, [r7, #224]
 5239 0056 03F02003 		and	r3, r3, #32
 5240              		.loc 1 2373 47 discriminator 1
 5241 005a 002B     		cmp	r3, #0
 5242 005c 03D0     		beq	.L277
2374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       UART_Receive_IT(huart);
 5243              		.loc 1 2375 7
 5244 005e 7868     		ldr	r0, [r7, #4]
 5245 0060 FFF7FEFF 		bl	UART_Receive_IT
2376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
 5246              		.loc 1 2376 7
 5247 0064 56E2     		b	.L276
 5248              	.L277:
2377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If some errors occur */
2381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET)
 5249              		.loc 1 2381 6
 5250 0066 D7F8D830 		ldr	r3, [r7, #216]
 5251 006a 002B     		cmp	r3, #0
 5252 006c 00F0DE80 		beq	.L279
 5253              		.loc 1 2381 42 discriminator 1
 5254 0070 D7F8DC30 		ldr	r3, [r7, #220]
 5255 0074 03F00103 		and	r3, r3, #1
 5256              		.loc 1 2381 29 discriminator 1
 5257 0078 002B     		cmp	r3, #0
 5258 007a 06D1     		bne	.L280
2382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                 || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
 5259              		.loc 1 2382 45
 5260 007c D7F8E030 		ldr	r3, [r7, #224]
 5261 0080 03F49073 		and	r3, r3, #288
 5262              		.loc 1 2382 33
 5263 0084 002B     		cmp	r3, #0
 5264 0086 00F0D180 		beq	.L279
 5265              	.L280:
2383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART parity error interrupt occurred ----------------------------------*/
2385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 5266              		.loc 1 2385 20
 5267 008a D7F8E430 		ldr	r3, [r7, #228]
 5268 008e 03F00103 		and	r3, r3, #1
 5269              		.loc 1 2385 8
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 156


 5270 0092 002B     		cmp	r3, #0
 5271 0094 0BD0     		beq	.L281
 5272              		.loc 1 2385 57 discriminator 1
 5273 0096 D7F8E030 		ldr	r3, [r7, #224]
 5274 009a 03F48073 		and	r3, r3, #256
 5275              		.loc 1 2385 45 discriminator 1
 5276 009e 002B     		cmp	r3, #0
 5277 00a0 05D0     		beq	.L281
2386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
 5278              		.loc 1 2387 12
 5279 00a2 7B68     		ldr	r3, [r7, #4]
 5280 00a4 1B6C     		ldr	r3, [r3, #64]
 5281              		.loc 1 2387 24
 5282 00a6 43F00102 		orr	r2, r3, #1
 5283 00aa 7B68     		ldr	r3, [r7, #4]
 5284 00ac 1A64     		str	r2, [r3, #64]
 5285              	.L281:
2388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART noise error interrupt occurred -----------------------------------*/
2391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 5286              		.loc 1 2391 20
 5287 00ae D7F8E430 		ldr	r3, [r7, #228]
 5288 00b2 03F00403 		and	r3, r3, #4
 5289              		.loc 1 2391 8
 5290 00b6 002B     		cmp	r3, #0
 5291 00b8 0BD0     		beq	.L282
 5292              		.loc 1 2391 57 discriminator 1
 5293 00ba D7F8DC30 		ldr	r3, [r7, #220]
 5294 00be 03F00103 		and	r3, r3, #1
 5295              		.loc 1 2391 45 discriminator 1
 5296 00c2 002B     		cmp	r3, #0
 5297 00c4 05D0     		beq	.L282
2392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
 5298              		.loc 1 2393 12
 5299 00c6 7B68     		ldr	r3, [r7, #4]
 5300 00c8 1B6C     		ldr	r3, [r3, #64]
 5301              		.loc 1 2393 24
 5302 00ca 43F00202 		orr	r2, r3, #2
 5303 00ce 7B68     		ldr	r3, [r7, #4]
 5304 00d0 1A64     		str	r2, [r3, #64]
 5305              	.L282:
2394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART frame error interrupt occurred -----------------------------------*/
2397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 5306              		.loc 1 2397 20
 5307 00d2 D7F8E430 		ldr	r3, [r7, #228]
 5308 00d6 03F00203 		and	r3, r3, #2
 5309              		.loc 1 2397 8
 5310 00da 002B     		cmp	r3, #0
 5311 00dc 0BD0     		beq	.L283
 5312              		.loc 1 2397 57 discriminator 1
 5313 00de D7F8DC30 		ldr	r3, [r7, #220]
 5314 00e2 03F00103 		and	r3, r3, #1
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 157


 5315              		.loc 1 2397 45 discriminator 1
 5316 00e6 002B     		cmp	r3, #0
 5317 00e8 05D0     		beq	.L283
2398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
 5318              		.loc 1 2399 12
 5319 00ea 7B68     		ldr	r3, [r7, #4]
 5320 00ec 1B6C     		ldr	r3, [r3, #64]
 5321              		.loc 1 2399 24
 5322 00ee 43F00402 		orr	r2, r3, #4
 5323 00f2 7B68     		ldr	r3, [r7, #4]
 5324 00f4 1A64     		str	r2, [r3, #64]
 5325              	.L283:
2400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART Over-Run interrupt occurred --------------------------------------*/
2403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_ORE) != RESET) && (((cr1its & USART_CR1_RXNEIE) != RESET)
 5326              		.loc 1 2403 20
 5327 00f6 D7F8E430 		ldr	r3, [r7, #228]
 5328 00fa 03F00803 		and	r3, r3, #8
 5329              		.loc 1 2403 8
 5330 00fe 002B     		cmp	r3, #0
 5331 0100 11D0     		beq	.L284
 5332              		.loc 1 2403 59 discriminator 1
 5333 0102 D7F8E030 		ldr	r3, [r7, #224]
 5334 0106 03F02003 		and	r3, r3, #32
 5335              		.loc 1 2403 46 discriminator 1
 5336 010a 002B     		cmp	r3, #0
 5337 010c 05D1     		bne	.L285
2404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                                  || ((cr3its & USART_CR3_EIE) != RESET)))
 5338              		.loc 1 2404 62
 5339 010e D7F8DC30 		ldr	r3, [r7, #220]
 5340 0112 03F00103 		and	r3, r3, #1
 5341              		.loc 1 2404 50
 5342 0116 002B     		cmp	r3, #0
 5343 0118 05D0     		beq	.L284
 5344              	.L285:
2405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
 5345              		.loc 1 2406 12
 5346 011a 7B68     		ldr	r3, [r7, #4]
 5347 011c 1B6C     		ldr	r3, [r3, #64]
 5348              		.loc 1 2406 24
 5349 011e 43F00802 		orr	r2, r3, #8
 5350 0122 7B68     		ldr	r3, [r7, #4]
 5351 0124 1A64     		str	r2, [r3, #64]
 5352              	.L284:
2407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
2410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 5353              		.loc 1 2410 14
 5354 0126 7B68     		ldr	r3, [r7, #4]
 5355 0128 1B6C     		ldr	r3, [r3, #64]
 5356              		.loc 1 2410 8
 5357 012a 002B     		cmp	r3, #0
 5358 012c 00F0ED81 		beq	.L323
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 158


2411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART in mode Receiver -----------------------------------------------*/
2413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 5359              		.loc 1 2413 22
 5360 0130 D7F8E430 		ldr	r3, [r7, #228]
 5361 0134 03F02003 		and	r3, r3, #32
 5362              		.loc 1 2413 10
 5363 0138 002B     		cmp	r3, #0
 5364 013a 08D0     		beq	.L287
 5365              		.loc 1 2413 61 discriminator 1
 5366 013c D7F8E030 		ldr	r3, [r7, #224]
 5367 0140 03F02003 		and	r3, r3, #32
 5368              		.loc 1 2413 49 discriminator 1
 5369 0144 002B     		cmp	r3, #0
 5370 0146 02D0     		beq	.L287
2414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_Receive_IT(huart);
 5371              		.loc 1 2415 9
 5372 0148 7868     		ldr	r0, [r7, #4]
 5373 014a FFF7FEFF 		bl	UART_Receive_IT
 5374              	.L287:
2416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
2419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          consider error as blocking */
2420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 5375              		.loc 1 2420 20
 5376 014e 7B68     		ldr	r3, [r7, #4]
 5377 0150 1B68     		ldr	r3, [r3]
 5378 0152 5B69     		ldr	r3, [r3, #20]
 5379 0154 03F04003 		and	r3, r3, #64
 5380 0158 402B     		cmp	r3, #64
 5381 015a 0CBF     		ite	eq
 5382 015c 0123     		moveq	r3, #1
 5383 015e 0023     		movne	r3, #0
 5384 0160 DBB2     		uxtb	r3, r3
 5385              		.loc 1 2420 18
 5386 0162 C7F8D430 		str	r3, [r7, #212]
2421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 5387              		.loc 1 2421 18
 5388 0166 7B68     		ldr	r3, [r7, #4]
 5389 0168 1B6C     		ldr	r3, [r3, #64]
 5390              		.loc 1 2421 30
 5391 016a 03F00803 		and	r3, r3, #8
 5392              		.loc 1 2421 10
 5393 016e 002B     		cmp	r3, #0
 5394 0170 03D1     		bne	.L288
 5395              		.loc 1 2421 62 discriminator 1
 5396 0172 D7F8D430 		ldr	r3, [r7, #212]
 5397 0176 002B     		cmp	r3, #0
 5398 0178 4FD0     		beq	.L289
 5399              	.L288:
2422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_EndRxTransfer(huart);
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 159


 5400              		.loc 1 2426 9
 5401 017a 7868     		ldr	r0, [r7, #4]
 5402 017c FFF7FEFF 		bl	UART_EndRxTransfer
2427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 5403              		.loc 1 2429 13
 5404 0180 7B68     		ldr	r3, [r7, #4]
 5405 0182 1B68     		ldr	r3, [r3]
 5406 0184 5B69     		ldr	r3, [r3, #20]
 5407 0186 03F04003 		and	r3, r3, #64
 5408              		.loc 1 2429 12
 5409 018a 402B     		cmp	r3, #64
 5410 018c 41D1     		bne	.L290
 5411              	.L293:
 5412              	.LBB499:
2430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 5413              		.loc 1 2431 11 discriminator 1
 5414 018e 7B68     		ldr	r3, [r7, #4]
 5415 0190 1B68     		ldr	r3, [r3]
 5416 0192 1433     		adds	r3, r3, #20
 5417 0194 C7F89C30 		str	r3, [r7, #156]
 5418              	.LBB500:
 5419              	.LBB501:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5420              		.loc 2 1072 4
 5421 0198 D7F89C30 		ldr	r3, [r7, #156]
 5422              		.syntax unified
 5423              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5424 019c 53E8003F 		ldrex r3, [r3]
 5425              	@ 0 "" 2
 5426              		.thumb
 5427              		.syntax unified
 5428 01a0 C7F89830 		str	r3, [r7, #152]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5429              		.loc 2 1073 10
 5430 01a4 D7F89830 		ldr	r3, [r7, #152]
 5431              	.LBE501:
 5432              	.LBE500:
 5433              		.loc 1 2431 11 discriminator 1
 5434 01a8 23F04003 		bic	r3, r3, #64
 5435 01ac C7F8D030 		str	r3, [r7, #208]
 5436 01b0 7B68     		ldr	r3, [r7, #4]
 5437 01b2 1B68     		ldr	r3, [r3]
 5438 01b4 1433     		adds	r3, r3, #20
 5439 01b6 D7F8D020 		ldr	r2, [r7, #208]
 5440 01ba C7F8A820 		str	r2, [r7, #168]
 5441 01be C7F8A430 		str	r3, [r7, #164]
 5442              	.LBB502:
 5443              	.LBB503:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5444              		.loc 2 1123 4
 5445 01c2 D7F8A410 		ldr	r1, [r7, #164]
 5446 01c6 D7F8A820 		ldr	r2, [r7, #168]
 5447              		.syntax unified
 5448              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 160


 5449 01ca 41E80023 		strex r3, r2, [r1]
 5450              	@ 0 "" 2
 5451              		.thumb
 5452              		.syntax unified
 5453 01ce C7F8A030 		str	r3, [r7, #160]
 5454              		.loc 2 1124 10
 5455 01d2 D7F8A030 		ldr	r3, [r7, #160]
 5456              	.LBE503:
 5457              	.LBE502:
 5458              		.loc 1 2431 11 discriminator 1
 5459 01d6 002B     		cmp	r3, #0
 5460 01d8 D9D1     		bne	.L293
 5461              	.LBE499:
2432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Abort the UART DMA Rx stream */
2434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           if (huart->hdmarx != NULL)
 5462              		.loc 1 2434 20
 5463 01da 7B68     		ldr	r3, [r7, #4]
 5464 01dc 9B6B     		ldr	r3, [r3, #56]
 5465              		.loc 1 2434 14
 5466 01de 002B     		cmp	r3, #0
 5467 01e0 13D0     		beq	.L294
2435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
2436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 5468              		.loc 1 2438 18
 5469 01e2 7B68     		ldr	r3, [r7, #4]
 5470 01e4 9B6B     		ldr	r3, [r3, #56]
 5471              		.loc 1 2438 46
 5472 01e6 7D4A     		ldr	r2, .L327
 5473 01e8 1A65     		str	r2, [r3, #80]
2439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 5474              		.loc 1 2439 17
 5475 01ea 7B68     		ldr	r3, [r7, #4]
 5476 01ec 9B6B     		ldr	r3, [r3, #56]
 5477 01ee 1846     		mov	r0, r3
 5478 01f0 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5479 01f4 0346     		mov	r3, r0
 5480              		.loc 1 2439 16 discriminator 1
 5481 01f6 002B     		cmp	r3, #0
 5482 01f8 16D0     		beq	.L324
2440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             {
2441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               /* Call Directly XferAbortCallback function in case of error */
2442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
 5483              		.loc 1 2442 20
 5484 01fa 7B68     		ldr	r3, [r7, #4]
 5485 01fc 9B6B     		ldr	r3, [r3, #56]
 5486              		.loc 1 2442 28
 5487 01fe 1B6D     		ldr	r3, [r3, #80]
 5488              		.loc 1 2442 53
 5489 0200 7A68     		ldr	r2, [r7, #4]
 5490 0202 926B     		ldr	r2, [r2, #56]
 5491              		.loc 1 2442 15
 5492 0204 1046     		mov	r0, r2
 5493 0206 9847     		blx	r3
 5494              	.LVL2:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 161


2429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 5495              		.loc 1 2429 12
 5496 0208 0EE0     		b	.L324
 5497              	.L294:
2443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             }
2444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
2445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           else
2446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
2447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Call user error callback */
2448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /*Call registered error callback*/
2450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             huart->ErrorCallback(huart);
2451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /*Call legacy weak error callback*/
2453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
 5498              		.loc 1 2453 13
 5499 020a 7868     		ldr	r0, [r7, #4]
 5500 020c FFF7FEFF 		bl	HAL_UART_ErrorCallback
2429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 5501              		.loc 1 2429 12
 5502 0210 0AE0     		b	.L324
 5503              	.L290:
2454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
2456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
2458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Call user error callback */
2460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /*Call registered error callback*/
2462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCallback(huart);
2463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /*Call legacy weak error callback*/
2465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 5504              		.loc 1 2465 11
 5505 0212 7868     		ldr	r0, [r7, #4]
 5506 0214 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 5507              		.loc 1 2429 12
 5508 0218 06E0     		b	.L324
 5509              	.L289:
2466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Error is notified to user through user error callback */
2473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call registered error callback*/
2475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCallback(huart);
2476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call legacy weak error callback*/
2478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
 5510              		.loc 1 2478 9
 5511 021a 7868     		ldr	r0, [r7, #4]
 5512 021c FFF7FEFF 		bl	HAL_UART_ErrorCallback
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 162


2479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 5513              		.loc 1 2481 26
 5514 0220 7B68     		ldr	r3, [r7, #4]
 5515 0222 0022     		movs	r2, #0
 5516 0224 1A64     		str	r2, [r3, #64]
2482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 5517              		.loc 1 2484 5
 5518 0226 70E1     		b	.L323
 5519              	.L324:
2429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 5520              		.loc 1 2429 12
 5521 0228 00BF     		nop
 5522              		.loc 1 2484 5
 5523 022a 6EE1     		b	.L323
 5524              	.L279:
2485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   } /* End if some error occurs */
2486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check current reception Mode :
2488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      If Reception till IDLE event has been selected : */
2489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 5525              		.loc 1 2489 13
 5526 022c 7B68     		ldr	r3, [r7, #4]
 5527 022e 1B6B     		ldr	r3, [r3, #48]
 5528              		.loc 1 2489 6
 5529 0230 012B     		cmp	r3, #1
 5530 0232 40F04A81 		bne	.L296
2490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       && ((isrflags & USART_SR_IDLE) != 0U)
 5531              		.loc 1 2490 21
 5532 0236 D7F8E430 		ldr	r3, [r7, #228]
 5533 023a 03F01003 		and	r3, r3, #16
 5534              		.loc 1 2490 7
 5535 023e 002B     		cmp	r3, #0
 5536 0240 00F04381 		beq	.L296
2491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       && ((cr1its & USART_SR_IDLE) != 0U))
 5537              		.loc 1 2491 19
 5538 0244 D7F8E030 		ldr	r3, [r7, #224]
 5539 0248 03F01003 		and	r3, r3, #16
 5540              		.loc 1 2491 7
 5541 024c 002B     		cmp	r3, #0
 5542 024e 00F03C81 		beq	.L296
 5543              	.LBB504:
2492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_IDLEFLAG(huart);
 5544              		.loc 1 2493 5
 5545 0252 0023     		movs	r3, #0
 5546 0254 BB60     		str	r3, [r7, #8]
 5547 0256 7B68     		ldr	r3, [r7, #4]
 5548 0258 1B68     		ldr	r3, [r3]
 5549 025a 1B68     		ldr	r3, [r3]
 5550 025c BB60     		str	r3, [r7, #8]
 5551 025e 7B68     		ldr	r3, [r7, #4]
 5552 0260 1B68     		ldr	r3, [r3]
 5553 0262 5B68     		ldr	r3, [r3, #4]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 163


 5554 0264 BB60     		str	r3, [r7, #8]
 5555 0266 BB68     		ldr	r3, [r7, #8]
 5556              	.LBE504:
2494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check if DMA mode is enabled in UART */
2496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 5557              		.loc 1 2496 9
 5558 0268 7B68     		ldr	r3, [r7, #4]
 5559 026a 1B68     		ldr	r3, [r3]
 5560 026c 5B69     		ldr	r3, [r3, #20]
 5561 026e 03F04003 		and	r3, r3, #64
 5562              		.loc 1 2496 8
 5563 0272 402B     		cmp	r3, #64
 5564 0274 40F0B480 		bne	.L297
 5565              	.LBB505:
2497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* DMA mode enabled */
2499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing,
2500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          (DMA cplt callback will be called).
2501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 5566              		.loc 1 2502 50
 5567 0278 7B68     		ldr	r3, [r7, #4]
 5568 027a 9B6B     		ldr	r3, [r3, #56]
 5569 027c 1B68     		ldr	r3, [r3]
 5570 027e 5B68     		ldr	r3, [r3, #4]
 5571              		.loc 1 2502 16
 5572 0280 A7F8BE30 		strh	r3, [r7, #190]	@ movhi
2503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if ((nb_remaining_rx_data > 0U)
 5573              		.loc 1 2503 10
 5574 0284 B7F8BE30 		ldrh	r3, [r7, #190]
 5575 0288 002B     		cmp	r3, #0
 5576 028a 00F04081 		beq	.L325
2504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           && (nb_remaining_rx_data < huart->RxXferSize))
 5577              		.loc 1 2504 43
 5578 028e 7B68     		ldr	r3, [r7, #4]
 5579 0290 9B8D     		ldrh	r3, [r3, #44]
 5580              		.loc 1 2504 11
 5581 0292 B7F8BE20 		ldrh	r2, [r7, #190]
 5582 0296 9A42     		cmp	r2, r3
 5583 0298 80F03981 		bcs	.L325
2505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Reception is not complete */
2507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxXferCount = nb_remaining_rx_data;
 5584              		.loc 1 2507 28
 5585 029c 7B68     		ldr	r3, [r7, #4]
 5586 029e B7F8BE20 		ldrh	r2, [r7, #190]	@ movhi
 5587 02a2 DA85     		strh	r2, [r3, #46]	@ movhi
2508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* In Normal mode, end DMA xfer and HAL UART Rx process*/
2510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 5588              		.loc 1 2510 18
 5589 02a4 7B68     		ldr	r3, [r7, #4]
 5590 02a6 9B6B     		ldr	r3, [r3, #56]
 5591              		.loc 1 2510 32
 5592 02a8 DB69     		ldr	r3, [r3, #28]
 5593              		.loc 1 2510 12
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 164


 5594 02aa B3F5807F 		cmp	r3, #256
 5595 02ae 00F08880 		beq	.L299
 5596              	.L302:
 5597              	.LBB506:
2511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 5598              		.loc 1 2513 11 discriminator 1
 5599 02b2 7B68     		ldr	r3, [r7, #4]
 5600 02b4 1B68     		ldr	r3, [r3]
 5601 02b6 0C33     		adds	r3, r3, #12
 5602 02b8 C7F88830 		str	r3, [r7, #136]
 5603              	.LBB507:
 5604              	.LBB508:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5605              		.loc 2 1072 4
 5606 02bc D7F88830 		ldr	r3, [r7, #136]
 5607              		.syntax unified
 5608              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5609 02c0 53E8003F 		ldrex r3, [r3]
 5610              	@ 0 "" 2
 5611              		.thumb
 5612              		.syntax unified
 5613 02c4 C7F88430 		str	r3, [r7, #132]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5614              		.loc 2 1073 10
 5615 02c8 D7F88430 		ldr	r3, [r7, #132]
 5616              	.LBE508:
 5617              	.LBE507:
 5618              		.loc 1 2513 11 discriminator 1
 5619 02cc 23F48073 		bic	r3, r3, #256
 5620 02d0 C7F8B830 		str	r3, [r7, #184]
 5621 02d4 7B68     		ldr	r3, [r7, #4]
 5622 02d6 1B68     		ldr	r3, [r3]
 5623 02d8 0C33     		adds	r3, r3, #12
 5624 02da D7F8B820 		ldr	r2, [r7, #184]
 5625 02de C7F89420 		str	r2, [r7, #148]
 5626 02e2 C7F89030 		str	r3, [r7, #144]
 5627              	.LBB509:
 5628              	.LBB510:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5629              		.loc 2 1123 4
 5630 02e6 D7F89010 		ldr	r1, [r7, #144]
 5631 02ea D7F89420 		ldr	r2, [r7, #148]
 5632              		.syntax unified
 5633              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5634 02ee 41E80023 		strex r3, r2, [r1]
 5635              	@ 0 "" 2
 5636              		.thumb
 5637              		.syntax unified
 5638 02f2 C7F88C30 		str	r3, [r7, #140]
 5639              		.loc 2 1124 10
 5640 02f6 D7F88C30 		ldr	r3, [r7, #140]
 5641              	.LBE510:
 5642              	.LBE509:
 5643              		.loc 1 2513 11 discriminator 1
 5644 02fa 002B     		cmp	r3, #0
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 165


 5645 02fc D9D1     		bne	.L302
 5646              	.L305:
 5647              	.LBE506:
 5648              	.LBB511:
2514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5649              		.loc 1 2514 11 discriminator 1
 5650 02fe 7B68     		ldr	r3, [r7, #4]
 5651 0300 1B68     		ldr	r3, [r3]
 5652 0302 1433     		adds	r3, r3, #20
 5653 0304 7B67     		str	r3, [r7, #116]
 5654              	.LBB512:
 5655              	.LBB513:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5656              		.loc 2 1072 4
 5657 0306 7B6F     		ldr	r3, [r7, #116]
 5658              		.syntax unified
 5659              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5660 0308 53E8003F 		ldrex r3, [r3]
 5661              	@ 0 "" 2
 5662              		.thumb
 5663              		.syntax unified
 5664 030c 3B67     		str	r3, [r7, #112]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5665              		.loc 2 1073 10
 5666 030e 3B6F     		ldr	r3, [r7, #112]
 5667              	.LBE513:
 5668              	.LBE512:
 5669              		.loc 1 2514 11 discriminator 1
 5670 0310 23F00103 		bic	r3, r3, #1
 5671 0314 C7F8B430 		str	r3, [r7, #180]
 5672 0318 7B68     		ldr	r3, [r7, #4]
 5673 031a 1B68     		ldr	r3, [r3]
 5674 031c 1433     		adds	r3, r3, #20
 5675 031e D7F8B420 		ldr	r2, [r7, #180]
 5676 0322 C7F88020 		str	r2, [r7, #128]
 5677 0326 FB67     		str	r3, [r7, #124]
 5678              	.LBB514:
 5679              	.LBB515:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5680              		.loc 2 1123 4
 5681 0328 F96F     		ldr	r1, [r7, #124]
 5682 032a D7F88020 		ldr	r2, [r7, #128]
 5683              		.syntax unified
 5684              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5685 032e 41E80023 		strex r3, r2, [r1]
 5686              	@ 0 "" 2
 5687              		.thumb
 5688              		.syntax unified
 5689 0332 BB67     		str	r3, [r7, #120]
 5690              		.loc 2 1124 10
 5691 0334 BB6F     		ldr	r3, [r7, #120]
 5692              	.LBE515:
 5693              	.LBE514:
 5694              		.loc 1 2514 11 discriminator 1
 5695 0336 002B     		cmp	r3, #0
 5696 0338 E1D1     		bne	.L305
 5697              	.L308:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 166


 5698              	.LBE511:
 5699              	.LBB516:
2515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              in the UART CR3 register */
2518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 5700              		.loc 1 2518 11 discriminator 1
 5701 033a 7B68     		ldr	r3, [r7, #4]
 5702 033c 1B68     		ldr	r3, [r3]
 5703 033e 1433     		adds	r3, r3, #20
 5704 0340 3B66     		str	r3, [r7, #96]
 5705              	.LBB517:
 5706              	.LBB518:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5707              		.loc 2 1072 4
 5708 0342 3B6E     		ldr	r3, [r7, #96]
 5709              		.syntax unified
 5710              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5711 0344 53E8003F 		ldrex r3, [r3]
 5712              	@ 0 "" 2
 5713              		.thumb
 5714              		.syntax unified
 5715 0348 FB65     		str	r3, [r7, #92]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5716              		.loc 2 1073 10
 5717 034a FB6D     		ldr	r3, [r7, #92]
 5718              	.LBE518:
 5719              	.LBE517:
 5720              		.loc 1 2518 11 discriminator 1
 5721 034c 23F04003 		bic	r3, r3, #64
 5722 0350 C7F8B030 		str	r3, [r7, #176]
 5723 0354 7B68     		ldr	r3, [r7, #4]
 5724 0356 1B68     		ldr	r3, [r3]
 5725 0358 1433     		adds	r3, r3, #20
 5726 035a D7F8B020 		ldr	r2, [r7, #176]
 5727 035e FA66     		str	r2, [r7, #108]
 5728 0360 BB66     		str	r3, [r7, #104]
 5729              	.LBB519:
 5730              	.LBB520:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5731              		.loc 2 1123 4
 5732 0362 B96E     		ldr	r1, [r7, #104]
 5733 0364 FA6E     		ldr	r2, [r7, #108]
 5734              		.syntax unified
 5735              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5736 0366 41E80023 		strex r3, r2, [r1]
 5737              	@ 0 "" 2
 5738              		.thumb
 5739              		.syntax unified
 5740 036a 7B66     		str	r3, [r7, #100]
 5741              		.loc 2 1124 10
 5742 036c 7B6E     		ldr	r3, [r7, #100]
 5743              	.LBE520:
 5744              	.LBE519:
 5745              		.loc 1 2518 11 discriminator 1
 5746 036e 002B     		cmp	r3, #0
 5747 0370 E3D1     		bne	.L308
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 167


 5748              	.LBE516:
2519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* At end of Rx process, restore huart->RxState to Ready */
2521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 5749              		.loc 1 2521 26
 5750 0372 7B68     		ldr	r3, [r7, #4]
 5751 0374 2022     		movs	r2, #32
 5752 0376 83F83E20 		strb	r2, [r3, #62]
2522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5753              		.loc 1 2522 32
 5754 037a 7B68     		ldr	r3, [r7, #4]
 5755 037c 0022     		movs	r2, #0
 5756 037e 1A63     		str	r2, [r3, #48]
 5757              	.L311:
 5758              	.LBB521:
2523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 5759              		.loc 1 2524 11 discriminator 1
 5760 0380 7B68     		ldr	r3, [r7, #4]
 5761 0382 1B68     		ldr	r3, [r3]
 5762 0384 0C33     		adds	r3, r3, #12
 5763 0386 FB64     		str	r3, [r7, #76]
 5764              	.LBB522:
 5765              	.LBB523:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5766              		.loc 2 1072 4
 5767 0388 FB6C     		ldr	r3, [r7, #76]
 5768              		.syntax unified
 5769              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5770 038a 53E8003F 		ldrex r3, [r3]
 5771              	@ 0 "" 2
 5772              		.thumb
 5773              		.syntax unified
 5774 038e BB64     		str	r3, [r7, #72]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5775              		.loc 2 1073 10
 5776 0390 BB6C     		ldr	r3, [r7, #72]
 5777              	.LBE523:
 5778              	.LBE522:
 5779              		.loc 1 2524 11 discriminator 1
 5780 0392 23F01003 		bic	r3, r3, #16
 5781 0396 C7F8AC30 		str	r3, [r7, #172]
 5782 039a 7B68     		ldr	r3, [r7, #4]
 5783 039c 1B68     		ldr	r3, [r3]
 5784 039e 0C33     		adds	r3, r3, #12
 5785 03a0 D7F8AC20 		ldr	r2, [r7, #172]
 5786 03a4 BA65     		str	r2, [r7, #88]
 5787 03a6 7B65     		str	r3, [r7, #84]
 5788              	.LBB524:
 5789              	.LBB525:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5790              		.loc 2 1123 4
 5791 03a8 796D     		ldr	r1, [r7, #84]
 5792 03aa BA6D     		ldr	r2, [r7, #88]
 5793              		.syntax unified
 5794              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5795 03ac 41E80023 		strex r3, r2, [r1]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 168


 5796              	@ 0 "" 2
 5797              		.thumb
 5798              		.syntax unified
 5799 03b0 3B65     		str	r3, [r7, #80]
 5800              		.loc 2 1124 10
 5801 03b2 3B6D     		ldr	r3, [r7, #80]
 5802              	.LBE525:
 5803              	.LBE524:
 5804              		.loc 1 2524 11 discriminator 1
 5805 03b4 002B     		cmp	r3, #0
 5806 03b6 E3D1     		bne	.L311
 5807              	.LBE521:
2525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Last bytes received, so no need as the abort is immediate */
2527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           (void)HAL_DMA_Abort(huart->hdmarx);
 5808              		.loc 1 2527 17
 5809 03b8 7B68     		ldr	r3, [r7, #4]
 5810 03ba 9B6B     		ldr	r3, [r3, #56]
 5811 03bc 1846     		mov	r0, r3
 5812 03be FFF7FEFF 		bl	HAL_DMA_Abort
 5813              	.L299:
2528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call registered Rx Event callback*/
2531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
2532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 5814              		.loc 1 2534 49
 5815 03c2 7B68     		ldr	r3, [r7, #4]
 5816 03c4 9A8D     		ldrh	r2, [r3, #44]
 5817              		.loc 1 2534 69
 5818 03c6 7B68     		ldr	r3, [r7, #4]
 5819 03c8 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 5820 03ca 9BB2     		uxth	r3, r3
 5821              		.loc 1 2534 9
 5822 03cc D31A     		subs	r3, r2, r3
 5823 03ce 9BB2     		uxth	r3, r3
 5824 03d0 1946     		mov	r1, r3
 5825 03d2 7868     		ldr	r0, [r7, #4]
 5826 03d4 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
2535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
 5827              		.loc 1 2537 7
 5828 03d8 99E0     		b	.L325
 5829              	.L328:
 5830 03da 00BF     		.align	2
 5831              	.L327:
 5832 03dc 00000000 		.word	UART_DMAAbortOnError
 5833              	.L297:
 5834              	.LBE505:
 5835              	.LBB526:
2538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* DMA mode not enabled */
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 169


2542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing.
2543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 5836              		.loc 1 2544 34
 5837 03e0 7B68     		ldr	r3, [r7, #4]
 5838 03e2 9A8D     		ldrh	r2, [r3, #44]
 5839              		.loc 1 2544 54
 5840 03e4 7B68     		ldr	r3, [r7, #4]
 5841 03e6 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 5842 03e8 9BB2     		uxth	r3, r3
 5843              		.loc 1 2544 16
 5844 03ea D31A     		subs	r3, r2, r3
 5845 03ec A7F8CE30 		strh	r3, [r7, #206]	@ movhi
2545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if ((huart->RxXferCount > 0U)
 5846              		.loc 1 2545 17
 5847 03f0 7B68     		ldr	r3, [r7, #4]
 5848 03f2 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 5849 03f4 9BB2     		uxth	r3, r3
 5850              		.loc 1 2545 10
 5851 03f6 002B     		cmp	r3, #0
 5852 03f8 00F08B80 		beq	.L326
2546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           && (nb_rx_data > 0U))
 5853              		.loc 1 2546 11
 5854 03fc B7F8CE30 		ldrh	r3, [r7, #206]
 5855 0400 002B     		cmp	r3, #0
 5856 0402 00F08680 		beq	.L326
 5857              	.L315:
 5858              	.LBB527:
2547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXNE interrupts */
2549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 5859              		.loc 1 2549 9 discriminator 1
 5860 0406 7B68     		ldr	r3, [r7, #4]
 5861 0408 1B68     		ldr	r3, [r3]
 5862 040a 0C33     		adds	r3, r3, #12
 5863 040c BB63     		str	r3, [r7, #56]
 5864              	.LBB528:
 5865              	.LBB529:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5866              		.loc 2 1072 4
 5867 040e BB6B     		ldr	r3, [r7, #56]
 5868              		.syntax unified
 5869              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5870 0410 53E8003F 		ldrex r3, [r3]
 5871              	@ 0 "" 2
 5872              		.thumb
 5873              		.syntax unified
 5874 0414 7B63     		str	r3, [r7, #52]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5875              		.loc 2 1073 10
 5876 0416 7B6B     		ldr	r3, [r7, #52]
 5877              	.LBE529:
 5878              	.LBE528:
 5879              		.loc 1 2549 9 discriminator 1
 5880 0418 23F49073 		bic	r3, r3, #288
 5881 041c C7F8C830 		str	r3, [r7, #200]
 5882 0420 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 170


 5883 0422 1B68     		ldr	r3, [r3]
 5884 0424 0C33     		adds	r3, r3, #12
 5885 0426 D7F8C820 		ldr	r2, [r7, #200]
 5886 042a 7A64     		str	r2, [r7, #68]
 5887 042c 3B64     		str	r3, [r7, #64]
 5888              	.LBB530:
 5889              	.LBB531:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5890              		.loc 2 1123 4
 5891 042e 396C     		ldr	r1, [r7, #64]
 5892 0430 7A6C     		ldr	r2, [r7, #68]
 5893              		.syntax unified
 5894              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5895 0432 41E80023 		strex r3, r2, [r1]
 5896              	@ 0 "" 2
 5897              		.thumb
 5898              		.syntax unified
 5899 0436 FB63     		str	r3, [r7, #60]
 5900              		.loc 2 1124 10
 5901 0438 FB6B     		ldr	r3, [r7, #60]
 5902              	.LBE531:
 5903              	.LBE530:
 5904              		.loc 1 2549 9 discriminator 1
 5905 043a 002B     		cmp	r3, #0
 5906 043c E3D1     		bne	.L315
 5907              	.L318:
 5908              	.LBE527:
 5909              	.LBB532:
2550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5910              		.loc 1 2552 9 discriminator 1
 5911 043e 7B68     		ldr	r3, [r7, #4]
 5912 0440 1B68     		ldr	r3, [r3]
 5913 0442 1433     		adds	r3, r3, #20
 5914 0444 7B62     		str	r3, [r7, #36]
 5915              	.LBB533:
 5916              	.LBB534:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5917              		.loc 2 1072 4
 5918 0446 7B6A     		ldr	r3, [r7, #36]
 5919              		.syntax unified
 5920              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5921 0448 53E8003F 		ldrex r3, [r3]
 5922              	@ 0 "" 2
 5923              		.thumb
 5924              		.syntax unified
 5925 044c 3B62     		str	r3, [r7, #32]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5926              		.loc 2 1073 10
 5927 044e 3B6A     		ldr	r3, [r7, #32]
 5928              	.LBE534:
 5929              	.LBE533:
 5930              		.loc 1 2552 9 discriminator 1
 5931 0450 23F00103 		bic	r3, r3, #1
 5932 0454 C7F8C430 		str	r3, [r7, #196]
 5933 0458 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 171


 5934 045a 1B68     		ldr	r3, [r3]
 5935 045c 1433     		adds	r3, r3, #20
 5936 045e D7F8C420 		ldr	r2, [r7, #196]
 5937 0462 3A63     		str	r2, [r7, #48]
 5938 0464 FB62     		str	r3, [r7, #44]
 5939              	.LBB535:
 5940              	.LBB536:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5941              		.loc 2 1123 4
 5942 0466 F96A     		ldr	r1, [r7, #44]
 5943 0468 3A6B     		ldr	r2, [r7, #48]
 5944              		.syntax unified
 5945              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5946 046a 41E80023 		strex r3, r2, [r1]
 5947              	@ 0 "" 2
 5948              		.thumb
 5949              		.syntax unified
 5950 046e BB62     		str	r3, [r7, #40]
 5951              		.loc 2 1124 10
 5952 0470 BB6A     		ldr	r3, [r7, #40]
 5953              	.LBE536:
 5954              	.LBE535:
 5955              		.loc 1 2552 9 discriminator 1
 5956 0472 002B     		cmp	r3, #0
 5957 0474 E3D1     		bne	.L318
 5958              	.LBE532:
2553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
2555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 5959              		.loc 1 2555 24
 5960 0476 7B68     		ldr	r3, [r7, #4]
 5961 0478 2022     		movs	r2, #32
 5962 047a 83F83E20 		strb	r2, [r3, #62]
2556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5963              		.loc 1 2556 30
 5964 047e 7B68     		ldr	r3, [r7, #4]
 5965 0480 0022     		movs	r2, #0
 5966 0482 1A63     		str	r2, [r3, #48]
 5967              	.L321:
 5968              	.LBB537:
2557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 5969              		.loc 1 2558 9 discriminator 1
 5970 0484 7B68     		ldr	r3, [r7, #4]
 5971 0486 1B68     		ldr	r3, [r3]
 5972 0488 0C33     		adds	r3, r3, #12
 5973 048a 3B61     		str	r3, [r7, #16]
 5974              	.LBB538:
 5975              	.LBB539:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5976              		.loc 2 1072 4
 5977 048c 3B69     		ldr	r3, [r7, #16]
 5978              		.syntax unified
 5979              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5980 048e 53E8003F 		ldrex r3, [r3]
 5981              	@ 0 "" 2
 5982              		.thumb
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 172


 5983              		.syntax unified
 5984 0492 FB60     		str	r3, [r7, #12]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5985              		.loc 2 1073 10
 5986 0494 FB68     		ldr	r3, [r7, #12]
 5987              	.LBE539:
 5988              	.LBE538:
 5989              		.loc 1 2558 9 discriminator 1
 5990 0496 23F01003 		bic	r3, r3, #16
 5991 049a C7F8C030 		str	r3, [r7, #192]
 5992 049e 7B68     		ldr	r3, [r7, #4]
 5993 04a0 1B68     		ldr	r3, [r3]
 5994 04a2 0C33     		adds	r3, r3, #12
 5995 04a4 D7F8C020 		ldr	r2, [r7, #192]
 5996 04a8 FA61     		str	r2, [r7, #28]
 5997 04aa BB61     		str	r3, [r7, #24]
 5998              	.LBB540:
 5999              	.LBB541:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6000              		.loc 2 1123 4
 6001 04ac B969     		ldr	r1, [r7, #24]
 6002 04ae FA69     		ldr	r2, [r7, #28]
 6003              		.syntax unified
 6004              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6005 04b0 41E80023 		strex r3, r2, [r1]
 6006              	@ 0 "" 2
 6007              		.thumb
 6008              		.syntax unified
 6009 04b4 7B61     		str	r3, [r7, #20]
 6010              		.loc 2 1124 10
 6011 04b6 7B69     		ldr	r3, [r7, #20]
 6012              	.LBE541:
 6013              	.LBE540:
 6014              		.loc 1 2558 9 discriminator 1
 6015 04b8 002B     		cmp	r3, #0
 6016 04ba E3D1     		bne	.L321
 6017              	.LBE537:
2559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call registered Rx complete callback*/
2561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxEventCallback(huart, nb_rx_data);
2562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 6018              		.loc 1 2564 9
 6019 04bc B7F8CE30 		ldrh	r3, [r7, #206]
 6020 04c0 1946     		mov	r1, r3
 6021 04c2 7868     		ldr	r0, [r7, #4]
 6022 04c4 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
2565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
 6023              		.loc 1 2567 7
 6024 04c8 23E0     		b	.L326
 6025              	.L296:
 6026              	.LBE526:
2568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 173


2570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 6027              		.loc 1 2572 18
 6028 04ca D7F8E430 		ldr	r3, [r7, #228]
 6029 04ce 03F08003 		and	r3, r3, #128
 6030              		.loc 1 2572 6
 6031 04d2 002B     		cmp	r3, #0
 6032 04d4 09D0     		beq	.L322
 6033              		.loc 1 2572 56 discriminator 1
 6034 04d6 D7F8E030 		ldr	r3, [r7, #224]
 6035 04da 03F08003 		and	r3, r3, #128
 6036              		.loc 1 2572 44 discriminator 1
 6037 04de 002B     		cmp	r3, #0
 6038 04e0 03D0     		beq	.L322
2573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_Transmit_IT(huart);
 6039              		.loc 1 2574 5
 6040 04e2 7868     		ldr	r0, [r7, #4]
 6041 04e4 FFF7FEFF 		bl	UART_Transmit_IT
2575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 6042              		.loc 1 2575 5
 6043 04e8 14E0     		b	.L276
 6044              	.L322:
2576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter end --------------------------------------------*/
2579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 6045              		.loc 1 2579 18
 6046 04ea D7F8E430 		ldr	r3, [r7, #228]
 6047 04ee 03F04003 		and	r3, r3, #64
 6048              		.loc 1 2579 6
 6049 04f2 002B     		cmp	r3, #0
 6050 04f4 0ED0     		beq	.L276
 6051              		.loc 1 2579 55 discriminator 1
 6052 04f6 D7F8E030 		ldr	r3, [r7, #224]
 6053 04fa 03F04003 		and	r3, r3, #64
 6054              		.loc 1 2579 43 discriminator 1
 6055 04fe 002B     		cmp	r3, #0
 6056 0500 08D0     		beq	.L276
2580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
 6057              		.loc 1 2581 5
 6058 0502 7868     		ldr	r0, [r7, #4]
 6059 0504 FFF7FEFF 		bl	UART_EndTransmit_IT
2582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 6060              		.loc 1 2582 5
 6061 0508 04E0     		b	.L276
 6062              	.L323:
2484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   } /* End if some error occurs */
 6063              		.loc 1 2484 5
 6064 050a 00BF     		nop
 6065 050c 02E0     		b	.L276
 6066              	.L325:
 6067              	.LBB542:
2537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6068              		.loc 1 2537 7
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 174


 6069 050e 00BF     		nop
 6070 0510 00E0     		b	.L276
 6071              	.L326:
 6072              	.LBE542:
 6073              	.LBB543:
2567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6074              		.loc 1 2567 7
 6075 0512 00BF     		nop
 6076              	.L276:
 6077              	.LBE543:
2583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6078              		.loc 1 2584 1
 6079 0514 E837     		adds	r7, r7, #232
 6080              	.LCFI133:
 6081              		.cfi_def_cfa_offset 8
 6082 0516 BD46     		mov	sp, r7
 6083              	.LCFI134:
 6084              		.cfi_def_cfa_register 13
 6085              		@ sp needed
 6086 0518 80BD     		pop	{r7, pc}
 6087              		.cfi_endproc
 6088              	.LFE241:
 6090 051a 00BF     		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 6091              		.align	1
 6092              		.weak	HAL_UART_TxCpltCallback
 6093              		.syntax unified
 6094              		.thumb
 6095              		.thumb_func
 6097              	HAL_UART_TxCpltCallback:
 6098              	.LFB242:
2585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Transfer completed callbacks.
2588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6099              		.loc 1 2593 1
 6100              		.cfi_startproc
 6101              		@ args = 0, pretend = 0, frame = 8
 6102              		@ frame_needed = 1, uses_anonymous_args = 0
 6103              		@ link register save eliminated.
 6104 0000 80B4     		push	{r7}
 6105              	.LCFI135:
 6106              		.cfi_def_cfa_offset 4
 6107              		.cfi_offset 7, -4
 6108 0002 83B0     		sub	sp, sp, #12
 6109              	.LCFI136:
 6110              		.cfi_def_cfa_offset 16
 6111 0004 00AF     		add	r7, sp, #0
 6112              	.LCFI137:
 6113              		.cfi_def_cfa_register 7
 6114 0006 7860     		str	r0, [r7, #4]
2594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 175


2595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
2598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6115              		.loc 1 2599 1
 6116 0008 00BF     		nop
 6117 000a 0C37     		adds	r7, r7, #12
 6118              	.LCFI138:
 6119              		.cfi_def_cfa_offset 4
 6120 000c BD46     		mov	sp, r7
 6121              	.LCFI139:
 6122              		.cfi_def_cfa_register 13
 6123              		@ sp needed
 6124 000e 5DF8047B 		ldr	r7, [sp], #4
 6125              	.LCFI140:
 6126              		.cfi_restore 7
 6127              		.cfi_def_cfa_offset 0
 6128 0012 7047     		bx	lr
 6129              		.cfi_endproc
 6130              	.LFE242:
 6132              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 6133              		.align	1
 6134              		.weak	HAL_UART_TxHalfCpltCallback
 6135              		.syntax unified
 6136              		.thumb
 6137              		.thumb_func
 6139              	HAL_UART_TxHalfCpltCallback:
 6140              	.LFB243:
2600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
2603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6141              		.loc 1 2608 1
 6142              		.cfi_startproc
 6143              		@ args = 0, pretend = 0, frame = 8
 6144              		@ frame_needed = 1, uses_anonymous_args = 0
 6145              		@ link register save eliminated.
 6146 0000 80B4     		push	{r7}
 6147              	.LCFI141:
 6148              		.cfi_def_cfa_offset 4
 6149              		.cfi_offset 7, -4
 6150 0002 83B0     		sub	sp, sp, #12
 6151              	.LCFI142:
 6152              		.cfi_def_cfa_offset 16
 6153 0004 00AF     		add	r7, sp, #0
 6154              	.LCFI143:
 6155              		.cfi_def_cfa_register 7
 6156 0006 7860     		str	r0, [r7, #4]
2609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 176


2612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback could be implemented in the user file
2613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6157              		.loc 1 2614 1
 6158 0008 00BF     		nop
 6159 000a 0C37     		adds	r7, r7, #12
 6160              	.LCFI144:
 6161              		.cfi_def_cfa_offset 4
 6162 000c BD46     		mov	sp, r7
 6163              	.LCFI145:
 6164              		.cfi_def_cfa_register 13
 6165              		@ sp needed
 6166 000e 5DF8047B 		ldr	r7, [sp], #4
 6167              	.LCFI146:
 6168              		.cfi_restore 7
 6169              		.cfi_def_cfa_offset 0
 6170 0012 7047     		bx	lr
 6171              		.cfi_endproc
 6172              	.LFE243:
 6174              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 6175              		.align	1
 6176              		.weak	HAL_UART_RxCpltCallback
 6177              		.syntax unified
 6178              		.thumb
 6179              		.thumb_func
 6181              	HAL_UART_RxCpltCallback:
 6182              	.LFB244:
2615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Transfer completed callbacks.
2618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6183              		.loc 1 2623 1
 6184              		.cfi_startproc
 6185              		@ args = 0, pretend = 0, frame = 8
 6186              		@ frame_needed = 1, uses_anonymous_args = 0
 6187              		@ link register save eliminated.
 6188 0000 80B4     		push	{r7}
 6189              	.LCFI147:
 6190              		.cfi_def_cfa_offset 4
 6191              		.cfi_offset 7, -4
 6192 0002 83B0     		sub	sp, sp, #12
 6193              	.LCFI148:
 6194              		.cfi_def_cfa_offset 16
 6195 0004 00AF     		add	r7, sp, #0
 6196              	.LCFI149:
 6197              		.cfi_def_cfa_register 7
 6198 0006 7860     		str	r0, [r7, #4]
2624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_RxCpltCallback could be implemented in the user file
2628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 177


2629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6199              		.loc 1 2629 1
 6200 0008 00BF     		nop
 6201 000a 0C37     		adds	r7, r7, #12
 6202              	.LCFI150:
 6203              		.cfi_def_cfa_offset 4
 6204 000c BD46     		mov	sp, r7
 6205              	.LCFI151:
 6206              		.cfi_def_cfa_register 13
 6207              		@ sp needed
 6208 000e 5DF8047B 		ldr	r7, [sp], #4
 6209              	.LCFI152:
 6210              		.cfi_restore 7
 6211              		.cfi_def_cfa_offset 0
 6212 0012 7047     		bx	lr
 6213              		.cfi_endproc
 6214              	.LFE244:
 6216              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 6217              		.align	1
 6218              		.weak	HAL_UART_RxHalfCpltCallback
 6219              		.syntax unified
 6220              		.thumb
 6221              		.thumb_func
 6223              	HAL_UART_RxHalfCpltCallback:
 6224              	.LFB245:
2630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
2633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6225              		.loc 1 2638 1
 6226              		.cfi_startproc
 6227              		@ args = 0, pretend = 0, frame = 8
 6228              		@ frame_needed = 1, uses_anonymous_args = 0
 6229              		@ link register save eliminated.
 6230 0000 80B4     		push	{r7}
 6231              	.LCFI153:
 6232              		.cfi_def_cfa_offset 4
 6233              		.cfi_offset 7, -4
 6234 0002 83B0     		sub	sp, sp, #12
 6235              	.LCFI154:
 6236              		.cfi_def_cfa_offset 16
 6237 0004 00AF     		add	r7, sp, #0
 6238              	.LCFI155:
 6239              		.cfi_def_cfa_register 7
 6240 0006 7860     		str	r0, [r7, #4]
2639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback could be implemented in the user file
2643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6241              		.loc 1 2644 1
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 178


 6242 0008 00BF     		nop
 6243 000a 0C37     		adds	r7, r7, #12
 6244              	.LCFI156:
 6245              		.cfi_def_cfa_offset 4
 6246 000c BD46     		mov	sp, r7
 6247              	.LCFI157:
 6248              		.cfi_def_cfa_register 13
 6249              		@ sp needed
 6250 000e 5DF8047B 		ldr	r7, [sp], #4
 6251              	.LCFI158:
 6252              		.cfi_restore 7
 6253              		.cfi_def_cfa_offset 0
 6254 0012 7047     		bx	lr
 6255              		.cfi_endproc
 6256              	.LFE245:
 6258              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 6259              		.align	1
 6260              		.weak	HAL_UART_ErrorCallback
 6261              		.syntax unified
 6262              		.thumb
 6263              		.thumb_func
 6265              	HAL_UART_ErrorCallback:
 6266              	.LFB246:
2645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART error callbacks.
2648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6267              		.loc 1 2653 1
 6268              		.cfi_startproc
 6269              		@ args = 0, pretend = 0, frame = 8
 6270              		@ frame_needed = 1, uses_anonymous_args = 0
 6271              		@ link register save eliminated.
 6272 0000 80B4     		push	{r7}
 6273              	.LCFI159:
 6274              		.cfi_def_cfa_offset 4
 6275              		.cfi_offset 7, -4
 6276 0002 83B0     		sub	sp, sp, #12
 6277              	.LCFI160:
 6278              		.cfi_def_cfa_offset 16
 6279 0004 00AF     		add	r7, sp, #0
 6280              	.LCFI161:
 6281              		.cfi_def_cfa_register 7
 6282 0006 7860     		str	r0, [r7, #4]
2654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_ErrorCallback could be implemented in the user file
2658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6283              		.loc 1 2659 1
 6284 0008 00BF     		nop
 6285 000a 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 179


 6286              	.LCFI162:
 6287              		.cfi_def_cfa_offset 4
 6288 000c BD46     		mov	sp, r7
 6289              	.LCFI163:
 6290              		.cfi_def_cfa_register 13
 6291              		@ sp needed
 6292 000e 5DF8047B 		ldr	r7, [sp], #4
 6293              	.LCFI164:
 6294              		.cfi_restore 7
 6295              		.cfi_def_cfa_offset 0
 6296 0012 7047     		bx	lr
 6297              		.cfi_endproc
 6298              	.LFE246:
 6300              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 6301              		.align	1
 6302              		.weak	HAL_UART_AbortCpltCallback
 6303              		.syntax unified
 6304              		.thumb
 6305              		.thumb_func
 6307              	HAL_UART_AbortCpltCallback:
 6308              	.LFB247:
2660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6309              		.loc 1 2667 1
 6310              		.cfi_startproc
 6311              		@ args = 0, pretend = 0, frame = 8
 6312              		@ frame_needed = 1, uses_anonymous_args = 0
 6313              		@ link register save eliminated.
 6314 0000 80B4     		push	{r7}
 6315              	.LCFI165:
 6316              		.cfi_def_cfa_offset 4
 6317              		.cfi_offset 7, -4
 6318 0002 83B0     		sub	sp, sp, #12
 6319              	.LCFI166:
 6320              		.cfi_def_cfa_offset 16
 6321 0004 00AF     		add	r7, sp, #0
 6322              	.LCFI167:
 6323              		.cfi_def_cfa_register 7
 6324 0006 7860     		str	r0, [r7, #4]
2668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6325              		.loc 1 2674 1
 6326 0008 00BF     		nop
 6327 000a 0C37     		adds	r7, r7, #12
 6328              	.LCFI168:
 6329              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 180


 6330 000c BD46     		mov	sp, r7
 6331              	.LCFI169:
 6332              		.cfi_def_cfa_register 13
 6333              		@ sp needed
 6334 000e 5DF8047B 		ldr	r7, [sp], #4
 6335              	.LCFI170:
 6336              		.cfi_restore 7
 6337              		.cfi_def_cfa_offset 0
 6338 0012 7047     		bx	lr
 6339              		.cfi_endproc
 6340              	.LFE247:
 6342              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 6343              		.align	1
 6344              		.weak	HAL_UART_AbortTransmitCpltCallback
 6345              		.syntax unified
 6346              		.thumb
 6347              		.thumb_func
 6349              	HAL_UART_AbortTransmitCpltCallback:
 6350              	.LFB248:
2675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6351              		.loc 1 2682 1
 6352              		.cfi_startproc
 6353              		@ args = 0, pretend = 0, frame = 8
 6354              		@ frame_needed = 1, uses_anonymous_args = 0
 6355              		@ link register save eliminated.
 6356 0000 80B4     		push	{r7}
 6357              	.LCFI171:
 6358              		.cfi_def_cfa_offset 4
 6359              		.cfi_offset 7, -4
 6360 0002 83B0     		sub	sp, sp, #12
 6361              	.LCFI172:
 6362              		.cfi_def_cfa_offset 16
 6363 0004 00AF     		add	r7, sp, #0
 6364              	.LCFI173:
 6365              		.cfi_def_cfa_register 7
 6366 0006 7860     		str	r0, [r7, #4]
2683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6367              		.loc 1 2689 1
 6368 0008 00BF     		nop
 6369 000a 0C37     		adds	r7, r7, #12
 6370              	.LCFI174:
 6371              		.cfi_def_cfa_offset 4
 6372 000c BD46     		mov	sp, r7
 6373              	.LCFI175:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 181


 6374              		.cfi_def_cfa_register 13
 6375              		@ sp needed
 6376 000e 5DF8047B 		ldr	r7, [sp], #4
 6377              	.LCFI176:
 6378              		.cfi_restore 7
 6379              		.cfi_def_cfa_offset 0
 6380 0012 7047     		bx	lr
 6381              		.cfi_endproc
 6382              	.LFE248:
 6384              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 6385              		.align	1
 6386              		.weak	HAL_UART_AbortReceiveCpltCallback
 6387              		.syntax unified
 6388              		.thumb
 6389              		.thumb_func
 6391              	HAL_UART_AbortReceiveCpltCallback:
 6392              	.LFB249:
2690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6393              		.loc 1 2697 1
 6394              		.cfi_startproc
 6395              		@ args = 0, pretend = 0, frame = 8
 6396              		@ frame_needed = 1, uses_anonymous_args = 0
 6397              		@ link register save eliminated.
 6398 0000 80B4     		push	{r7}
 6399              	.LCFI177:
 6400              		.cfi_def_cfa_offset 4
 6401              		.cfi_offset 7, -4
 6402 0002 83B0     		sub	sp, sp, #12
 6403              	.LCFI178:
 6404              		.cfi_def_cfa_offset 16
 6405 0004 00AF     		add	r7, sp, #0
 6406              	.LCFI179:
 6407              		.cfi_def_cfa_register 7
 6408 0006 7860     		str	r0, [r7, #4]
2698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6409              		.loc 1 2704 1
 6410 0008 00BF     		nop
 6411 000a 0C37     		adds	r7, r7, #12
 6412              	.LCFI180:
 6413              		.cfi_def_cfa_offset 4
 6414 000c BD46     		mov	sp, r7
 6415              	.LCFI181:
 6416              		.cfi_def_cfa_register 13
 6417              		@ sp needed
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 182


 6418 000e 5DF8047B 		ldr	r7, [sp], #4
 6419              	.LCFI182:
 6420              		.cfi_restore 7
 6421              		.cfi_def_cfa_offset 0
 6422 0012 7047     		bx	lr
 6423              		.cfi_endproc
 6424              	.LFE249:
 6426              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 6427              		.align	1
 6428              		.weak	HAL_UARTEx_RxEventCallback
 6429              		.syntax unified
 6430              		.thumb
 6431              		.thumb_func
 6433              	HAL_UARTEx_RxEventCallback:
 6434              	.LFB250:
2705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Reception Event Callback (Rx event notification called after use of advanced reception 
2708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle
2709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Number of data available in application reception buffer (indicates a position in
2710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               reception buffer until which, data are available)
2711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
2714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6435              		.loc 1 2714 1
 6436              		.cfi_startproc
 6437              		@ args = 0, pretend = 0, frame = 8
 6438              		@ frame_needed = 1, uses_anonymous_args = 0
 6439              		@ link register save eliminated.
 6440 0000 80B4     		push	{r7}
 6441              	.LCFI183:
 6442              		.cfi_def_cfa_offset 4
 6443              		.cfi_offset 7, -4
 6444 0002 83B0     		sub	sp, sp, #12
 6445              	.LCFI184:
 6446              		.cfi_def_cfa_offset 16
 6447 0004 00AF     		add	r7, sp, #0
 6448              	.LCFI185:
 6449              		.cfi_def_cfa_register 7
 6450 0006 7860     		str	r0, [r7, #4]
 6451 0008 0B46     		mov	r3, r1
 6452 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(Size);
2718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UARTEx_RxEventCallback can be implemented in the user file.
2721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6453              		.loc 1 2722 1
 6454 000c 00BF     		nop
 6455 000e 0C37     		adds	r7, r7, #12
 6456              	.LCFI186:
 6457              		.cfi_def_cfa_offset 4
 6458 0010 BD46     		mov	sp, r7
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 183


 6459              	.LCFI187:
 6460              		.cfi_def_cfa_register 13
 6461              		@ sp needed
 6462 0012 5DF8047B 		ldr	r7, [sp], #4
 6463              	.LCFI188:
 6464              		.cfi_restore 7
 6465              		.cfi_def_cfa_offset 0
 6466 0016 7047     		bx	lr
 6467              		.cfi_endproc
 6468              	.LFE250:
 6470              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 6471              		.align	1
 6472              		.global	HAL_LIN_SendBreak
 6473              		.syntax unified
 6474              		.thumb
 6475              		.thumb_func
 6477              	HAL_LIN_SendBreak:
 6478              	.LFB251:
2723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART control functions
2730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
2731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
2732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
2736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART:
2737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_LIN_SendBreak() API can be helpful to transmit the break character.
2738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_EnterMuteMode() API can be helpful to enter the UART in mute mode.
2739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_ExitMuteMode() API can be helpful to exit the UART mute mode by software
2740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableTransmitter() API to enable the UART transmitter and disables the UART
2741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableReceiver() API to enable the UART receiver and disables the UART trans
2742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
2744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
2745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Transmits break characters.
2749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6479              		.loc 1 2754 1
 6480              		.cfi_startproc
 6481              		@ args = 0, pretend = 0, frame = 32
 6482              		@ frame_needed = 1, uses_anonymous_args = 0
 6483              		@ link register save eliminated.
 6484 0000 80B4     		push	{r7}
 6485              	.LCFI189:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 184


 6486              		.cfi_def_cfa_offset 4
 6487              		.cfi_offset 7, -4
 6488 0002 89B0     		sub	sp, sp, #36
 6489              	.LCFI190:
 6490              		.cfi_def_cfa_offset 40
 6491 0004 00AF     		add	r7, sp, #0
 6492              	.LCFI191:
 6493              		.cfi_def_cfa_register 7
 6494 0006 7860     		str	r0, [r7, #4]
2755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 6495              		.loc 1 2759 3
 6496 0008 7B68     		ldr	r3, [r7, #4]
 6497 000a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 6498 000e 012B     		cmp	r3, #1
 6499 0010 01D1     		bne	.L339
 6500              		.loc 1 2759 3 is_stmt 0 discriminator 1
 6501 0012 0223     		movs	r3, #2
 6502              		.loc 1 2759 3
 6503 0014 2AE0     		b	.L340
 6504              	.L339:
 6505              		.loc 1 2759 3 discriminator 2
 6506 0016 7B68     		ldr	r3, [r7, #4]
 6507 0018 0122     		movs	r2, #1
 6508 001a 83F83C20 		strb	r2, [r3, #60]
2760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6509              		.loc 1 2761 17 is_stmt 1
 6510 001e 7B68     		ldr	r3, [r7, #4]
 6511 0020 2422     		movs	r2, #36
 6512 0022 83F83D20 		strb	r2, [r3, #61]
 6513              	.L343:
 6514              	.LBB544:
2762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Send break characters */
2764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_SBK);
 6515              		.loc 1 2764 3 discriminator 1
 6516 0026 7B68     		ldr	r3, [r7, #4]
 6517 0028 1B68     		ldr	r3, [r3]
 6518 002a 0C33     		adds	r3, r3, #12
 6519 002c FB60     		str	r3, [r7, #12]
 6520              	.LBB545:
 6521              	.LBB546:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6522              		.loc 2 1072 4
 6523 002e FB68     		ldr	r3, [r7, #12]
 6524              		.syntax unified
 6525              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6526 0030 53E8003F 		ldrex r3, [r3]
 6527              	@ 0 "" 2
 6528              		.thumb
 6529              		.syntax unified
 6530 0034 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 185


 6531              		.loc 2 1073 10
 6532 0036 BB68     		ldr	r3, [r7, #8]
 6533              	.LBE546:
 6534              	.LBE545:
 6535              		.loc 1 2764 3 discriminator 1
 6536 0038 43F00103 		orr	r3, r3, #1
 6537 003c FB61     		str	r3, [r7, #28]
 6538 003e 7B68     		ldr	r3, [r7, #4]
 6539 0040 1B68     		ldr	r3, [r3]
 6540 0042 0C33     		adds	r3, r3, #12
 6541 0044 FA69     		ldr	r2, [r7, #28]
 6542 0046 BA61     		str	r2, [r7, #24]
 6543 0048 7B61     		str	r3, [r7, #20]
 6544              	.LBB547:
 6545              	.LBB548:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6546              		.loc 2 1123 4
 6547 004a 7969     		ldr	r1, [r7, #20]
 6548 004c BA69     		ldr	r2, [r7, #24]
 6549              		.syntax unified
 6550              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6551 004e 41E80023 		strex r3, r2, [r1]
 6552              	@ 0 "" 2
 6553              		.thumb
 6554              		.syntax unified
 6555 0052 3B61     		str	r3, [r7, #16]
 6556              		.loc 2 1124 10
 6557 0054 3B69     		ldr	r3, [r7, #16]
 6558              	.LBE548:
 6559              	.LBE547:
 6560              		.loc 1 2764 3 discriminator 1
 6561 0056 002B     		cmp	r3, #0
 6562 0058 E5D1     		bne	.L343
 6563              	.LBE544:
2765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6564              		.loc 1 2766 17
 6565 005a 7B68     		ldr	r3, [r7, #4]
 6566 005c 2022     		movs	r2, #32
 6567 005e 83F83D20 		strb	r2, [r3, #61]
2767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 6568              		.loc 1 2769 3
 6569 0062 7B68     		ldr	r3, [r7, #4]
 6570 0064 0022     		movs	r2, #0
 6571 0066 83F83C20 		strb	r2, [r3, #60]
2770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 6572              		.loc 1 2771 10
 6573 006a 0023     		movs	r3, #0
 6574              	.L340:
2772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6575              		.loc 1 2772 1
 6576 006c 1846     		mov	r0, r3
 6577 006e 2437     		adds	r7, r7, #36
 6578              	.LCFI192:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 186


 6579              		.cfi_def_cfa_offset 4
 6580 0070 BD46     		mov	sp, r7
 6581              	.LCFI193:
 6582              		.cfi_def_cfa_register 13
 6583              		@ sp needed
 6584 0072 5DF8047B 		ldr	r7, [sp], #4
 6585              	.LCFI194:
 6586              		.cfi_restore 7
 6587              		.cfi_def_cfa_offset 0
 6588 0076 7047     		bx	lr
 6589              		.cfi_endproc
 6590              	.LFE251:
 6592              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 6593              		.align	1
 6594              		.global	HAL_MultiProcessor_EnterMuteMode
 6595              		.syntax unified
 6596              		.thumb
 6597              		.thumb_func
 6599              	HAL_MultiProcessor_EnterMuteMode:
 6600              	.LFB252:
2773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enters the UART in mute mode.
2776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6601              		.loc 1 2781 1
 6602              		.cfi_startproc
 6603              		@ args = 0, pretend = 0, frame = 32
 6604              		@ frame_needed = 1, uses_anonymous_args = 0
 6605              		@ link register save eliminated.
 6606 0000 80B4     		push	{r7}
 6607              	.LCFI195:
 6608              		.cfi_def_cfa_offset 4
 6609              		.cfi_offset 7, -4
 6610 0002 89B0     		sub	sp, sp, #36
 6611              	.LCFI196:
 6612              		.cfi_def_cfa_offset 40
 6613 0004 00AF     		add	r7, sp, #0
 6614              	.LCFI197:
 6615              		.cfi_def_cfa_register 7
 6616 0006 7860     		str	r0, [r7, #4]
2782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 6617              		.loc 1 2786 3
 6618 0008 7B68     		ldr	r3, [r7, #4]
 6619 000a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 6620 000e 012B     		cmp	r3, #1
 6621 0010 01D1     		bne	.L345
 6622              		.loc 1 2786 3 is_stmt 0 discriminator 1
 6623 0012 0223     		movs	r3, #2
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 187


 6624              		.loc 1 2786 3
 6625 0014 2AE0     		b	.L346
 6626              	.L345:
 6627              		.loc 1 2786 3 discriminator 2
 6628 0016 7B68     		ldr	r3, [r7, #4]
 6629 0018 0122     		movs	r2, #1
 6630 001a 83F83C20 		strb	r2, [r3, #60]
2787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6631              		.loc 1 2788 17 is_stmt 1
 6632 001e 7B68     		ldr	r3, [r7, #4]
 6633 0020 2422     		movs	r2, #36
 6634 0022 83F83D20 		strb	r2, [r3, #61]
 6635              	.L349:
 6636              	.LBB549:
2789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
2791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RWU);
 6637              		.loc 1 2791 3 discriminator 1
 6638 0026 7B68     		ldr	r3, [r7, #4]
 6639 0028 1B68     		ldr	r3, [r3]
 6640 002a 0C33     		adds	r3, r3, #12
 6641 002c FB60     		str	r3, [r7, #12]
 6642              	.LBB550:
 6643              	.LBB551:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6644              		.loc 2 1072 4
 6645 002e FB68     		ldr	r3, [r7, #12]
 6646              		.syntax unified
 6647              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6648 0030 53E8003F 		ldrex r3, [r3]
 6649              	@ 0 "" 2
 6650              		.thumb
 6651              		.syntax unified
 6652 0034 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6653              		.loc 2 1073 10
 6654 0036 BB68     		ldr	r3, [r7, #8]
 6655              	.LBE551:
 6656              	.LBE550:
 6657              		.loc 1 2791 3 discriminator 1
 6658 0038 43F00203 		orr	r3, r3, #2
 6659 003c FB61     		str	r3, [r7, #28]
 6660 003e 7B68     		ldr	r3, [r7, #4]
 6661 0040 1B68     		ldr	r3, [r3]
 6662 0042 0C33     		adds	r3, r3, #12
 6663 0044 FA69     		ldr	r2, [r7, #28]
 6664 0046 BA61     		str	r2, [r7, #24]
 6665 0048 7B61     		str	r3, [r7, #20]
 6666              	.LBB552:
 6667              	.LBB553:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6668              		.loc 2 1123 4
 6669 004a 7969     		ldr	r1, [r7, #20]
 6670 004c BA69     		ldr	r2, [r7, #24]
 6671              		.syntax unified
 6672              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 188


 6673 004e 41E80023 		strex r3, r2, [r1]
 6674              	@ 0 "" 2
 6675              		.thumb
 6676              		.syntax unified
 6677 0052 3B61     		str	r3, [r7, #16]
 6678              		.loc 2 1124 10
 6679 0054 3B69     		ldr	r3, [r7, #16]
 6680              	.LBE553:
 6681              	.LBE552:
 6682              		.loc 1 2791 3 discriminator 1
 6683 0056 002B     		cmp	r3, #0
 6684 0058 E5D1     		bne	.L349
 6685              	.LBE549:
2792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6686              		.loc 1 2793 17
 6687 005a 7B68     		ldr	r3, [r7, #4]
 6688 005c 2022     		movs	r2, #32
 6689 005e 83F83D20 		strb	r2, [r3, #61]
2794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 6690              		.loc 1 2796 3
 6691 0062 7B68     		ldr	r3, [r7, #4]
 6692 0064 0022     		movs	r2, #0
 6693 0066 83F83C20 		strb	r2, [r3, #60]
2797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 6694              		.loc 1 2798 10
 6695 006a 0023     		movs	r3, #0
 6696              	.L346:
2799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6697              		.loc 1 2799 1
 6698 006c 1846     		mov	r0, r3
 6699 006e 2437     		adds	r7, r7, #36
 6700              	.LCFI198:
 6701              		.cfi_def_cfa_offset 4
 6702 0070 BD46     		mov	sp, r7
 6703              	.LCFI199:
 6704              		.cfi_def_cfa_register 13
 6705              		@ sp needed
 6706 0072 5DF8047B 		ldr	r7, [sp], #4
 6707              	.LCFI200:
 6708              		.cfi_restore 7
 6709              		.cfi_def_cfa_offset 0
 6710 0076 7047     		bx	lr
 6711              		.cfi_endproc
 6712              	.LFE252:
 6714              		.section	.text.HAL_MultiProcessor_ExitMuteMode,"ax",%progbits
 6715              		.align	1
 6716              		.global	HAL_MultiProcessor_ExitMuteMode
 6717              		.syntax unified
 6718              		.thumb
 6719              		.thumb_func
 6721              	HAL_MultiProcessor_ExitMuteMode:
 6722              	.LFB253:
2800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 189


2801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Exits the UART mute mode: wake up software.
2803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_ExitMuteMode(UART_HandleTypeDef *huart)
2808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6723              		.loc 1 2808 1
 6724              		.cfi_startproc
 6725              		@ args = 0, pretend = 0, frame = 32
 6726              		@ frame_needed = 1, uses_anonymous_args = 0
 6727              		@ link register save eliminated.
 6728 0000 80B4     		push	{r7}
 6729              	.LCFI201:
 6730              		.cfi_def_cfa_offset 4
 6731              		.cfi_offset 7, -4
 6732 0002 89B0     		sub	sp, sp, #36
 6733              	.LCFI202:
 6734              		.cfi_def_cfa_offset 40
 6735 0004 00AF     		add	r7, sp, #0
 6736              	.LCFI203:
 6737              		.cfi_def_cfa_register 7
 6738 0006 7860     		str	r0, [r7, #4]
2809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 6739              		.loc 1 2813 3
 6740 0008 7B68     		ldr	r3, [r7, #4]
 6741 000a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 6742 000e 012B     		cmp	r3, #1
 6743 0010 01D1     		bne	.L351
 6744              		.loc 1 2813 3 is_stmt 0 discriminator 1
 6745 0012 0223     		movs	r3, #2
 6746              		.loc 1 2813 3
 6747 0014 2AE0     		b	.L352
 6748              	.L351:
 6749              		.loc 1 2813 3 discriminator 2
 6750 0016 7B68     		ldr	r3, [r7, #4]
 6751 0018 0122     		movs	r2, #1
 6752 001a 83F83C20 		strb	r2, [r3, #60]
2814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6753              		.loc 1 2815 17 is_stmt 1
 6754 001e 7B68     		ldr	r3, [r7, #4]
 6755 0020 2422     		movs	r2, #36
 6756 0022 83F83D20 		strb	r2, [r3, #61]
 6757              	.L355:
 6758              	.LBB554:
2816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
2818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RWU);
 6759              		.loc 1 2818 3 discriminator 1
 6760 0026 7B68     		ldr	r3, [r7, #4]
 6761 0028 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 190


 6762 002a 0C33     		adds	r3, r3, #12
 6763 002c FB60     		str	r3, [r7, #12]
 6764              	.LBB555:
 6765              	.LBB556:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6766              		.loc 2 1072 4
 6767 002e FB68     		ldr	r3, [r7, #12]
 6768              		.syntax unified
 6769              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6770 0030 53E8003F 		ldrex r3, [r3]
 6771              	@ 0 "" 2
 6772              		.thumb
 6773              		.syntax unified
 6774 0034 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6775              		.loc 2 1073 10
 6776 0036 BB68     		ldr	r3, [r7, #8]
 6777              	.LBE556:
 6778              	.LBE555:
 6779              		.loc 1 2818 3 discriminator 1
 6780 0038 23F00203 		bic	r3, r3, #2
 6781 003c FB61     		str	r3, [r7, #28]
 6782 003e 7B68     		ldr	r3, [r7, #4]
 6783 0040 1B68     		ldr	r3, [r3]
 6784 0042 0C33     		adds	r3, r3, #12
 6785 0044 FA69     		ldr	r2, [r7, #28]
 6786 0046 BA61     		str	r2, [r7, #24]
 6787 0048 7B61     		str	r3, [r7, #20]
 6788              	.LBB557:
 6789              	.LBB558:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6790              		.loc 2 1123 4
 6791 004a 7969     		ldr	r1, [r7, #20]
 6792 004c BA69     		ldr	r2, [r7, #24]
 6793              		.syntax unified
 6794              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6795 004e 41E80023 		strex r3, r2, [r1]
 6796              	@ 0 "" 2
 6797              		.thumb
 6798              		.syntax unified
 6799 0052 3B61     		str	r3, [r7, #16]
 6800              		.loc 2 1124 10
 6801 0054 3B69     		ldr	r3, [r7, #16]
 6802              	.LBE558:
 6803              	.LBE557:
 6804              		.loc 1 2818 3 discriminator 1
 6805 0056 002B     		cmp	r3, #0
 6806 0058 E5D1     		bne	.L355
 6807              	.LBE554:
2819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6808              		.loc 1 2820 17
 6809 005a 7B68     		ldr	r3, [r7, #4]
 6810 005c 2022     		movs	r2, #32
 6811 005e 83F83D20 		strb	r2, [r3, #61]
2821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 191


2823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 6812              		.loc 1 2823 3
 6813 0062 7B68     		ldr	r3, [r7, #4]
 6814 0064 0022     		movs	r2, #0
 6815 0066 83F83C20 		strb	r2, [r3, #60]
2824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 6816              		.loc 1 2825 10
 6817 006a 0023     		movs	r3, #0
 6818              	.L352:
2826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6819              		.loc 1 2826 1
 6820 006c 1846     		mov	r0, r3
 6821 006e 2437     		adds	r7, r7, #36
 6822              	.LCFI204:
 6823              		.cfi_def_cfa_offset 4
 6824 0070 BD46     		mov	sp, r7
 6825              	.LCFI205:
 6826              		.cfi_def_cfa_register 13
 6827              		@ sp needed
 6828 0072 5DF8047B 		ldr	r7, [sp], #4
 6829              	.LCFI206:
 6830              		.cfi_restore 7
 6831              		.cfi_def_cfa_offset 0
 6832 0076 7047     		bx	lr
 6833              		.cfi_endproc
 6834              	.LFE253:
 6836              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 6837              		.align	1
 6838              		.global	HAL_HalfDuplex_EnableTransmitter
 6839              		.syntax unified
 6840              		.thumb
 6841              		.thumb_func
 6843              	HAL_HalfDuplex_EnableTransmitter:
 6844              	.LFB254:
2827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
2830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6845              		.loc 1 2835 1
 6846              		.cfi_startproc
 6847              		@ args = 0, pretend = 0, frame = 16
 6848              		@ frame_needed = 1, uses_anonymous_args = 0
 6849              		@ link register save eliminated.
 6850 0000 80B4     		push	{r7}
 6851              	.LCFI207:
 6852              		.cfi_def_cfa_offset 4
 6853              		.cfi_offset 7, -4
 6854 0002 85B0     		sub	sp, sp, #20
 6855              	.LCFI208:
 6856              		.cfi_def_cfa_offset 24
 6857 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 192


 6858              	.LCFI209:
 6859              		.cfi_def_cfa_register 7
 6860 0006 7860     		str	r0, [r7, #4]
2836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 6861              		.loc 1 2836 12
 6862 0008 0023     		movs	r3, #0
 6863 000a FB60     		str	r3, [r7, #12]
2837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 6864              		.loc 1 2839 3
 6865 000c 7B68     		ldr	r3, [r7, #4]
 6866 000e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 6867 0012 012B     		cmp	r3, #1
 6868 0014 01D1     		bne	.L357
 6869              		.loc 1 2839 3 is_stmt 0 discriminator 1
 6870 0016 0223     		movs	r3, #2
 6871              		.loc 1 2839 3
 6872 0018 20E0     		b	.L358
 6873              	.L357:
 6874              		.loc 1 2839 3 discriminator 2
 6875 001a 7B68     		ldr	r3, [r7, #4]
 6876 001c 0122     		movs	r2, #1
 6877 001e 83F83C20 		strb	r2, [r3, #60]
2840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6878              		.loc 1 2841 17 is_stmt 1
 6879 0022 7B68     		ldr	r3, [r7, #4]
 6880 0024 2422     		movs	r2, #36
 6881 0026 83F83D20 		strb	r2, [r3, #61]
2842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 6882              		.loc 1 2844 17
 6883 002a 7B68     		ldr	r3, [r7, #4]
 6884 002c 1B68     		ldr	r3, [r3]
 6885              		.loc 1 2844 10
 6886 002e DB68     		ldr	r3, [r3, #12]
 6887 0030 FB60     		str	r3, [r7, #12]
2845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
2847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
 6888              		.loc 1 2847 10
 6889 0032 FB68     		ldr	r3, [r7, #12]
 6890 0034 23F00C03 		bic	r3, r3, #12
 6891 0038 FB60     		str	r3, [r7, #12]
2848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_TE;
 6892              		.loc 1 2850 10
 6893 003a FB68     		ldr	r3, [r7, #12]
 6894 003c 43F00803 		orr	r3, r3, #8
 6895 0040 FB60     		str	r3, [r7, #12]
2851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
2853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 6896              		.loc 1 2853 3
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 193


 6897 0042 7B68     		ldr	r3, [r7, #4]
 6898 0044 1B68     		ldr	r3, [r3]
 6899 0046 FA68     		ldr	r2, [r7, #12]
 6900 0048 DA60     		str	r2, [r3, #12]
2854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6901              		.loc 1 2855 17
 6902 004a 7B68     		ldr	r3, [r7, #4]
 6903 004c 2022     		movs	r2, #32
 6904 004e 83F83D20 		strb	r2, [r3, #61]
2856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 6905              		.loc 1 2858 3
 6906 0052 7B68     		ldr	r3, [r7, #4]
 6907 0054 0022     		movs	r2, #0
 6908 0056 83F83C20 		strb	r2, [r3, #60]
2859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 6909              		.loc 1 2860 10
 6910 005a 0023     		movs	r3, #0
 6911              	.L358:
2861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6912              		.loc 1 2861 1
 6913 005c 1846     		mov	r0, r3
 6914 005e 1437     		adds	r7, r7, #20
 6915              	.LCFI210:
 6916              		.cfi_def_cfa_offset 4
 6917 0060 BD46     		mov	sp, r7
 6918              	.LCFI211:
 6919              		.cfi_def_cfa_register 13
 6920              		@ sp needed
 6921 0062 5DF8047B 		ldr	r7, [sp], #4
 6922              	.LCFI212:
 6923              		.cfi_restore 7
 6924              		.cfi_def_cfa_offset 0
 6925 0066 7047     		bx	lr
 6926              		.cfi_endproc
 6927              	.LFE254:
 6929              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 6930              		.align	1
 6931              		.global	HAL_HalfDuplex_EnableReceiver
 6932              		.syntax unified
 6933              		.thumb
 6934              		.thumb_func
 6936              	HAL_HalfDuplex_EnableReceiver:
 6937              	.LFB255:
2862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
2865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6938              		.loc 1 2870 1
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 194


 6939              		.cfi_startproc
 6940              		@ args = 0, pretend = 0, frame = 16
 6941              		@ frame_needed = 1, uses_anonymous_args = 0
 6942              		@ link register save eliminated.
 6943 0000 80B4     		push	{r7}
 6944              	.LCFI213:
 6945              		.cfi_def_cfa_offset 4
 6946              		.cfi_offset 7, -4
 6947 0002 85B0     		sub	sp, sp, #20
 6948              	.LCFI214:
 6949              		.cfi_def_cfa_offset 24
 6950 0004 00AF     		add	r7, sp, #0
 6951              	.LCFI215:
 6952              		.cfi_def_cfa_register 7
 6953 0006 7860     		str	r0, [r7, #4]
2871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 6954              		.loc 1 2871 12
 6955 0008 0023     		movs	r3, #0
 6956 000a FB60     		str	r3, [r7, #12]
2872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 6957              		.loc 1 2874 3
 6958 000c 7B68     		ldr	r3, [r7, #4]
 6959 000e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 6960 0012 012B     		cmp	r3, #1
 6961 0014 01D1     		bne	.L360
 6962              		.loc 1 2874 3 is_stmt 0 discriminator 1
 6963 0016 0223     		movs	r3, #2
 6964              		.loc 1 2874 3
 6965 0018 20E0     		b	.L361
 6966              	.L360:
 6967              		.loc 1 2874 3 discriminator 2
 6968 001a 7B68     		ldr	r3, [r7, #4]
 6969 001c 0122     		movs	r2, #1
 6970 001e 83F83C20 		strb	r2, [r3, #60]
2875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6971              		.loc 1 2876 17 is_stmt 1
 6972 0022 7B68     		ldr	r3, [r7, #4]
 6973 0024 2422     		movs	r2, #36
 6974 0026 83F83D20 		strb	r2, [r3, #61]
2877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 6975              		.loc 1 2879 17
 6976 002a 7B68     		ldr	r3, [r7, #4]
 6977 002c 1B68     		ldr	r3, [r3]
 6978              		.loc 1 2879 10
 6979 002e DB68     		ldr	r3, [r3, #12]
 6980 0030 FB60     		str	r3, [r7, #12]
2880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
2882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
 6981              		.loc 1 2882 10
 6982 0032 FB68     		ldr	r3, [r7, #12]
 6983 0034 23F00C03 		bic	r3, r3, #12
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 195


 6984 0038 FB60     		str	r3, [r7, #12]
2883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_RE;
 6985              		.loc 1 2885 10
 6986 003a FB68     		ldr	r3, [r7, #12]
 6987 003c 43F00403 		orr	r3, r3, #4
 6988 0040 FB60     		str	r3, [r7, #12]
2886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
2888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 6989              		.loc 1 2888 3
 6990 0042 7B68     		ldr	r3, [r7, #4]
 6991 0044 1B68     		ldr	r3, [r3]
 6992 0046 FA68     		ldr	r2, [r7, #12]
 6993 0048 DA60     		str	r2, [r3, #12]
2889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6994              		.loc 1 2890 17
 6995 004a 7B68     		ldr	r3, [r7, #4]
 6996 004c 2022     		movs	r2, #32
 6997 004e 83F83D20 		strb	r2, [r3, #61]
2891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 6998              		.loc 1 2893 3
 6999 0052 7B68     		ldr	r3, [r7, #4]
 7000 0054 0022     		movs	r2, #0
 7001 0056 83F83C20 		strb	r2, [r3, #60]
2894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 7002              		.loc 1 2895 10
 7003 005a 0023     		movs	r3, #0
 7004              	.L361:
2896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7005              		.loc 1 2896 1
 7006 005c 1846     		mov	r0, r3
 7007 005e 1437     		adds	r7, r7, #20
 7008              	.LCFI216:
 7009              		.cfi_def_cfa_offset 4
 7010 0060 BD46     		mov	sp, r7
 7011              	.LCFI217:
 7012              		.cfi_def_cfa_register 13
 7013              		@ sp needed
 7014 0062 5DF8047B 		ldr	r7, [sp], #4
 7015              	.LCFI218:
 7016              		.cfi_restore 7
 7017              		.cfi_def_cfa_offset 0
 7018 0066 7047     		bx	lr
 7019              		.cfi_endproc
 7020              	.LFE255:
 7022              		.section	.text.HAL_UART_GetState,"ax",%progbits
 7023              		.align	1
 7024              		.global	HAL_UART_GetState
 7025              		.syntax unified
 7026              		.thumb
 7027              		.thumb_func
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 196


 7029              	HAL_UART_GetState:
 7030              	.LFB256:
2897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Errors functions
2903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART State and Errors functions
2904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
2905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
2906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                  ##### Peripheral State and Errors functions #####
2908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  [..]
2910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    This subsection provides a set of functions allowing to return the State of
2911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    UART communication process, return Peripheral Errors occurred during communication
2912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    process
2913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetState() API can be helpful to check in run-time the state of the UART peripheral
2914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetError() check in run-time errors that could be occurred during communication.
2915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
2917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
2918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Returns the UART state.
2922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL state
2925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7031              		.loc 1 2927 1
 7032              		.cfi_startproc
 7033              		@ args = 0, pretend = 0, frame = 16
 7034              		@ frame_needed = 1, uses_anonymous_args = 0
 7035              		@ link register save eliminated.
 7036 0000 80B4     		push	{r7}
 7037              	.LCFI219:
 7038              		.cfi_def_cfa_offset 4
 7039              		.cfi_offset 7, -4
 7040 0002 85B0     		sub	sp, sp, #20
 7041              	.LCFI220:
 7042              		.cfi_def_cfa_offset 24
 7043 0004 00AF     		add	r7, sp, #0
 7044              	.LCFI221:
 7045              		.cfi_def_cfa_register 7
 7046 0006 7860     		str	r0, [r7, #4]
2928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t temp1 = 0x00U, temp2 = 0x00U;
 7047              		.loc 1 2928 12
 7048 0008 0023     		movs	r3, #0
 7049 000a FB60     		str	r3, [r7, #12]
 7050              		.loc 1 2928 27
 7051 000c 0023     		movs	r3, #0
 7052 000e BB60     		str	r3, [r7, #8]
2929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp1 = huart->gState;
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 197


 7053              		.loc 1 2929 16
 7054 0010 7B68     		ldr	r3, [r7, #4]
 7055 0012 93F83D30 		ldrb	r3, [r3, #61]
 7056 0016 DBB2     		uxtb	r3, r3
 7057              		.loc 1 2929 9
 7058 0018 FB60     		str	r3, [r7, #12]
2930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp2 = huart->RxState;
 7059              		.loc 1 2930 16
 7060 001a 7B68     		ldr	r3, [r7, #4]
 7061 001c 93F83E30 		ldrb	r3, [r3, #62]
 7062 0020 DBB2     		uxtb	r3, r3
 7063              		.loc 1 2930 9
 7064 0022 BB60     		str	r3, [r7, #8]
2931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
 7065              		.loc 1 2932 10
 7066 0024 FB68     		ldr	r3, [r7, #12]
 7067 0026 DAB2     		uxtb	r2, r3
 7068 0028 BB68     		ldr	r3, [r7, #8]
 7069 002a DBB2     		uxtb	r3, r3
 7070 002c 1343     		orrs	r3, r3, r2
 7071 002e DBB2     		uxtb	r3, r3
2933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7072              		.loc 1 2933 1
 7073 0030 1846     		mov	r0, r3
 7074 0032 1437     		adds	r7, r7, #20
 7075              	.LCFI222:
 7076              		.cfi_def_cfa_offset 4
 7077 0034 BD46     		mov	sp, r7
 7078              	.LCFI223:
 7079              		.cfi_def_cfa_register 13
 7080              		@ sp needed
 7081 0036 5DF8047B 		ldr	r7, [sp], #4
 7082              	.LCFI224:
 7083              		.cfi_restore 7
 7084              		.cfi_def_cfa_offset 0
 7085 003a 7047     		bx	lr
 7086              		.cfi_endproc
 7087              	.LFE256:
 7089              		.section	.text.HAL_UART_GetError,"ax",%progbits
 7090              		.align	1
 7091              		.global	HAL_UART_GetError
 7092              		.syntax unified
 7093              		.thumb
 7094              		.thumb_func
 7096              	HAL_UART_GetError:
 7097              	.LFB257:
2934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Return the UART error code
2937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART.
2939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval UART Error Code
2940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7098              		.loc 1 2942 1
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 198


 7099              		.cfi_startproc
 7100              		@ args = 0, pretend = 0, frame = 8
 7101              		@ frame_needed = 1, uses_anonymous_args = 0
 7102              		@ link register save eliminated.
 7103 0000 80B4     		push	{r7}
 7104              	.LCFI225:
 7105              		.cfi_def_cfa_offset 4
 7106              		.cfi_offset 7, -4
 7107 0002 83B0     		sub	sp, sp, #12
 7108              	.LCFI226:
 7109              		.cfi_def_cfa_offset 16
 7110 0004 00AF     		add	r7, sp, #0
 7111              	.LCFI227:
 7112              		.cfi_def_cfa_register 7
 7113 0006 7860     		str	r0, [r7, #4]
2943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return huart->ErrorCode;
 7114              		.loc 1 2943 15
 7115 0008 7B68     		ldr	r3, [r7, #4]
 7116 000a 1B6C     		ldr	r3, [r3, #64]
2944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7117              		.loc 1 2944 1
 7118 000c 1846     		mov	r0, r3
 7119 000e 0C37     		adds	r7, r7, #12
 7120              	.LCFI228:
 7121              		.cfi_def_cfa_offset 4
 7122 0010 BD46     		mov	sp, r7
 7123              	.LCFI229:
 7124              		.cfi_def_cfa_register 13
 7125              		@ sp needed
 7126 0012 5DF8047B 		ldr	r7, [sp], #4
 7127              	.LCFI230:
 7128              		.cfi_restore 7
 7129              		.cfi_def_cfa_offset 0
 7130 0016 7047     		bx	lr
 7131              		.cfi_endproc
 7132              	.LFE257:
 7134              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 7135              		.align	1
 7136              		.syntax unified
 7137              		.thumb
 7138              		.thumb_func
 7140              	UART_DMATransmitCplt:
 7141              	.LFB258:
2945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
2956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 199


2959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval none
2962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Init the UART Callback settings */
2967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
2972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxEventCallback           = HAL_UARTEx_RxEventCallback;         /* Legacy weak RxEventCall
2976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART transmit process complete callback.
2982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7142              		.loc 1 2987 1
 7143              		.cfi_startproc
 7144              		@ args = 0, pretend = 0, frame = 64
 7145              		@ frame_needed = 1, uses_anonymous_args = 0
 7146 0000 80B5     		push	{r7, lr}
 7147              	.LCFI231:
 7148              		.cfi_def_cfa_offset 8
 7149              		.cfi_offset 7, -8
 7150              		.cfi_offset 14, -4
 7151 0002 90B0     		sub	sp, sp, #64
 7152              	.LCFI232:
 7153              		.cfi_def_cfa_offset 72
 7154 0004 00AF     		add	r7, sp, #0
 7155              	.LCFI233:
 7156              		.cfi_def_cfa_register 7
 7157 0006 7860     		str	r0, [r7, #4]
2988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7158              		.loc 1 2988 23
 7159 0008 7B68     		ldr	r3, [r7, #4]
 7160 000a 9B6B     		ldr	r3, [r3, #56]
 7161 000c FB63     		str	r3, [r7, #60]
2989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
2990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
 7162              		.loc 1 2990 12
 7163 000e 7B68     		ldr	r3, [r7, #4]
 7164 0010 1B68     		ldr	r3, [r3]
 7165              		.loc 1 2990 22
 7166 0012 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 200


 7167              		.loc 1 2990 27
 7168 0014 03F48073 		and	r3, r3, #256
 7169              		.loc 1 2990 6
 7170 0018 002B     		cmp	r3, #0
 7171 001a 37D1     		bne	.L367
2991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 7172              		.loc 1 2992 24
 7173 001c FB6B     		ldr	r3, [r7, #60]
 7174 001e 0022     		movs	r2, #0
 7175 0020 DA84     		strh	r2, [r3, #38]	@ movhi
 7176              	.L370:
 7177              	.LBB559:
2993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
2995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
2996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 7178              		.loc 1 2996 5 discriminator 1
 7179 0022 FB6B     		ldr	r3, [r7, #60]
 7180 0024 1B68     		ldr	r3, [r3]
 7181 0026 1433     		adds	r3, r3, #20
 7182 0028 7B62     		str	r3, [r7, #36]
 7183              	.LBB560:
 7184              	.LBB561:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7185              		.loc 2 1072 4
 7186 002a 7B6A     		ldr	r3, [r7, #36]
 7187              		.syntax unified
 7188              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7189 002c 53E8003F 		ldrex r3, [r3]
 7190              	@ 0 "" 2
 7191              		.thumb
 7192              		.syntax unified
 7193 0030 3B62     		str	r3, [r7, #32]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7194              		.loc 2 1073 10
 7195 0032 3B6A     		ldr	r3, [r7, #32]
 7196              	.LBE561:
 7197              	.LBE560:
 7198              		.loc 1 2996 5 discriminator 1
 7199 0034 23F08003 		bic	r3, r3, #128
 7200 0038 BB63     		str	r3, [r7, #56]
 7201 003a FB6B     		ldr	r3, [r7, #60]
 7202 003c 1B68     		ldr	r3, [r3]
 7203 003e 1433     		adds	r3, r3, #20
 7204 0040 BA6B     		ldr	r2, [r7, #56]
 7205 0042 3A63     		str	r2, [r7, #48]
 7206 0044 FB62     		str	r3, [r7, #44]
 7207              	.LBB562:
 7208              	.LBB563:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7209              		.loc 2 1123 4
 7210 0046 F96A     		ldr	r1, [r7, #44]
 7211 0048 3A6B     		ldr	r2, [r7, #48]
 7212              		.syntax unified
 7213              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7214 004a 41E80023 		strex r3, r2, [r1]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 201


 7215              	@ 0 "" 2
 7216              		.thumb
 7217              		.syntax unified
 7218 004e BB62     		str	r3, [r7, #40]
 7219              		.loc 2 1124 10
 7220 0050 BB6A     		ldr	r3, [r7, #40]
 7221              	.LBE563:
 7222              	.LBE562:
 7223              		.loc 1 2996 5 discriminator 1
 7224 0052 002B     		cmp	r3, #0
 7225 0054 E5D1     		bne	.L370
 7226              	.L373:
 7227              	.LBE559:
 7228              	.LBB564:
2997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 7229              		.loc 1 2999 5 discriminator 1
 7230 0056 FB6B     		ldr	r3, [r7, #60]
 7231 0058 1B68     		ldr	r3, [r3]
 7232 005a 0C33     		adds	r3, r3, #12
 7233 005c 3B61     		str	r3, [r7, #16]
 7234              	.LBB565:
 7235              	.LBB566:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7236              		.loc 2 1072 4
 7237 005e 3B69     		ldr	r3, [r7, #16]
 7238              		.syntax unified
 7239              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7240 0060 53E8003F 		ldrex r3, [r3]
 7241              	@ 0 "" 2
 7242              		.thumb
 7243              		.syntax unified
 7244 0064 FB60     		str	r3, [r7, #12]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7245              		.loc 2 1073 10
 7246 0066 FB68     		ldr	r3, [r7, #12]
 7247              	.LBE566:
 7248              	.LBE565:
 7249              		.loc 1 2999 5 discriminator 1
 7250 0068 43F04003 		orr	r3, r3, #64
 7251 006c 7B63     		str	r3, [r7, #52]
 7252 006e FB6B     		ldr	r3, [r7, #60]
 7253 0070 1B68     		ldr	r3, [r3]
 7254 0072 0C33     		adds	r3, r3, #12
 7255 0074 7A6B     		ldr	r2, [r7, #52]
 7256 0076 FA61     		str	r2, [r7, #28]
 7257 0078 BB61     		str	r3, [r7, #24]
 7258              	.LBB567:
 7259              	.LBB568:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7260              		.loc 2 1123 4
 7261 007a B969     		ldr	r1, [r7, #24]
 7262 007c FA69     		ldr	r2, [r7, #28]
 7263              		.syntax unified
 7264              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7265 007e 41E80023 		strex r3, r2, [r1]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 202


 7266              	@ 0 "" 2
 7267              		.thumb
 7268              		.syntax unified
 7269 0082 7B61     		str	r3, [r7, #20]
 7270              		.loc 2 1124 10
 7271 0084 7B69     		ldr	r3, [r7, #20]
 7272              	.LBE568:
 7273              	.LBE567:
 7274              		.loc 1 2999 5 discriminator 1
 7275 0086 002B     		cmp	r3, #0
 7276 0088 E5D1     		bne	.L373
 7277              	.LBE564:
3000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Circular mode */
3003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7278              		.loc 1 3013 1
 7279 008a 02E0     		b	.L375
 7280              	.L367:
3010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 7281              		.loc 1 3010 5
 7282 008c F86B     		ldr	r0, [r7, #60]
 7283 008e FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 7284              	.L375:
 7285              		.loc 1 3013 1
 7286 0092 00BF     		nop
 7287 0094 4037     		adds	r7, r7, #64
 7288              	.LCFI234:
 7289              		.cfi_def_cfa_offset 8
 7290 0096 BD46     		mov	sp, r7
 7291              	.LCFI235:
 7292              		.cfi_def_cfa_register 13
 7293              		@ sp needed
 7294 0098 80BD     		pop	{r7, pc}
 7295              		.cfi_endproc
 7296              	.LFE258:
 7298              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 7299              		.align	1
 7300              		.syntax unified
 7301              		.thumb
 7302              		.thumb_func
 7304              	UART_DMATxHalfCplt:
 7305              	.LFB259:
3014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback
3017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 203


3018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7306              		.loc 1 3022 1
 7307              		.cfi_startproc
 7308              		@ args = 0, pretend = 0, frame = 16
 7309              		@ frame_needed = 1, uses_anonymous_args = 0
 7310 0000 80B5     		push	{r7, lr}
 7311              	.LCFI236:
 7312              		.cfi_def_cfa_offset 8
 7313              		.cfi_offset 7, -8
 7314              		.cfi_offset 14, -4
 7315 0002 84B0     		sub	sp, sp, #16
 7316              	.LCFI237:
 7317              		.cfi_def_cfa_offset 24
 7318 0004 00AF     		add	r7, sp, #0
 7319              	.LCFI238:
 7320              		.cfi_def_cfa_register 7
 7321 0006 7860     		str	r0, [r7, #4]
3023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7322              		.loc 1 3023 23
 7323 0008 7B68     		ldr	r3, [r7, #4]
 7324 000a 9B6B     		ldr	r3, [r3, #56]
 7325 000c FB60     		str	r3, [r7, #12]
3024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 7326              		.loc 1 3030 3
 7327 000e F868     		ldr	r0, [r7, #12]
 7328 0010 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
3031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7329              		.loc 1 3032 1
 7330 0014 00BF     		nop
 7331 0016 1037     		adds	r7, r7, #16
 7332              	.LCFI239:
 7333              		.cfi_def_cfa_offset 8
 7334 0018 BD46     		mov	sp, r7
 7335              	.LCFI240:
 7336              		.cfi_def_cfa_register 13
 7337              		@ sp needed
 7338 001a 80BD     		pop	{r7, pc}
 7339              		.cfi_endproc
 7340              	.LFE259:
 7342              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 7343              		.align	1
 7344              		.syntax unified
 7345              		.thumb
 7346              		.thumb_func
 7348              	UART_DMAReceiveCplt:
 7349              	.LFB260:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 204


3033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART receive process complete callback.
3036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7350              		.loc 1 3041 1
 7351              		.cfi_startproc
 7352              		@ args = 0, pretend = 0, frame = 112
 7353              		@ frame_needed = 1, uses_anonymous_args = 0
 7354 0000 80B5     		push	{r7, lr}
 7355              	.LCFI241:
 7356              		.cfi_def_cfa_offset 8
 7357              		.cfi_offset 7, -8
 7358              		.cfi_offset 14, -4
 7359 0002 9CB0     		sub	sp, sp, #112
 7360              	.LCFI242:
 7361              		.cfi_def_cfa_offset 120
 7362 0004 00AF     		add	r7, sp, #0
 7363              	.LCFI243:
 7364              		.cfi_def_cfa_register 7
 7365 0006 7860     		str	r0, [r7, #4]
3042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7366              		.loc 1 3042 23
 7367 0008 7B68     		ldr	r3, [r7, #4]
 7368 000a 9B6B     		ldr	r3, [r3, #56]
 7369 000c FB66     		str	r3, [r7, #108]
3043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
3044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
 7370              		.loc 1 3044 12
 7371 000e 7B68     		ldr	r3, [r7, #4]
 7372 0010 1B68     		ldr	r3, [r3]
 7373              		.loc 1 3044 22
 7374 0012 1B68     		ldr	r3, [r3]
 7375              		.loc 1 3044 27
 7376 0014 03F48073 		and	r3, r3, #256
 7377              		.loc 1 3044 6
 7378 0018 002B     		cmp	r3, #0
 7379 001a 72D1     		bne	.L378
3045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 7380              		.loc 1 3046 24
 7381 001c FB6E     		ldr	r3, [r7, #108]
 7382 001e 0022     		movs	r2, #0
 7383 0020 DA85     		strh	r2, [r3, #46]	@ movhi
 7384              	.L381:
 7385              	.LBB569:
3047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 7386              		.loc 1 3049 5 discriminator 1
 7387 0022 FB6E     		ldr	r3, [r7, #108]
 7388 0024 1B68     		ldr	r3, [r3]
 7389 0026 0C33     		adds	r3, r3, #12
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 205


 7390 0028 FB64     		str	r3, [r7, #76]
 7391              	.LBB570:
 7392              	.LBB571:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7393              		.loc 2 1072 4
 7394 002a FB6C     		ldr	r3, [r7, #76]
 7395              		.syntax unified
 7396              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7397 002c 53E8003F 		ldrex r3, [r3]
 7398              	@ 0 "" 2
 7399              		.thumb
 7400              		.syntax unified
 7401 0030 BB64     		str	r3, [r7, #72]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7402              		.loc 2 1073 10
 7403 0032 BB6C     		ldr	r3, [r7, #72]
 7404              	.LBE571:
 7405              	.LBE570:
 7406              		.loc 1 3049 5 discriminator 1
 7407 0034 23F48073 		bic	r3, r3, #256
 7408 0038 BB66     		str	r3, [r7, #104]
 7409 003a FB6E     		ldr	r3, [r7, #108]
 7410 003c 1B68     		ldr	r3, [r3]
 7411 003e 0C33     		adds	r3, r3, #12
 7412 0040 BA6E     		ldr	r2, [r7, #104]
 7413 0042 BA65     		str	r2, [r7, #88]
 7414 0044 7B65     		str	r3, [r7, #84]
 7415              	.LBB572:
 7416              	.LBB573:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7417              		.loc 2 1123 4
 7418 0046 796D     		ldr	r1, [r7, #84]
 7419 0048 BA6D     		ldr	r2, [r7, #88]
 7420              		.syntax unified
 7421              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7422 004a 41E80023 		strex r3, r2, [r1]
 7423              	@ 0 "" 2
 7424              		.thumb
 7425              		.syntax unified
 7426 004e 3B65     		str	r3, [r7, #80]
 7427              		.loc 2 1124 10
 7428 0050 3B6D     		ldr	r3, [r7, #80]
 7429              	.LBE573:
 7430              	.LBE572:
 7431              		.loc 1 3049 5 discriminator 1
 7432 0052 002B     		cmp	r3, #0
 7433 0054 E5D1     		bne	.L381
 7434              	.L384:
 7435              	.LBE569:
 7436              	.LBB574:
3050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 7437              		.loc 1 3050 5 discriminator 1
 7438 0056 FB6E     		ldr	r3, [r7, #108]
 7439 0058 1B68     		ldr	r3, [r3]
 7440 005a 1433     		adds	r3, r3, #20
 7441 005c BB63     		str	r3, [r7, #56]
 7442              	.LBB575:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 206


 7443              	.LBB576:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7444              		.loc 2 1072 4
 7445 005e BB6B     		ldr	r3, [r7, #56]
 7446              		.syntax unified
 7447              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7448 0060 53E8003F 		ldrex r3, [r3]
 7449              	@ 0 "" 2
 7450              		.thumb
 7451              		.syntax unified
 7452 0064 7B63     		str	r3, [r7, #52]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7453              		.loc 2 1073 10
 7454 0066 7B6B     		ldr	r3, [r7, #52]
 7455              	.LBE576:
 7456              	.LBE575:
 7457              		.loc 1 3050 5 discriminator 1
 7458 0068 23F00103 		bic	r3, r3, #1
 7459 006c 7B66     		str	r3, [r7, #100]
 7460 006e FB6E     		ldr	r3, [r7, #108]
 7461 0070 1B68     		ldr	r3, [r3]
 7462 0072 1433     		adds	r3, r3, #20
 7463 0074 7A6E     		ldr	r2, [r7, #100]
 7464 0076 7A64     		str	r2, [r7, #68]
 7465 0078 3B64     		str	r3, [r7, #64]
 7466              	.LBB577:
 7467              	.LBB578:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7468              		.loc 2 1123 4
 7469 007a 396C     		ldr	r1, [r7, #64]
 7470 007c 7A6C     		ldr	r2, [r7, #68]
 7471              		.syntax unified
 7472              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7473 007e 41E80023 		strex r3, r2, [r1]
 7474              	@ 0 "" 2
 7475              		.thumb
 7476              		.syntax unified
 7477 0082 FB63     		str	r3, [r7, #60]
 7478              		.loc 2 1124 10
 7479 0084 FB6B     		ldr	r3, [r7, #60]
 7480              	.LBE578:
 7481              	.LBE577:
 7482              		.loc 1 3050 5 discriminator 1
 7483 0086 002B     		cmp	r3, #0
 7484 0088 E5D1     		bne	.L384
 7485              	.L387:
 7486              	.LBE574:
 7487              	.LBB579:
3051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit
3053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
3054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 7488              		.loc 1 3054 5 discriminator 1
 7489 008a FB6E     		ldr	r3, [r7, #108]
 7490 008c 1B68     		ldr	r3, [r3]
 7491 008e 1433     		adds	r3, r3, #20
 7492 0090 7B62     		str	r3, [r7, #36]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 207


 7493              	.LBB580:
 7494              	.LBB581:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7495              		.loc 2 1072 4
 7496 0092 7B6A     		ldr	r3, [r7, #36]
 7497              		.syntax unified
 7498              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7499 0094 53E8003F 		ldrex r3, [r3]
 7500              	@ 0 "" 2
 7501              		.thumb
 7502              		.syntax unified
 7503 0098 3B62     		str	r3, [r7, #32]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7504              		.loc 2 1073 10
 7505 009a 3B6A     		ldr	r3, [r7, #32]
 7506              	.LBE581:
 7507              	.LBE580:
 7508              		.loc 1 3054 5 discriminator 1
 7509 009c 23F04003 		bic	r3, r3, #64
 7510 00a0 3B66     		str	r3, [r7, #96]
 7511 00a2 FB6E     		ldr	r3, [r7, #108]
 7512 00a4 1B68     		ldr	r3, [r3]
 7513 00a6 1433     		adds	r3, r3, #20
 7514 00a8 3A6E     		ldr	r2, [r7, #96]
 7515 00aa 3A63     		str	r2, [r7, #48]
 7516 00ac FB62     		str	r3, [r7, #44]
 7517              	.LBB582:
 7518              	.LBB583:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7519              		.loc 2 1123 4
 7520 00ae F96A     		ldr	r1, [r7, #44]
 7521 00b0 3A6B     		ldr	r2, [r7, #48]
 7522              		.syntax unified
 7523              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7524 00b2 41E80023 		strex r3, r2, [r1]
 7525              	@ 0 "" 2
 7526              		.thumb
 7527              		.syntax unified
 7528 00b6 BB62     		str	r3, [r7, #40]
 7529              		.loc 2 1124 10
 7530 00b8 BB6A     		ldr	r3, [r7, #40]
 7531              	.LBE583:
 7532              	.LBE582:
 7533              		.loc 1 3054 5 discriminator 1
 7534 00ba 002B     		cmp	r3, #0
 7535 00bc E5D1     		bne	.L387
 7536              	.LBE579:
3055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 7537              		.loc 1 3057 20
 7538 00be FB6E     		ldr	r3, [r7, #108]
 7539 00c0 2022     		movs	r2, #32
 7540 00c2 83F83E20 		strb	r2, [r3, #62]
3058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* If Reception till IDLE event has been selected, Disable IDLE Interrupt */
3060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 208


 7541              		.loc 1 3060 14
 7542 00c6 FB6E     		ldr	r3, [r7, #108]
 7543 00c8 1B6B     		ldr	r3, [r3, #48]
 7544              		.loc 1 3060 8
 7545 00ca 012B     		cmp	r3, #1
 7546 00cc 19D1     		bne	.L378
 7547              	.L390:
 7548              	.LBB584:
3061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 7549              		.loc 1 3062 7 discriminator 1
 7550 00ce FB6E     		ldr	r3, [r7, #108]
 7551 00d0 1B68     		ldr	r3, [r3]
 7552 00d2 0C33     		adds	r3, r3, #12
 7553 00d4 3B61     		str	r3, [r7, #16]
 7554              	.LBB585:
 7555              	.LBB586:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7556              		.loc 2 1072 4
 7557 00d6 3B69     		ldr	r3, [r7, #16]
 7558              		.syntax unified
 7559              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7560 00d8 53E8003F 		ldrex r3, [r3]
 7561              	@ 0 "" 2
 7562              		.thumb
 7563              		.syntax unified
 7564 00dc FB60     		str	r3, [r7, #12]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7565              		.loc 2 1073 10
 7566 00de FB68     		ldr	r3, [r7, #12]
 7567              	.LBE586:
 7568              	.LBE585:
 7569              		.loc 1 3062 7 discriminator 1
 7570 00e0 23F01003 		bic	r3, r3, #16
 7571 00e4 FB65     		str	r3, [r7, #92]
 7572 00e6 FB6E     		ldr	r3, [r7, #108]
 7573 00e8 1B68     		ldr	r3, [r3]
 7574 00ea 0C33     		adds	r3, r3, #12
 7575 00ec FA6D     		ldr	r2, [r7, #92]
 7576 00ee FA61     		str	r2, [r7, #28]
 7577 00f0 BB61     		str	r3, [r7, #24]
 7578              	.LBB587:
 7579              	.LBB588:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7580              		.loc 2 1123 4
 7581 00f2 B969     		ldr	r1, [r7, #24]
 7582 00f4 FA69     		ldr	r2, [r7, #28]
 7583              		.syntax unified
 7584              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7585 00f6 41E80023 		strex r3, r2, [r1]
 7586              	@ 0 "" 2
 7587              		.thumb
 7588              		.syntax unified
 7589 00fa 7B61     		str	r3, [r7, #20]
 7590              		.loc 2 1124 10
 7591 00fc 7B69     		ldr	r3, [r7, #20]
 7592              	.LBE588:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 209


 7593              	.LBE587:
 7594              		.loc 1 3062 7 discriminator 1
 7595 00fe 002B     		cmp	r3, #0
 7596 0100 E5D1     		bne	.L390
 7597              	.L378:
 7598              	.LBE584:
3063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check current reception Mode :
3067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 7599              		.loc 1 3068 12
 7600 0102 FB6E     		ldr	r3, [r7, #108]
 7601 0104 1B6B     		ldr	r3, [r3, #48]
 7602              		.loc 1 3068 6
 7603 0106 012B     		cmp	r3, #1
 7604 0108 06D1     		bne	.L391
3069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize);
3073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 7605              		.loc 1 3075 5
 7606 010a FB6E     		ldr	r3, [r7, #108]
 7607 010c 9B8D     		ldrh	r3, [r3, #44]
 7608 010e 1946     		mov	r1, r3
 7609 0110 F86E     		ldr	r0, [r7, #108]
 7610 0112 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
3076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* In other cases : use Rx Complete callback */
3081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call registered Rx complete callback*/
3083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxCpltCallback(huart);
3084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call legacy weak Rx complete callback*/
3086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_RxCpltCallback(huart);
3087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7611              		.loc 1 3089 1
 7612 0116 02E0     		b	.L393
 7613              	.L391:
3086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 7614              		.loc 1 3086 5
 7615 0118 F86E     		ldr	r0, [r7, #108]
 7616 011a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 7617              	.L393:
 7618              		.loc 1 3089 1
 7619 011e 00BF     		nop
 7620 0120 7037     		adds	r7, r7, #112
 7621              	.LCFI244:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 210


 7622              		.cfi_def_cfa_offset 8
 7623 0122 BD46     		mov	sp, r7
 7624              	.LCFI245:
 7625              		.cfi_def_cfa_register 13
 7626              		@ sp needed
 7627 0124 80BD     		pop	{r7, pc}
 7628              		.cfi_endproc
 7629              	.LFE260:
 7631              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 7632              		.align	1
 7633              		.syntax unified
 7634              		.thumb
 7635              		.thumb_func
 7637              	UART_DMARxHalfCplt:
 7638              	.LFB261:
3090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback
3093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7639              		.loc 1 3098 1
 7640              		.cfi_startproc
 7641              		@ args = 0, pretend = 0, frame = 16
 7642              		@ frame_needed = 1, uses_anonymous_args = 0
 7643 0000 80B5     		push	{r7, lr}
 7644              	.LCFI246:
 7645              		.cfi_def_cfa_offset 8
 7646              		.cfi_offset 7, -8
 7647              		.cfi_offset 14, -4
 7648 0002 84B0     		sub	sp, sp, #16
 7649              	.LCFI247:
 7650              		.cfi_def_cfa_offset 24
 7651 0004 00AF     		add	r7, sp, #0
 7652              	.LCFI248:
 7653              		.cfi_def_cfa_register 7
 7654 0006 7860     		str	r0, [r7, #4]
3099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7655              		.loc 1 3099 23
 7656 0008 7B68     		ldr	r3, [r7, #4]
 7657 000a 9B6B     		ldr	r3, [r3, #56]
 7658 000c FB60     		str	r3, [r7, #12]
3100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check current reception Mode :
3102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 7659              		.loc 1 3103 12
 7660 000e FB68     		ldr	r3, [r7, #12]
 7661 0010 1B6B     		ldr	r3, [r3, #48]
 7662              		.loc 1 3103 6
 7663 0012 012B     		cmp	r3, #1
 7664 0014 08D1     		bne	.L395
3104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 211


3106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize / 2U);
3108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize / 2U);
 7665              		.loc 1 3110 44
 7666 0016 FB68     		ldr	r3, [r7, #12]
 7667 0018 9B8D     		ldrh	r3, [r3, #44]
 7668              		.loc 1 3110 5
 7669 001a 5B08     		lsrs	r3, r3, #1
 7670 001c 9BB2     		uxth	r3, r3
 7671 001e 1946     		mov	r1, r3
 7672 0020 F868     		ldr	r0, [r7, #12]
 7673 0022 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
3111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* In other cases : use Rx Half Complete callback */
3116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call registered Rx Half complete callback*/
3118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxHalfCpltCallback(huart);
3119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call legacy weak Rx Half complete callback*/
3121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_RxHalfCpltCallback(huart);
3122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7674              		.loc 1 3124 1
 7675 0026 02E0     		b	.L397
 7676              	.L395:
3121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 7677              		.loc 1 3121 5
 7678 0028 F868     		ldr	r0, [r7, #12]
 7679 002a FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 7680              	.L397:
 7681              		.loc 1 3124 1
 7682 002e 00BF     		nop
 7683 0030 1037     		adds	r7, r7, #16
 7684              	.LCFI249:
 7685              		.cfi_def_cfa_offset 8
 7686 0032 BD46     		mov	sp, r7
 7687              	.LCFI250:
 7688              		.cfi_def_cfa_register 13
 7689              		@ sp needed
 7690 0034 80BD     		pop	{r7, pc}
 7691              		.cfi_endproc
 7692              	.LFE261:
 7694              		.section	.text.UART_DMAError,"ax",%progbits
 7695              		.align	1
 7696              		.syntax unified
 7697              		.thumb
 7698              		.thumb_func
 7700              	UART_DMAError:
 7701              	.LFB262:
3125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 212


3127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication error callback.
3128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7702              		.loc 1 3133 1
 7703              		.cfi_startproc
 7704              		@ args = 0, pretend = 0, frame = 16
 7705              		@ frame_needed = 1, uses_anonymous_args = 0
 7706 0000 80B5     		push	{r7, lr}
 7707              	.LCFI251:
 7708              		.cfi_def_cfa_offset 8
 7709              		.cfi_offset 7, -8
 7710              		.cfi_offset 14, -4
 7711 0002 84B0     		sub	sp, sp, #16
 7712              	.LCFI252:
 7713              		.cfi_def_cfa_offset 24
 7714 0004 00AF     		add	r7, sp, #0
 7715              	.LCFI253:
 7716              		.cfi_def_cfa_register 7
 7717 0006 7860     		str	r0, [r7, #4]
3134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 7718              		.loc 1 3134 12
 7719 0008 0023     		movs	r3, #0
 7720 000a FB60     		str	r3, [r7, #12]
3135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7721              		.loc 1 3135 23
 7722 000c 7B68     		ldr	r3, [r7, #4]
 7723 000e 9B6B     		ldr	r3, [r3, #56]
 7724 0010 BB60     		str	r3, [r7, #8]
3136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 7725              		.loc 1 3138 16
 7726 0012 BB68     		ldr	r3, [r7, #8]
 7727 0014 1B68     		ldr	r3, [r3]
 7728 0016 5B69     		ldr	r3, [r3, #20]
 7729 0018 03F08003 		and	r3, r3, #128
 7730 001c 802B     		cmp	r3, #128
 7731 001e 0CBF     		ite	eq
 7732 0020 0123     		moveq	r3, #1
 7733 0022 0023     		movne	r3, #0
 7734 0024 DBB2     		uxtb	r3, r3
 7735              		.loc 1 3138 14
 7736 0026 FB60     		str	r3, [r7, #12]
3139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 7737              		.loc 1 3139 13
 7738 0028 BB68     		ldr	r3, [r7, #8]
 7739 002a 93F83D30 		ldrb	r3, [r3, #61]
 7740 002e DBB2     		uxtb	r3, r3
 7741              		.loc 1 3139 6
 7742 0030 212B     		cmp	r3, #33
 7743 0032 08D1     		bne	.L399
 7744              		.loc 1 3139 49 discriminator 1
 7745 0034 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 213


 7746 0036 002B     		cmp	r3, #0
 7747 0038 05D0     		beq	.L399
3140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 7748              		.loc 1 3141 24
 7749 003a BB68     		ldr	r3, [r7, #8]
 7750 003c 0022     		movs	r2, #0
 7751 003e DA84     		strh	r2, [r3, #38]	@ movhi
3142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 7752              		.loc 1 3142 5
 7753 0040 B868     		ldr	r0, [r7, #8]
 7754 0042 FFF7FEFF 		bl	UART_EndTxTransfer
 7755              	.L399:
3143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 7756              		.loc 1 3146 16
 7757 0046 BB68     		ldr	r3, [r7, #8]
 7758 0048 1B68     		ldr	r3, [r3]
 7759 004a 5B69     		ldr	r3, [r3, #20]
 7760 004c 03F04003 		and	r3, r3, #64
 7761 0050 402B     		cmp	r3, #64
 7762 0052 0CBF     		ite	eq
 7763 0054 0123     		moveq	r3, #1
 7764 0056 0023     		movne	r3, #0
 7765 0058 DBB2     		uxtb	r3, r3
 7766              		.loc 1 3146 14
 7767 005a FB60     		str	r3, [r7, #12]
3147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 7768              		.loc 1 3147 13
 7769 005c BB68     		ldr	r3, [r7, #8]
 7770 005e 93F83E30 		ldrb	r3, [r3, #62]
 7771 0062 DBB2     		uxtb	r3, r3
 7772              		.loc 1 3147 6
 7773 0064 222B     		cmp	r3, #34
 7774 0066 08D1     		bne	.L400
 7775              		.loc 1 3147 50 discriminator 1
 7776 0068 FB68     		ldr	r3, [r7, #12]
 7777 006a 002B     		cmp	r3, #0
 7778 006c 05D0     		beq	.L400
3148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 7779              		.loc 1 3149 24
 7780 006e BB68     		ldr	r3, [r7, #8]
 7781 0070 0022     		movs	r2, #0
 7782 0072 DA85     		strh	r2, [r3, #46]	@ movhi
3150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 7783              		.loc 1 3150 5
 7784 0074 B868     		ldr	r0, [r7, #8]
 7785 0076 FFF7FEFF 		bl	UART_EndRxTransfer
 7786              	.L400:
3151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 7787              		.loc 1 3153 8
 7788 007a BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 214


 7789 007c 1B6C     		ldr	r3, [r3, #64]
 7790              		.loc 1 3153 20
 7791 007e 43F01002 		orr	r2, r3, #16
 7792 0082 BB68     		ldr	r3, [r7, #8]
 7793 0084 1A64     		str	r2, [r3, #64]
3154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered error callback*/
3156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 7794              		.loc 1 3159 3
 7795 0086 B868     		ldr	r0, [r7, #8]
 7796 0088 FFF7FEFF 		bl	HAL_UART_ErrorCallback
3160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7797              		.loc 1 3161 1
 7798 008c 00BF     		nop
 7799 008e 1037     		adds	r7, r7, #16
 7800              	.LCFI254:
 7801              		.cfi_def_cfa_offset 8
 7802 0090 BD46     		mov	sp, r7
 7803              	.LCFI255:
 7804              		.cfi_def_cfa_register 13
 7805              		@ sp needed
 7806 0092 80BD     		pop	{r7, pc}
 7807              		.cfi_endproc
 7808              	.LFE262:
 7810              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 7811              		.align	1
 7812              		.syntax unified
 7813              		.thumb
 7814              		.thumb_func
 7816              	UART_WaitOnFlagUntilTimeout:
 7817              	.LFB263:
3162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout. It waits
3165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         until a flag is no longer in the specified status.
3166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Flag specifies the UART flag to check.
3169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Status The actual Flag status (SET or RESET).
3170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Tickstart Tick start value
3171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
3172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
3173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
3175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                                      uint32_t Tickstart, uint32_t Timeout)
3176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7818              		.loc 1 3176 1
 7819              		.cfi_startproc
 7820              		@ args = 4, pretend = 0, frame = 64
 7821              		@ frame_needed = 1, uses_anonymous_args = 0
 7822 0000 80B5     		push	{r7, lr}
 7823              	.LCFI256:
 7824              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 215


 7825              		.cfi_offset 7, -8
 7826              		.cfi_offset 14, -4
 7827 0002 90B0     		sub	sp, sp, #64
 7828              	.LCFI257:
 7829              		.cfi_def_cfa_offset 72
 7830 0004 00AF     		add	r7, sp, #0
 7831              	.LCFI258:
 7832              		.cfi_def_cfa_register 7
 7833 0006 F860     		str	r0, [r7, #12]
 7834 0008 B960     		str	r1, [r7, #8]
 7835 000a 3B60     		str	r3, [r7]
 7836 000c 1346     		mov	r3, r2
 7837 000e FB71     		strb	r3, [r7, #7]
3177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Wait until flag is set */
3178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 7838              		.loc 1 3178 9
 7839 0010 50E0     		b	.L403
 7840              	.L412:
3179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check for the Timeout */
3181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
 7841              		.loc 1 3181 8
 7842 0012 BB6C     		ldr	r3, [r7, #72]
 7843 0014 B3F1FF3F 		cmp	r3, #-1
 7844 0018 4CD0     		beq	.L403
3182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 7845              		.loc 1 3183 10
 7846 001a BB6C     		ldr	r3, [r7, #72]
 7847 001c 002B     		cmp	r3, #0
 7848 001e 07D0     		beq	.L407
 7849              		.loc 1 3183 32 discriminator 1
 7850 0020 FFF7FEFF 		bl	HAL_GetTick
 7851 0024 0246     		mov	r2, r0
 7852              		.loc 1 3183 46 discriminator 1
 7853 0026 3B68     		ldr	r3, [r7]
 7854 0028 D31A     		subs	r3, r2, r3
 7855              		.loc 1 3183 27 discriminator 1
 7856 002a BA6C     		ldr	r2, [r7, #72]
 7857 002c 9A42     		cmp	r2, r3
 7858 002e 41D2     		bcs	.L403
 7859              	.L407:
 7860              	.LBB589:
3184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
3186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE
 7861              		.loc 1 3186 9 discriminator 1
 7862 0030 FB68     		ldr	r3, [r7, #12]
 7863 0032 1B68     		ldr	r3, [r3]
 7864 0034 0C33     		adds	r3, r3, #12
 7865 0036 BB62     		str	r3, [r7, #40]
 7866              	.LBB590:
 7867              	.LBB591:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7868              		.loc 2 1072 4
 7869 0038 BB6A     		ldr	r3, [r7, #40]
 7870              		.syntax unified
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 216


 7871              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7872 003a 53E8003F 		ldrex r3, [r3]
 7873              	@ 0 "" 2
 7874              		.thumb
 7875              		.syntax unified
 7876 003e 7B62     		str	r3, [r7, #36]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7877              		.loc 2 1073 10
 7878 0040 7B6A     		ldr	r3, [r7, #36]
 7879              	.LBE591:
 7880              	.LBE590:
 7881              		.loc 1 3186 9 discriminator 1
 7882 0042 23F4D073 		bic	r3, r3, #416
 7883 0046 FB63     		str	r3, [r7, #60]
 7884 0048 FB68     		ldr	r3, [r7, #12]
 7885 004a 1B68     		ldr	r3, [r3]
 7886 004c 0C33     		adds	r3, r3, #12
 7887 004e FA6B     		ldr	r2, [r7, #60]
 7888 0050 7A63     		str	r2, [r7, #52]
 7889 0052 3B63     		str	r3, [r7, #48]
 7890              	.LBB592:
 7891              	.LBB593:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7892              		.loc 2 1123 4
 7893 0054 396B     		ldr	r1, [r7, #48]
 7894 0056 7A6B     		ldr	r2, [r7, #52]
 7895              		.syntax unified
 7896              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7897 0058 41E80023 		strex r3, r2, [r1]
 7898              	@ 0 "" 2
 7899              		.thumb
 7900              		.syntax unified
 7901 005c FB62     		str	r3, [r7, #44]
 7902              		.loc 2 1124 10
 7903 005e FB6A     		ldr	r3, [r7, #44]
 7904              	.LBE593:
 7905              	.LBE592:
 7906              		.loc 1 3186 9 discriminator 1
 7907 0060 002B     		cmp	r3, #0
 7908 0062 E5D1     		bne	.L407
 7909              	.L410:
 7910              	.LBE589:
 7911              	.LBB594:
3187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 7912              		.loc 1 3187 9 discriminator 1
 7913 0064 FB68     		ldr	r3, [r7, #12]
 7914 0066 1B68     		ldr	r3, [r3]
 7915 0068 1433     		adds	r3, r3, #20
 7916 006a 7B61     		str	r3, [r7, #20]
 7917              	.LBB595:
 7918              	.LBB596:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7919              		.loc 2 1072 4
 7920 006c 7B69     		ldr	r3, [r7, #20]
 7921              		.syntax unified
 7922              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7923 006e 53E8003F 		ldrex r3, [r3]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 217


 7924              	@ 0 "" 2
 7925              		.thumb
 7926              		.syntax unified
 7927 0072 3B61     		str	r3, [r7, #16]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7928              		.loc 2 1073 10
 7929 0074 3B69     		ldr	r3, [r7, #16]
 7930              	.LBE596:
 7931              	.LBE595:
 7932              		.loc 1 3187 9 discriminator 1
 7933 0076 23F00103 		bic	r3, r3, #1
 7934 007a BB63     		str	r3, [r7, #56]
 7935 007c FB68     		ldr	r3, [r7, #12]
 7936 007e 1B68     		ldr	r3, [r3]
 7937 0080 1433     		adds	r3, r3, #20
 7938 0082 BA6B     		ldr	r2, [r7, #56]
 7939 0084 3A62     		str	r2, [r7, #32]
 7940 0086 FB61     		str	r3, [r7, #28]
 7941              	.LBB597:
 7942              	.LBB598:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7943              		.loc 2 1123 4
 7944 0088 F969     		ldr	r1, [r7, #28]
 7945 008a 3A6A     		ldr	r2, [r7, #32]
 7946              		.syntax unified
 7947              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7948 008c 41E80023 		strex r3, r2, [r1]
 7949              	@ 0 "" 2
 7950              		.thumb
 7951              		.syntax unified
 7952 0090 BB61     		str	r3, [r7, #24]
 7953              		.loc 2 1124 10
 7954 0092 BB69     		ldr	r3, [r7, #24]
 7955              	.LBE598:
 7956              	.LBE597:
 7957              		.loc 1 3187 9 discriminator 1
 7958 0094 002B     		cmp	r3, #0
 7959 0096 E5D1     		bne	.L410
 7960              	.LBE594:
3188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
 7961              		.loc 1 3189 24
 7962 0098 FB68     		ldr	r3, [r7, #12]
 7963 009a 2022     		movs	r2, #32
 7964 009c 83F83D20 		strb	r2, [r3, #61]
3190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 7965              		.loc 1 3190 24
 7966 00a0 FB68     		ldr	r3, [r7, #12]
 7967 00a2 2022     		movs	r2, #32
 7968 00a4 83F83E20 		strb	r2, [r3, #62]
3191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Process Unlocked */
3193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 7969              		.loc 1 3193 9
 7970 00a8 FB68     		ldr	r3, [r7, #12]
 7971 00aa 0022     		movs	r2, #0
 7972 00ac 83F83C20 		strb	r2, [r3, #60]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 218


3194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         return HAL_TIMEOUT;
 7973              		.loc 1 3195 16
 7974 00b0 0323     		movs	r3, #3
 7975 00b2 0FE0     		b	.L411
 7976              	.L403:
3178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 7977              		.loc 1 3178 11
 7978 00b4 FB68     		ldr	r3, [r7, #12]
 7979 00b6 1B68     		ldr	r3, [r3]
 7980 00b8 1A68     		ldr	r2, [r3]
 7981 00ba BB68     		ldr	r3, [r7, #8]
 7982 00bc 1340     		ands	r3, r3, r2
3178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 7983              		.loc 1 3178 50
 7984 00be BA68     		ldr	r2, [r7, #8]
 7985 00c0 9A42     		cmp	r2, r3
 7986 00c2 0CBF     		ite	eq
 7987 00c4 0123     		moveq	r3, #1
 7988 00c6 0023     		movne	r3, #0
 7989 00c8 DBB2     		uxtb	r3, r3
 7990 00ca 1A46     		mov	r2, r3
3178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 7991              		.loc 1 3178 59
 7992 00cc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7993 00ce 9A42     		cmp	r2, r3
 7994 00d0 9FD0     		beq	.L412
3196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 7995              		.loc 1 3199 10
 7996 00d2 0023     		movs	r3, #0
 7997              	.L411:
3200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7998              		.loc 1 3200 1
 7999 00d4 1846     		mov	r0, r3
 8000 00d6 4037     		adds	r7, r7, #64
 8001              	.LCFI259:
 8002              		.cfi_def_cfa_offset 8
 8003 00d8 BD46     		mov	sp, r7
 8004              	.LCFI260:
 8005              		.cfi_def_cfa_register 13
 8006              		@ sp needed
 8007 00da 80BD     		pop	{r7, pc}
 8008              		.cfi_endproc
 8009              	.LFE263:
 8011              		.section	.text.UART_Start_Receive_IT,"ax",%progbits
 8012              		.align	1
 8013              		.global	UART_Start_Receive_IT
 8014              		.syntax unified
 8015              		.thumb
 8016              		.thumb_func
 8018              	UART_Start_Receive_IT:
 8019              	.LFB264:
3201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 219


3203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Start Receive operation in interrupt mode.
3204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in Interrupt mode
3205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
3209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
3212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8020              		.loc 1 3214 1
 8021              		.cfi_startproc
 8022              		@ args = 0, pretend = 0, frame = 16
 8023              		@ frame_needed = 1, uses_anonymous_args = 0
 8024              		@ link register save eliminated.
 8025 0000 80B4     		push	{r7}
 8026              	.LCFI261:
 8027              		.cfi_def_cfa_offset 4
 8028              		.cfi_offset 7, -4
 8029 0002 85B0     		sub	sp, sp, #20
 8030              	.LCFI262:
 8031              		.cfi_def_cfa_offset 24
 8032 0004 00AF     		add	r7, sp, #0
 8033              	.LCFI263:
 8034              		.cfi_def_cfa_register 7
 8035 0006 F860     		str	r0, [r7, #12]
 8036 0008 B960     		str	r1, [r7, #8]
 8037 000a 1346     		mov	r3, r2
 8038 000c FB80     		strh	r3, [r7, #6]	@ movhi
3215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
 8039              		.loc 1 3215 21
 8040 000e FB68     		ldr	r3, [r7, #12]
 8041 0010 BA68     		ldr	r2, [r7, #8]
 8042 0012 9A62     		str	r2, [r3, #40]
3216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferSize = Size;
 8043              		.loc 1 3216 21
 8044 0014 FB68     		ldr	r3, [r7, #12]
 8045 0016 FA88     		ldrh	r2, [r7, #6]	@ movhi
 8046 0018 9A85     		strh	r2, [r3, #44]	@ movhi
3217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = Size;
 8047              		.loc 1 3217 22
 8048 001a FB68     		ldr	r3, [r7, #12]
 8049 001c FA88     		ldrh	r2, [r7, #6]	@ movhi
 8050 001e DA85     		strh	r2, [r3, #46]	@ movhi
3218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 8051              		.loc 1 3219 20
 8052 0020 FB68     		ldr	r3, [r7, #12]
 8053 0022 0022     		movs	r2, #0
 8054 0024 1A64     		str	r2, [r3, #64]
3220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 8055              		.loc 1 3220 18
 8056 0026 FB68     		ldr	r3, [r7, #12]
 8057 0028 2222     		movs	r2, #34
 8058 002a 83F83E20 		strb	r2, [r3, #62]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 220


3221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
3223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 8059              		.loc 1 3223 3
 8060 002e FB68     		ldr	r3, [r7, #12]
 8061 0030 0022     		movs	r2, #0
 8062 0032 83F83C20 		strb	r2, [r3, #60]
3224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->Init.Parity != UART_PARITY_NONE)
 8063              		.loc 1 3225 18
 8064 0036 FB68     		ldr	r3, [r7, #12]
 8065 0038 1B69     		ldr	r3, [r3, #16]
 8066              		.loc 1 3225 6
 8067 003a 002B     		cmp	r3, #0
 8068 003c 07D0     		beq	.L414
3226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
3228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 8069              		.loc 1 3228 5
 8070 003e FB68     		ldr	r3, [r7, #12]
 8071 0040 1B68     		ldr	r3, [r3]
 8072 0042 DA68     		ldr	r2, [r3, #12]
 8073 0044 FB68     		ldr	r3, [r7, #12]
 8074 0046 1B68     		ldr	r3, [r3]
 8075 0048 42F48072 		orr	r2, r2, #256
 8076 004c DA60     		str	r2, [r3, #12]
 8077              	.L414:
3229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
 8078              		.loc 1 3232 3
 8079 004e FB68     		ldr	r3, [r7, #12]
 8080 0050 1B68     		ldr	r3, [r3]
 8081 0052 5A69     		ldr	r2, [r3, #20]
 8082 0054 FB68     		ldr	r3, [r7, #12]
 8083 0056 1B68     		ldr	r3, [r3]
 8084 0058 42F00102 		orr	r2, r2, #1
 8085 005c 5A61     		str	r2, [r3, #20]
3233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the UART Data Register not empty Interrupt */
3235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
 8086              		.loc 1 3235 3
 8087 005e FB68     		ldr	r3, [r7, #12]
 8088 0060 1B68     		ldr	r3, [r3]
 8089 0062 DA68     		ldr	r2, [r3, #12]
 8090 0064 FB68     		ldr	r3, [r7, #12]
 8091 0066 1B68     		ldr	r3, [r3]
 8092 0068 42F02002 		orr	r2, r2, #32
 8093 006c DA60     		str	r2, [r3, #12]
3236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 8094              		.loc 1 3237 10
 8095 006e 0023     		movs	r3, #0
3238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8096              		.loc 1 3238 1
 8097 0070 1846     		mov	r0, r3
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 221


 8098 0072 1437     		adds	r7, r7, #20
 8099              	.LCFI264:
 8100              		.cfi_def_cfa_offset 4
 8101 0074 BD46     		mov	sp, r7
 8102              	.LCFI265:
 8103              		.cfi_def_cfa_register 13
 8104              		@ sp needed
 8105 0076 5DF8047B 		ldr	r7, [sp], #4
 8106              	.LCFI266:
 8107              		.cfi_restore 7
 8108              		.cfi_def_cfa_offset 0
 8109 007a 7047     		bx	lr
 8110              		.cfi_endproc
 8111              	.LFE264:
 8113              		.section	.text.UART_Start_Receive_DMA,"ax",%progbits
 8114              		.align	1
 8115              		.global	UART_Start_Receive_DMA
 8116              		.syntax unified
 8117              		.thumb
 8118              		.thumb_func
 8120              	UART_Start_Receive_DMA:
 8121              	.LFB265:
3239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Start Receive operation in DMA mode.
3242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in DMA mode.
3243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
3247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
3250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8122              		.loc 1 3252 1
 8123              		.cfi_startproc
 8124              		@ args = 0, pretend = 0, frame = 96
 8125              		@ frame_needed = 1, uses_anonymous_args = 0
 8126 0000 80B5     		push	{r7, lr}
 8127              	.LCFI267:
 8128              		.cfi_def_cfa_offset 8
 8129              		.cfi_offset 7, -8
 8130              		.cfi_offset 14, -4
 8131 0002 98B0     		sub	sp, sp, #96
 8132              	.LCFI268:
 8133              		.cfi_def_cfa_offset 104
 8134 0004 00AF     		add	r7, sp, #0
 8135              	.LCFI269:
 8136              		.cfi_def_cfa_register 7
 8137 0006 F860     		str	r0, [r7, #12]
 8138 0008 B960     		str	r1, [r7, #8]
 8139 000a 1346     		mov	r3, r2
 8140 000c FB80     		strh	r3, [r7, #6]	@ movhi
3253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
3254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 222


3255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
 8141              		.loc 1 3255 21
 8142 000e BA68     		ldr	r2, [r7, #8]
 8143 0010 FB68     		ldr	r3, [r7, #12]
 8144 0012 9A62     		str	r2, [r3, #40]
3256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferSize = Size;
 8145              		.loc 1 3256 21
 8146 0014 FB68     		ldr	r3, [r7, #12]
 8147 0016 FA88     		ldrh	r2, [r7, #6]	@ movhi
 8148 0018 9A85     		strh	r2, [r3, #44]	@ movhi
3257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 8149              		.loc 1 3258 20
 8150 001a FB68     		ldr	r3, [r7, #12]
 8151 001c 0022     		movs	r2, #0
 8152 001e 1A64     		str	r2, [r3, #64]
3259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 8153              		.loc 1 3259 18
 8154 0020 FB68     		ldr	r3, [r7, #12]
 8155 0022 2222     		movs	r2, #34
 8156 0024 83F83E20 		strb	r2, [r3, #62]
3260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART DMA transfer complete callback */
3262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 8157              		.loc 1 3262 8
 8158 0028 FB68     		ldr	r3, [r7, #12]
 8159 002a 9B6B     		ldr	r3, [r3, #56]
 8160              		.loc 1 3262 35
 8161 002c 404A     		ldr	r2, .L428
 8162 002e DA63     		str	r2, [r3, #60]
3263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART DMA Half transfer complete callback */
3265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 8163              		.loc 1 3265 8
 8164 0030 FB68     		ldr	r3, [r7, #12]
 8165 0032 9B6B     		ldr	r3, [r3, #56]
 8166              		.loc 1 3265 39
 8167 0034 3F4A     		ldr	r2, .L428+4
 8168 0036 1A64     		str	r2, [r3, #64]
3266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the DMA error callback */
3268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferErrorCallback = UART_DMAError;
 8169              		.loc 1 3268 8
 8170 0038 FB68     		ldr	r3, [r7, #12]
 8171 003a 9B6B     		ldr	r3, [r3, #56]
 8172              		.loc 1 3268 36
 8173 003c 3E4A     		ldr	r2, .L428+8
 8174 003e DA64     		str	r2, [r3, #76]
3269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the DMA abort callback */
3271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 8175              		.loc 1 3271 8
 8176 0040 FB68     		ldr	r3, [r7, #12]
 8177 0042 9B6B     		ldr	r3, [r3, #56]
 8178              		.loc 1 3271 36
 8179 0044 0022     		movs	r2, #0
 8180 0046 1A65     		str	r2, [r3, #80]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 223


3272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the DMA stream */
3274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmp = (uint32_t *)&pData;
 8181              		.loc 1 3274 7
 8182 0048 07F10803 		add	r3, r7, #8
 8183 004c FB65     		str	r3, [r7, #92]
3275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t *)tmp, Size);
 8184              		.loc 1 3275 3
 8185 004e FB68     		ldr	r3, [r7, #12]
 8186 0050 986B     		ldr	r0, [r3, #56]
 8187              		.loc 1 3275 51
 8188 0052 FB68     		ldr	r3, [r7, #12]
 8189 0054 1B68     		ldr	r3, [r3]
 8190              		.loc 1 3275 45
 8191 0056 0433     		adds	r3, r3, #4
 8192              		.loc 1 3275 3
 8193 0058 1946     		mov	r1, r3
 8194 005a FB6D     		ldr	r3, [r7, #92]
 8195 005c 1A68     		ldr	r2, [r3]
 8196 005e FB88     		ldrh	r3, [r7, #6]
 8197 0060 FFF7FEFF 		bl	HAL_DMA_Start_IT
 8198              	.LBB599:
3276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear the Overrun flag just before enabling the DMA Rx request: can be mandatory for the secon
3278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_CLEAR_OREFLAG(huart);
 8199              		.loc 1 3278 3
 8200 0064 0023     		movs	r3, #0
 8201 0066 3B61     		str	r3, [r7, #16]
 8202 0068 FB68     		ldr	r3, [r7, #12]
 8203 006a 1B68     		ldr	r3, [r3]
 8204 006c 1B68     		ldr	r3, [r3]
 8205 006e 3B61     		str	r3, [r7, #16]
 8206 0070 FB68     		ldr	r3, [r7, #12]
 8207 0072 1B68     		ldr	r3, [r3]
 8208 0074 5B68     		ldr	r3, [r3, #4]
 8209 0076 3B61     		str	r3, [r7, #16]
 8210 0078 3B69     		ldr	r3, [r7, #16]
 8211              	.LBE599:
3279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
3281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 8212              		.loc 1 3281 3
 8213 007a FB68     		ldr	r3, [r7, #12]
 8214 007c 0022     		movs	r2, #0
 8215 007e 83F83C20 		strb	r2, [r3, #60]
3282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->Init.Parity != UART_PARITY_NONE)
 8216              		.loc 1 3283 18
 8217 0082 FB68     		ldr	r3, [r7, #12]
 8218 0084 1B69     		ldr	r3, [r3, #16]
 8219              		.loc 1 3283 6
 8220 0086 002B     		cmp	r3, #0
 8221 0088 19D0     		beq	.L423
 8222              	.L420:
 8223              	.LBB600:
3284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 224


3286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 8224              		.loc 1 3286 5 discriminator 1
 8225 008a FB68     		ldr	r3, [r7, #12]
 8226 008c 1B68     		ldr	r3, [r3]
 8227 008e 0C33     		adds	r3, r3, #12
 8228 0090 3B64     		str	r3, [r7, #64]
 8229              	.LBB601:
 8230              	.LBB602:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8231              		.loc 2 1072 4
 8232 0092 3B6C     		ldr	r3, [r7, #64]
 8233              		.syntax unified
 8234              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8235 0094 53E8003F 		ldrex r3, [r3]
 8236              	@ 0 "" 2
 8237              		.thumb
 8238              		.syntax unified
 8239 0098 FB63     		str	r3, [r7, #60]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8240              		.loc 2 1073 10
 8241 009a FB6B     		ldr	r3, [r7, #60]
 8242              	.LBE602:
 8243              	.LBE601:
 8244              		.loc 1 3286 5 discriminator 1
 8245 009c 43F48073 		orr	r3, r3, #256
 8246 00a0 BB65     		str	r3, [r7, #88]
 8247 00a2 FB68     		ldr	r3, [r7, #12]
 8248 00a4 1B68     		ldr	r3, [r3]
 8249 00a6 0C33     		adds	r3, r3, #12
 8250 00a8 BA6D     		ldr	r2, [r7, #88]
 8251 00aa FA64     		str	r2, [r7, #76]
 8252 00ac BB64     		str	r3, [r7, #72]
 8253              	.LBB603:
 8254              	.LBB604:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8255              		.loc 2 1123 4
 8256 00ae B96C     		ldr	r1, [r7, #72]
 8257 00b0 FA6C     		ldr	r2, [r7, #76]
 8258              		.syntax unified
 8259              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8260 00b2 41E80023 		strex r3, r2, [r1]
 8261              	@ 0 "" 2
 8262              		.thumb
 8263              		.syntax unified
 8264 00b6 7B64     		str	r3, [r7, #68]
 8265              		.loc 2 1124 10
 8266 00b8 7B6C     		ldr	r3, [r7, #68]
 8267              	.LBE604:
 8268              	.LBE603:
 8269              		.loc 1 3286 5 discriminator 1
 8270 00ba 002B     		cmp	r3, #0
 8271 00bc E5D1     		bne	.L420
 8272              	.L423:
 8273              	.LBE600:
 8274              	.LBB605:
3287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 225


3289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8275              		.loc 1 3290 3 discriminator 1
 8276 00be FB68     		ldr	r3, [r7, #12]
 8277 00c0 1B68     		ldr	r3, [r3]
 8278 00c2 1433     		adds	r3, r3, #20
 8279 00c4 FB62     		str	r3, [r7, #44]
 8280              	.LBB606:
 8281              	.LBB607:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8282              		.loc 2 1072 4
 8283 00c6 FB6A     		ldr	r3, [r7, #44]
 8284              		.syntax unified
 8285              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8286 00c8 53E8003F 		ldrex r3, [r3]
 8287              	@ 0 "" 2
 8288              		.thumb
 8289              		.syntax unified
 8290 00cc BB62     		str	r3, [r7, #40]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8291              		.loc 2 1073 10
 8292 00ce BB6A     		ldr	r3, [r7, #40]
 8293              	.LBE607:
 8294              	.LBE606:
 8295              		.loc 1 3290 3 discriminator 1
 8296 00d0 43F00103 		orr	r3, r3, #1
 8297 00d4 7B65     		str	r3, [r7, #84]
 8298 00d6 FB68     		ldr	r3, [r7, #12]
 8299 00d8 1B68     		ldr	r3, [r3]
 8300 00da 1433     		adds	r3, r3, #20
 8301 00dc 7A6D     		ldr	r2, [r7, #84]
 8302 00de BA63     		str	r2, [r7, #56]
 8303 00e0 7B63     		str	r3, [r7, #52]
 8304              	.LBB608:
 8305              	.LBB609:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8306              		.loc 2 1123 4
 8307 00e2 796B     		ldr	r1, [r7, #52]
 8308 00e4 BA6B     		ldr	r2, [r7, #56]
 8309              		.syntax unified
 8310              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8311 00e6 41E80023 		strex r3, r2, [r1]
 8312              	@ 0 "" 2
 8313              		.thumb
 8314              		.syntax unified
 8315 00ea 3B63     		str	r3, [r7, #48]
 8316              		.loc 2 1124 10
 8317 00ec 3B6B     		ldr	r3, [r7, #48]
 8318              	.LBE609:
 8319              	.LBE608:
 8320              		.loc 1 3290 3 discriminator 1
 8321 00ee 002B     		cmp	r3, #0
 8322 00f0 E5D1     		bne	.L423
 8323              	.L426:
 8324              	.LBE605:
 8325              	.LBB610:
3291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 226


3292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the DMA transfer for the receiver request by setting the DMAR bit
3293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   in the UART CR3 register */
3294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8326              		.loc 1 3294 3 discriminator 1
 8327 00f2 FB68     		ldr	r3, [r7, #12]
 8328 00f4 1B68     		ldr	r3, [r3]
 8329 00f6 1433     		adds	r3, r3, #20
 8330 00f8 BB61     		str	r3, [r7, #24]
 8331              	.LBB611:
 8332              	.LBB612:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8333              		.loc 2 1072 4
 8334 00fa BB69     		ldr	r3, [r7, #24]
 8335              		.syntax unified
 8336              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8337 00fc 53E8003F 		ldrex r3, [r3]
 8338              	@ 0 "" 2
 8339              		.thumb
 8340              		.syntax unified
 8341 0100 7B61     		str	r3, [r7, #20]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8342              		.loc 2 1073 10
 8343 0102 7B69     		ldr	r3, [r7, #20]
 8344              	.LBE612:
 8345              	.LBE611:
 8346              		.loc 1 3294 3 discriminator 1
 8347 0104 43F04003 		orr	r3, r3, #64
 8348 0108 3B65     		str	r3, [r7, #80]
 8349 010a FB68     		ldr	r3, [r7, #12]
 8350 010c 1B68     		ldr	r3, [r3]
 8351 010e 1433     		adds	r3, r3, #20
 8352 0110 3A6D     		ldr	r2, [r7, #80]
 8353 0112 7A62     		str	r2, [r7, #36]
 8354 0114 3B62     		str	r3, [r7, #32]
 8355              	.LBB613:
 8356              	.LBB614:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8357              		.loc 2 1123 4
 8358 0116 396A     		ldr	r1, [r7, #32]
 8359 0118 7A6A     		ldr	r2, [r7, #36]
 8360              		.syntax unified
 8361              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8362 011a 41E80023 		strex r3, r2, [r1]
 8363              	@ 0 "" 2
 8364              		.thumb
 8365              		.syntax unified
 8366 011e FB61     		str	r3, [r7, #28]
 8367              		.loc 2 1124 10
 8368 0120 FB69     		ldr	r3, [r7, #28]
 8369              	.LBE614:
 8370              	.LBE613:
 8371              		.loc 1 3294 3 discriminator 1
 8372 0122 002B     		cmp	r3, #0
 8373 0124 E5D1     		bne	.L426
 8374              	.LBE610:
3295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 227


 8375              		.loc 1 3296 10
 8376 0126 0023     		movs	r3, #0
3297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8377              		.loc 1 3297 1
 8378 0128 1846     		mov	r0, r3
 8379 012a 6037     		adds	r7, r7, #96
 8380              	.LCFI270:
 8381              		.cfi_def_cfa_offset 8
 8382 012c BD46     		mov	sp, r7
 8383              	.LCFI271:
 8384              		.cfi_def_cfa_register 13
 8385              		@ sp needed
 8386 012e 80BD     		pop	{r7, pc}
 8387              	.L429:
 8388              		.align	2
 8389              	.L428:
 8390 0130 00000000 		.word	UART_DMAReceiveCplt
 8391 0134 00000000 		.word	UART_DMARxHalfCplt
 8392 0138 00000000 		.word	UART_DMAError
 8393              		.cfi_endproc
 8394              	.LFE265:
 8396              		.section	.text.UART_EndTxTransfer,"ax",%progbits
 8397              		.align	1
 8398              		.syntax unified
 8399              		.thumb
 8400              		.thumb_func
 8402              	UART_EndTxTransfer:
 8403              	.LFB266:
3298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
3302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8404              		.loc 1 3305 1
 8405              		.cfi_startproc
 8406              		@ args = 0, pretend = 0, frame = 32
 8407              		@ frame_needed = 1, uses_anonymous_args = 0
 8408              		@ link register save eliminated.
 8409 0000 80B4     		push	{r7}
 8410              	.LCFI272:
 8411              		.cfi_def_cfa_offset 4
 8412              		.cfi_offset 7, -4
 8413 0002 89B0     		sub	sp, sp, #36
 8414              	.LCFI273:
 8415              		.cfi_def_cfa_offset 40
 8416 0004 00AF     		add	r7, sp, #0
 8417              	.LCFI274:
 8418              		.cfi_def_cfa_register 7
 8419 0006 7860     		str	r0, [r7, #4]
 8420              	.L433:
 8421              	.LBB615:
3306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
3307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 8422              		.loc 1 3307 3 discriminator 1
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 228


 8423 0008 7B68     		ldr	r3, [r7, #4]
 8424 000a 1B68     		ldr	r3, [r3]
 8425 000c 0C33     		adds	r3, r3, #12
 8426 000e FB60     		str	r3, [r7, #12]
 8427              	.LBB616:
 8428              	.LBB617:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8429              		.loc 2 1072 4
 8430 0010 FB68     		ldr	r3, [r7, #12]
 8431              		.syntax unified
 8432              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8433 0012 53E8003F 		ldrex r3, [r3]
 8434              	@ 0 "" 2
 8435              		.thumb
 8436              		.syntax unified
 8437 0016 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8438              		.loc 2 1073 10
 8439 0018 BB68     		ldr	r3, [r7, #8]
 8440              	.LBE617:
 8441              	.LBE616:
 8442              		.loc 1 3307 3 discriminator 1
 8443 001a 23F0C003 		bic	r3, r3, #192
 8444 001e FB61     		str	r3, [r7, #28]
 8445 0020 7B68     		ldr	r3, [r7, #4]
 8446 0022 1B68     		ldr	r3, [r3]
 8447 0024 0C33     		adds	r3, r3, #12
 8448 0026 FA69     		ldr	r2, [r7, #28]
 8449 0028 BA61     		str	r2, [r7, #24]
 8450 002a 7B61     		str	r3, [r7, #20]
 8451              	.LBB618:
 8452              	.LBB619:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8453              		.loc 2 1123 4
 8454 002c 7969     		ldr	r1, [r7, #20]
 8455 002e BA69     		ldr	r2, [r7, #24]
 8456              		.syntax unified
 8457              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8458 0030 41E80023 		strex r3, r2, [r1]
 8459              	@ 0 "" 2
 8460              		.thumb
 8461              		.syntax unified
 8462 0034 3B61     		str	r3, [r7, #16]
 8463              		.loc 2 1124 10
 8464 0036 3B69     		ldr	r3, [r7, #16]
 8465              	.LBE619:
 8466              	.LBE618:
 8467              		.loc 1 3307 3 discriminator 1
 8468 0038 002B     		cmp	r3, #0
 8469 003a E5D1     		bne	.L433
 8470              	.LBE615:
3308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 8471              		.loc 1 3310 17
 8472 003c 7B68     		ldr	r3, [r7, #4]
 8473 003e 2022     		movs	r2, #32
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 229


 8474 0040 83F83D20 		strb	r2, [r3, #61]
3311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8475              		.loc 1 3311 1
 8476 0044 00BF     		nop
 8477 0046 2437     		adds	r7, r7, #36
 8478              	.LCFI275:
 8479              		.cfi_def_cfa_offset 4
 8480 0048 BD46     		mov	sp, r7
 8481              	.LCFI276:
 8482              		.cfi_def_cfa_register 13
 8483              		@ sp needed
 8484 004a 5DF8047B 		ldr	r7, [sp], #4
 8485              	.LCFI277:
 8486              		.cfi_restore 7
 8487              		.cfi_def_cfa_offset 0
 8488 004e 7047     		bx	lr
 8489              		.cfi_endproc
 8490              	.LFE266:
 8492              		.section	.text.UART_EndRxTransfer,"ax",%progbits
 8493              		.align	1
 8494              		.syntax unified
 8495              		.thumb
 8496              		.thumb_func
 8498              	UART_EndRxTransfer:
 8499              	.LFB267:
3312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
3316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8500              		.loc 1 3319 1
 8501              		.cfi_startproc
 8502              		@ args = 0, pretend = 0, frame = 80
 8503              		@ frame_needed = 1, uses_anonymous_args = 0
 8504              		@ link register save eliminated.
 8505 0000 80B4     		push	{r7}
 8506              	.LCFI278:
 8507              		.cfi_def_cfa_offset 4
 8508              		.cfi_offset 7, -4
 8509 0002 95B0     		sub	sp, sp, #84
 8510              	.LCFI279:
 8511              		.cfi_def_cfa_offset 88
 8512 0004 00AF     		add	r7, sp, #0
 8513              	.LCFI280:
 8514              		.cfi_def_cfa_register 7
 8515 0006 7860     		str	r0, [r7, #4]
 8516              	.L437:
 8517              	.LBB620:
3320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8518              		.loc 1 3321 3 discriminator 1
 8519 0008 7B68     		ldr	r3, [r7, #4]
 8520 000a 1B68     		ldr	r3, [r3]
 8521 000c 0C33     		adds	r3, r3, #12
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 230


 8522 000e 7B63     		str	r3, [r7, #52]
 8523              	.LBB621:
 8524              	.LBB622:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8525              		.loc 2 1072 4
 8526 0010 7B6B     		ldr	r3, [r7, #52]
 8527              		.syntax unified
 8528              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8529 0012 53E8003F 		ldrex r3, [r3]
 8530              	@ 0 "" 2
 8531              		.thumb
 8532              		.syntax unified
 8533 0016 3B63     		str	r3, [r7, #48]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8534              		.loc 2 1073 10
 8535 0018 3B6B     		ldr	r3, [r7, #48]
 8536              	.LBE622:
 8537              	.LBE621:
 8538              		.loc 1 3321 3 discriminator 1
 8539 001a 23F49073 		bic	r3, r3, #288
 8540 001e FB64     		str	r3, [r7, #76]
 8541 0020 7B68     		ldr	r3, [r7, #4]
 8542 0022 1B68     		ldr	r3, [r3]
 8543 0024 0C33     		adds	r3, r3, #12
 8544 0026 FA6C     		ldr	r2, [r7, #76]
 8545 0028 3A64     		str	r2, [r7, #64]
 8546 002a FB63     		str	r3, [r7, #60]
 8547              	.LBB623:
 8548              	.LBB624:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8549              		.loc 2 1123 4
 8550 002c F96B     		ldr	r1, [r7, #60]
 8551 002e 3A6C     		ldr	r2, [r7, #64]
 8552              		.syntax unified
 8553              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8554 0030 41E80023 		strex r3, r2, [r1]
 8555              	@ 0 "" 2
 8556              		.thumb
 8557              		.syntax unified
 8558 0034 BB63     		str	r3, [r7, #56]
 8559              		.loc 2 1124 10
 8560 0036 BB6B     		ldr	r3, [r7, #56]
 8561              	.LBE624:
 8562              	.LBE623:
 8563              		.loc 1 3321 3 discriminator 1
 8564 0038 002B     		cmp	r3, #0
 8565 003a E5D1     		bne	.L437
 8566              	.L440:
 8567              	.LBE620:
 8568              	.LBB625:
3322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8569              		.loc 1 3322 3 discriminator 1
 8570 003c 7B68     		ldr	r3, [r7, #4]
 8571 003e 1B68     		ldr	r3, [r3]
 8572 0040 1433     		adds	r3, r3, #20
 8573 0042 3B62     		str	r3, [r7, #32]
 8574              	.LBB626:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 231


 8575              	.LBB627:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8576              		.loc 2 1072 4
 8577 0044 3B6A     		ldr	r3, [r7, #32]
 8578              		.syntax unified
 8579              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8580 0046 53E8003F 		ldrex r3, [r3]
 8581              	@ 0 "" 2
 8582              		.thumb
 8583              		.syntax unified
 8584 004a FB61     		str	r3, [r7, #28]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8585              		.loc 2 1073 10
 8586 004c FB69     		ldr	r3, [r7, #28]
 8587              	.LBE627:
 8588              	.LBE626:
 8589              		.loc 1 3322 3 discriminator 1
 8590 004e 23F00103 		bic	r3, r3, #1
 8591 0052 BB64     		str	r3, [r7, #72]
 8592 0054 7B68     		ldr	r3, [r7, #4]
 8593 0056 1B68     		ldr	r3, [r3]
 8594 0058 1433     		adds	r3, r3, #20
 8595 005a BA6C     		ldr	r2, [r7, #72]
 8596 005c FA62     		str	r2, [r7, #44]
 8597 005e BB62     		str	r3, [r7, #40]
 8598              	.LBB628:
 8599              	.LBB629:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8600              		.loc 2 1123 4
 8601 0060 B96A     		ldr	r1, [r7, #40]
 8602 0062 FA6A     		ldr	r2, [r7, #44]
 8603              		.syntax unified
 8604              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8605 0064 41E80023 		strex r3, r2, [r1]
 8606              	@ 0 "" 2
 8607              		.thumb
 8608              		.syntax unified
 8609 0068 7B62     		str	r3, [r7, #36]
 8610              		.loc 2 1124 10
 8611 006a 7B6A     		ldr	r3, [r7, #36]
 8612              	.LBE629:
 8613              	.LBE628:
 8614              		.loc 1 3322 3 discriminator 1
 8615 006c 002B     		cmp	r3, #0
 8616 006e E5D1     		bne	.L440
 8617              	.LBE625:
3323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
3325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8618              		.loc 1 3325 12
 8619 0070 7B68     		ldr	r3, [r7, #4]
 8620 0072 1B6B     		ldr	r3, [r3, #48]
 8621              		.loc 1 3325 6
 8622 0074 012B     		cmp	r3, #1
 8623 0076 19D1     		bne	.L441
 8624              	.L444:
 8625              	.LBB630:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 232


3326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8626              		.loc 1 3327 5 discriminator 1
 8627 0078 7B68     		ldr	r3, [r7, #4]
 8628 007a 1B68     		ldr	r3, [r3]
 8629 007c 0C33     		adds	r3, r3, #12
 8630 007e FB60     		str	r3, [r7, #12]
 8631              	.LBB631:
 8632              	.LBB632:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8633              		.loc 2 1072 4
 8634 0080 FB68     		ldr	r3, [r7, #12]
 8635              		.syntax unified
 8636              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8637 0082 53E8003F 		ldrex r3, [r3]
 8638              	@ 0 "" 2
 8639              		.thumb
 8640              		.syntax unified
 8641 0086 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8642              		.loc 2 1073 10
 8643 0088 BB68     		ldr	r3, [r7, #8]
 8644              	.LBE632:
 8645              	.LBE631:
 8646              		.loc 1 3327 5 discriminator 1
 8647 008a 23F01003 		bic	r3, r3, #16
 8648 008e 7B64     		str	r3, [r7, #68]
 8649 0090 7B68     		ldr	r3, [r7, #4]
 8650 0092 1B68     		ldr	r3, [r3]
 8651 0094 0C33     		adds	r3, r3, #12
 8652 0096 7A6C     		ldr	r2, [r7, #68]
 8653 0098 BA61     		str	r2, [r7, #24]
 8654 009a 7B61     		str	r3, [r7, #20]
 8655              	.LBB633:
 8656              	.LBB634:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8657              		.loc 2 1123 4
 8658 009c 7969     		ldr	r1, [r7, #20]
 8659 009e BA69     		ldr	r2, [r7, #24]
 8660              		.syntax unified
 8661              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8662 00a0 41E80023 		strex r3, r2, [r1]
 8663              	@ 0 "" 2
 8664              		.thumb
 8665              		.syntax unified
 8666 00a4 3B61     		str	r3, [r7, #16]
 8667              		.loc 2 1124 10
 8668 00a6 3B69     		ldr	r3, [r7, #16]
 8669              	.LBE634:
 8670              	.LBE633:
 8671              		.loc 1 3327 5 discriminator 1
 8672 00a8 002B     		cmp	r3, #0
 8673 00aa E5D1     		bne	.L444
 8674              	.L441:
 8675              	.LBE630:
3328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 233


3330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 8676              		.loc 1 3331 18
 8677 00ac 7B68     		ldr	r3, [r7, #4]
 8678 00ae 2022     		movs	r2, #32
 8679 00b0 83F83E20 		strb	r2, [r3, #62]
3332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8680              		.loc 1 3332 24
 8681 00b4 7B68     		ldr	r3, [r7, #4]
 8682 00b6 0022     		movs	r2, #0
 8683 00b8 1A63     		str	r2, [r3, #48]
3333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8684              		.loc 1 3333 1
 8685 00ba 00BF     		nop
 8686 00bc 5437     		adds	r7, r7, #84
 8687              	.LCFI281:
 8688              		.cfi_def_cfa_offset 4
 8689 00be BD46     		mov	sp, r7
 8690              	.LCFI282:
 8691              		.cfi_def_cfa_register 13
 8692              		@ sp needed
 8693 00c0 5DF8047B 		ldr	r7, [sp], #4
 8694              	.LCFI283:
 8695              		.cfi_restore 7
 8696              		.cfi_def_cfa_offset 0
 8697 00c4 7047     		bx	lr
 8698              		.cfi_endproc
 8699              	.LFE267:
 8701              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 8702              		.align	1
 8703              		.syntax unified
 8704              		.thumb
 8705              		.thumb_func
 8707              	UART_DMAAbortOnError:
 8708              	.LFB268:
3334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8709              		.loc 1 3343 1
 8710              		.cfi_startproc
 8711              		@ args = 0, pretend = 0, frame = 16
 8712              		@ frame_needed = 1, uses_anonymous_args = 0
 8713 0000 80B5     		push	{r7, lr}
 8714              	.LCFI284:
 8715              		.cfi_def_cfa_offset 8
 8716              		.cfi_offset 7, -8
 8717              		.cfi_offset 14, -4
 8718 0002 84B0     		sub	sp, sp, #16
 8719              	.LCFI285:
 8720              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 234


 8721 0004 00AF     		add	r7, sp, #0
 8722              	.LCFI286:
 8723              		.cfi_def_cfa_register 7
 8724 0006 7860     		str	r0, [r7, #4]
3344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8725              		.loc 1 3344 23
 8726 0008 7B68     		ldr	r3, [r7, #4]
 8727 000a 9B6B     		ldr	r3, [r3, #56]
 8728 000c FB60     		str	r3, [r7, #12]
3345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 8729              		.loc 1 3345 22
 8730 000e FB68     		ldr	r3, [r7, #12]
 8731 0010 0022     		movs	r2, #0
 8732 0012 DA85     		strh	r2, [r3, #46]	@ movhi
3346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 8733              		.loc 1 3346 22
 8734 0014 FB68     		ldr	r3, [r7, #12]
 8735 0016 0022     		movs	r2, #0
 8736 0018 DA84     		strh	r2, [r3, #38]	@ movhi
3347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered error callback*/
3350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 8737              		.loc 1 3353 3
 8738 001a F868     		ldr	r0, [r7, #12]
 8739 001c FFF7FEFF 		bl	HAL_UART_ErrorCallback
3354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8740              		.loc 1 3355 1
 8741 0020 00BF     		nop
 8742 0022 1037     		adds	r7, r7, #16
 8743              	.LCFI287:
 8744              		.cfi_def_cfa_offset 8
 8745 0024 BD46     		mov	sp, r7
 8746              	.LCFI288:
 8747              		.cfi_def_cfa_register 13
 8748              		@ sp needed
 8749 0026 80BD     		pop	{r7, pc}
 8750              		.cfi_endproc
 8751              	.LFE268:
 8753              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 8754              		.align	1
 8755              		.syntax unified
 8756              		.thumb
 8757              		.thumb_func
 8759              	UART_DMATxAbortCallback:
 8760              	.LFB269:
3356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
3359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 235


3363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8761              		.loc 1 3367 1
 8762              		.cfi_startproc
 8763              		@ args = 0, pretend = 0, frame = 16
 8764              		@ frame_needed = 1, uses_anonymous_args = 0
 8765 0000 80B5     		push	{r7, lr}
 8766              	.LCFI289:
 8767              		.cfi_def_cfa_offset 8
 8768              		.cfi_offset 7, -8
 8769              		.cfi_offset 14, -4
 8770 0002 84B0     		sub	sp, sp, #16
 8771              	.LCFI290:
 8772              		.cfi_def_cfa_offset 24
 8773 0004 00AF     		add	r7, sp, #0
 8774              	.LCFI291:
 8775              		.cfi_def_cfa_register 7
 8776 0006 7860     		str	r0, [r7, #4]
3368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8777              		.loc 1 3368 23
 8778 0008 7B68     		ldr	r3, [r7, #4]
 8779 000a 9B6B     		ldr	r3, [r3, #56]
 8780 000c FB60     		str	r3, [r7, #12]
3369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
 8781              		.loc 1 3370 8
 8782 000e FB68     		ldr	r3, [r7, #12]
 8783 0010 5B6B     		ldr	r3, [r3, #52]
 8784              		.loc 1 3370 36
 8785 0012 0022     		movs	r2, #0
 8786 0014 1A65     		str	r2, [r3, #80]
3371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 8787              		.loc 1 3373 12
 8788 0016 FB68     		ldr	r3, [r7, #12]
 8789 0018 9B6B     		ldr	r3, [r3, #56]
 8790              		.loc 1 3373 6
 8791 001a 002B     		cmp	r3, #0
 8792 001c 04D0     		beq	.L447
3374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
 8793              		.loc 1 3375 14
 8794 001e FB68     		ldr	r3, [r7, #12]
 8795 0020 9B6B     		ldr	r3, [r3, #56]
 8796              		.loc 1 3375 22
 8797 0022 1B6D     		ldr	r3, [r3, #80]
 8798              		.loc 1 3375 8
 8799 0024 002B     		cmp	r3, #0
 8800 0026 17D1     		bne	.L449
 8801              	.L447:
3376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
3378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 236


3379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 8802              		.loc 1 3382 22
 8803 0028 FB68     		ldr	r3, [r7, #12]
 8804 002a 0022     		movs	r2, #0
 8805 002c DA84     		strh	r2, [r3, #38]	@ movhi
3383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 8806              		.loc 1 3383 22
 8807 002e FB68     		ldr	r3, [r7, #12]
 8808 0030 0022     		movs	r2, #0
 8809 0032 DA85     		strh	r2, [r3, #46]	@ movhi
3384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
3386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 8810              		.loc 1 3386 20
 8811 0034 FB68     		ldr	r3, [r7, #12]
 8812 0036 0022     		movs	r2, #0
 8813 0038 1A64     		str	r2, [r3, #64]
3387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 8814              		.loc 1 3389 18
 8815 003a FB68     		ldr	r3, [r7, #12]
 8816 003c 2022     		movs	r2, #32
 8817 003e 83F83D20 		strb	r2, [r3, #61]
3390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 8818              		.loc 1 3390 18
 8819 0042 FB68     		ldr	r3, [r7, #12]
 8820 0044 2022     		movs	r2, #32
 8821 0046 83F83E20 		strb	r2, [r3, #62]
3391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8822              		.loc 1 3391 24
 8823 004a FB68     		ldr	r3, [r7, #12]
 8824 004c 0022     		movs	r2, #0
 8825 004e 1A63     		str	r2, [r3, #48]
3392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
3394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort complete callback */
3396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 8826              		.loc 1 3399 3
 8827 0050 F868     		ldr	r0, [r7, #12]
 8828 0052 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 8829 0056 00E0     		b	.L446
 8830              	.L449:
3377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 8831              		.loc 1 3377 7
 8832 0058 00BF     		nop
 8833              	.L446:
3400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8834              		.loc 1 3401 1
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 237


 8835 005a 1037     		adds	r7, r7, #16
 8836              	.LCFI292:
 8837              		.cfi_def_cfa_offset 8
 8838 005c BD46     		mov	sp, r7
 8839              	.LCFI293:
 8840              		.cfi_def_cfa_register 13
 8841              		@ sp needed
 8842 005e 80BD     		pop	{r7, pc}
 8843              		.cfi_endproc
 8844              	.LFE269:
 8846              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 8847              		.align	1
 8848              		.syntax unified
 8849              		.thumb
 8850              		.thumb_func
 8852              	UART_DMARxAbortCallback:
 8853              	.LFB270:
3402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
3405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
3408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8854              		.loc 1 3413 1
 8855              		.cfi_startproc
 8856              		@ args = 0, pretend = 0, frame = 16
 8857              		@ frame_needed = 1, uses_anonymous_args = 0
 8858 0000 80B5     		push	{r7, lr}
 8859              	.LCFI294:
 8860              		.cfi_def_cfa_offset 8
 8861              		.cfi_offset 7, -8
 8862              		.cfi_offset 14, -4
 8863 0002 84B0     		sub	sp, sp, #16
 8864              	.LCFI295:
 8865              		.cfi_def_cfa_offset 24
 8866 0004 00AF     		add	r7, sp, #0
 8867              	.LCFI296:
 8868              		.cfi_def_cfa_register 7
 8869 0006 7860     		str	r0, [r7, #4]
3414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8870              		.loc 1 3414 23
 8871 0008 7B68     		ldr	r3, [r7, #4]
 8872 000a 9B6B     		ldr	r3, [r3, #56]
 8873 000c FB60     		str	r3, [r7, #12]
3415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 8874              		.loc 1 3416 8
 8875 000e FB68     		ldr	r3, [r7, #12]
 8876 0010 9B6B     		ldr	r3, [r3, #56]
 8877              		.loc 1 3416 36
 8878 0012 0022     		movs	r2, #0
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 238


 8879 0014 1A65     		str	r2, [r3, #80]
3417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 8880              		.loc 1 3419 12
 8881 0016 FB68     		ldr	r3, [r7, #12]
 8882 0018 5B6B     		ldr	r3, [r3, #52]
 8883              		.loc 1 3419 6
 8884 001a 002B     		cmp	r3, #0
 8885 001c 04D0     		beq	.L451
3420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
 8886              		.loc 1 3421 14
 8887 001e FB68     		ldr	r3, [r7, #12]
 8888 0020 5B6B     		ldr	r3, [r3, #52]
 8889              		.loc 1 3421 22
 8890 0022 1B6D     		ldr	r3, [r3, #80]
 8891              		.loc 1 3421 8
 8892 0024 002B     		cmp	r3, #0
 8893 0026 17D1     		bne	.L453
 8894              	.L451:
3422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
3424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 8895              		.loc 1 3428 22
 8896 0028 FB68     		ldr	r3, [r7, #12]
 8897 002a 0022     		movs	r2, #0
 8898 002c DA84     		strh	r2, [r3, #38]	@ movhi
3429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 8899              		.loc 1 3429 22
 8900 002e FB68     		ldr	r3, [r7, #12]
 8901 0030 0022     		movs	r2, #0
 8902 0032 DA85     		strh	r2, [r3, #46]	@ movhi
3430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
3432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 8903              		.loc 1 3432 20
 8904 0034 FB68     		ldr	r3, [r7, #12]
 8905 0036 0022     		movs	r2, #0
 8906 0038 1A64     		str	r2, [r3, #64]
3433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 8907              		.loc 1 3435 18
 8908 003a FB68     		ldr	r3, [r7, #12]
 8909 003c 2022     		movs	r2, #32
 8910 003e 83F83D20 		strb	r2, [r3, #61]
3436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 8911              		.loc 1 3436 18
 8912 0042 FB68     		ldr	r3, [r7, #12]
 8913 0044 2022     		movs	r2, #32
 8914 0046 83F83E20 		strb	r2, [r3, #62]
3437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 239


 8915              		.loc 1 3437 24
 8916 004a FB68     		ldr	r3, [r7, #12]
 8917 004c 0022     		movs	r2, #0
 8918 004e 1A63     		str	r2, [r3, #48]
3438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
3440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort complete callback */
3442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 8919              		.loc 1 3445 3
 8920 0050 F868     		ldr	r0, [r7, #12]
 8921 0052 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 8922 0056 00E0     		b	.L450
 8923              	.L453:
3423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 8924              		.loc 1 3423 7
 8925 0058 00BF     		nop
 8926              	.L450:
3446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8927              		.loc 1 3447 1
 8928 005a 1037     		adds	r7, r7, #16
 8929              	.LCFI297:
 8930              		.cfi_def_cfa_offset 8
 8931 005c BD46     		mov	sp, r7
 8932              	.LCFI298:
 8933              		.cfi_def_cfa_register 13
 8934              		@ sp needed
 8935 005e 80BD     		pop	{r7, pc}
 8936              		.cfi_endproc
 8937              	.LFE270:
 8939              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 8940              		.align	1
 8941              		.syntax unified
 8942              		.thumb
 8943              		.thumb_func
 8945              	UART_DMATxOnlyAbortCallback:
 8946              	.LFB271:
3448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
3451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
3452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
3453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
3454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8947              		.loc 1 3459 1
 8948              		.cfi_startproc
 8949              		@ args = 0, pretend = 0, frame = 16
 8950              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 240


 8951 0000 80B5     		push	{r7, lr}
 8952              	.LCFI299:
 8953              		.cfi_def_cfa_offset 8
 8954              		.cfi_offset 7, -8
 8955              		.cfi_offset 14, -4
 8956 0002 84B0     		sub	sp, sp, #16
 8957              	.LCFI300:
 8958              		.cfi_def_cfa_offset 24
 8959 0004 00AF     		add	r7, sp, #0
 8960              	.LCFI301:
 8961              		.cfi_def_cfa_register 7
 8962 0006 7860     		str	r0, [r7, #4]
3460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8963              		.loc 1 3460 23
 8964 0008 7B68     		ldr	r3, [r7, #4]
 8965 000a 9B6B     		ldr	r3, [r3, #56]
 8966 000c FB60     		str	r3, [r7, #12]
3461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 8967              		.loc 1 3462 22
 8968 000e FB68     		ldr	r3, [r7, #12]
 8969 0010 0022     		movs	r2, #0
 8970 0012 DA84     		strh	r2, [r3, #38]	@ movhi
3463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
3465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 8971              		.loc 1 3465 17
 8972 0014 FB68     		ldr	r3, [r7, #12]
 8973 0016 2022     		movs	r2, #32
 8974 0018 83F83D20 		strb	r2, [r3, #61]
3466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
3468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
3470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
3471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
3473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 8975              		.loc 1 3473 3
 8976 001c F868     		ldr	r0, [r7, #12]
 8977 001e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
3474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8978              		.loc 1 3475 1
 8979 0022 00BF     		nop
 8980 0024 1037     		adds	r7, r7, #16
 8981              	.LCFI302:
 8982              		.cfi_def_cfa_offset 8
 8983 0026 BD46     		mov	sp, r7
 8984              	.LCFI303:
 8985              		.cfi_def_cfa_register 13
 8986              		@ sp needed
 8987 0028 80BD     		pop	{r7, pc}
 8988              		.cfi_endproc
 8989              	.LFE271:
 8991              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 8992              		.align	1
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 241


 8993              		.syntax unified
 8994              		.thumb
 8995              		.thumb_func
 8997              	UART_DMARxOnlyAbortCallback:
 8998              	.LFB272:
3476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
3479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
3480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
3481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
3482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8999              		.loc 1 3487 1
 9000              		.cfi_startproc
 9001              		@ args = 0, pretend = 0, frame = 16
 9002              		@ frame_needed = 1, uses_anonymous_args = 0
 9003 0000 80B5     		push	{r7, lr}
 9004              	.LCFI304:
 9005              		.cfi_def_cfa_offset 8
 9006              		.cfi_offset 7, -8
 9007              		.cfi_offset 14, -4
 9008 0002 84B0     		sub	sp, sp, #16
 9009              	.LCFI305:
 9010              		.cfi_def_cfa_offset 24
 9011 0004 00AF     		add	r7, sp, #0
 9012              	.LCFI306:
 9013              		.cfi_def_cfa_register 7
 9014 0006 7860     		str	r0, [r7, #4]
3488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 9015              		.loc 1 3488 23
 9016 0008 7B68     		ldr	r3, [r7, #4]
 9017 000a 9B6B     		ldr	r3, [r3, #56]
 9018 000c FB60     		str	r3, [r7, #12]
3489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 9019              		.loc 1 3490 22
 9020 000e FB68     		ldr	r3, [r7, #12]
 9021 0010 0022     		movs	r2, #0
 9022 0012 DA85     		strh	r2, [r3, #46]	@ movhi
3491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
3493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 9023              		.loc 1 3493 18
 9024 0014 FB68     		ldr	r3, [r7, #12]
 9025 0016 2022     		movs	r2, #32
 9026 0018 83F83E20 		strb	r2, [r3, #62]
3494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 9027              		.loc 1 3494 24
 9028 001c FB68     		ldr	r3, [r7, #12]
 9029 001e 0022     		movs	r2, #0
 9030 0020 1A63     		str	r2, [r3, #48]
3495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 242


3496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
3497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
3499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
3500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
3502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 9031              		.loc 1 3502 3
 9032 0022 F868     		ldr	r0, [r7, #12]
 9033 0024 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
3503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 9034              		.loc 1 3504 1
 9035 0028 00BF     		nop
 9036 002a 1037     		adds	r7, r7, #16
 9037              	.LCFI307:
 9038              		.cfi_def_cfa_offset 8
 9039 002c BD46     		mov	sp, r7
 9040              	.LCFI308:
 9041              		.cfi_def_cfa_register 13
 9042              		@ sp needed
 9043 002e 80BD     		pop	{r7, pc}
 9044              		.cfi_endproc
 9045              	.LFE272:
 9047              		.section	.text.UART_Transmit_IT,"ax",%progbits
 9048              		.align	1
 9049              		.syntax unified
 9050              		.thumb
 9051              		.thumb_func
 9053              	UART_Transmit_IT:
 9054              	.LFB273:
3505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
3508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
3511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
3513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 9055              		.loc 1 3513 1
 9056              		.cfi_startproc
 9057              		@ args = 0, pretend = 0, frame = 16
 9058              		@ frame_needed = 1, uses_anonymous_args = 0
 9059              		@ link register save eliminated.
 9060 0000 80B4     		push	{r7}
 9061              	.LCFI309:
 9062              		.cfi_def_cfa_offset 4
 9063              		.cfi_offset 7, -4
 9064 0002 85B0     		sub	sp, sp, #20
 9065              	.LCFI310:
 9066              		.cfi_def_cfa_offset 24
 9067 0004 00AF     		add	r7, sp, #0
 9068              	.LCFI311:
 9069              		.cfi_def_cfa_register 7
 9070 0006 7860     		str	r0, [r7, #4]
3514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   const uint16_t *tmp;
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 243


3515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 9071              		.loc 1 3517 12
 9072 0008 7B68     		ldr	r3, [r7, #4]
 9073 000a 93F83D30 		ldrb	r3, [r3, #61]
 9074 000e DBB2     		uxtb	r3, r3
 9075              		.loc 1 3517 6
 9076 0010 212B     		cmp	r3, #33
 9077 0012 3ED1     		bne	.L457
3518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 9078              		.loc 1 3519 21
 9079 0014 7B68     		ldr	r3, [r7, #4]
 9080 0016 9B68     		ldr	r3, [r3, #8]
 9081              		.loc 1 3519 8
 9082 0018 B3F5805F 		cmp	r3, #4096
 9083 001c 14D1     		bne	.L458
 9084              		.loc 1 3519 71 discriminator 1
 9085 001e 7B68     		ldr	r3, [r7, #4]
 9086 0020 1B69     		ldr	r3, [r3, #16]
 9087              		.loc 1 3519 56 discriminator 1
 9088 0022 002B     		cmp	r3, #0
 9089 0024 10D1     		bne	.L458
3520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       tmp = (const uint16_t *) huart->pTxBuffPtr;
 9090              		.loc 1 3521 11
 9091 0026 7B68     		ldr	r3, [r7, #4]
 9092 0028 1B6A     		ldr	r3, [r3, #32]
 9093 002a FB60     		str	r3, [r7, #12]
3522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 9094              		.loc 1 3522 40
 9095 002c FB68     		ldr	r3, [r7, #12]
 9096 002e 1B88     		ldrh	r3, [r3]
 9097              		.loc 1 3522 29
 9098 0030 1A46     		mov	r2, r3
 9099              		.loc 1 3522 12
 9100 0032 7B68     		ldr	r3, [r7, #4]
 9101 0034 1B68     		ldr	r3, [r3]
 9102              		.loc 1 3522 29
 9103 0036 C2F30802 		ubfx	r2, r2, #0, #9
 9104              		.loc 1 3522 27
 9105 003a 5A60     		str	r2, [r3, #4]
3523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 9106              		.loc 1 3523 12
 9107 003c 7B68     		ldr	r3, [r7, #4]
 9108 003e 1B6A     		ldr	r3, [r3, #32]
 9109              		.loc 1 3523 25
 9110 0040 9A1C     		adds	r2, r3, #2
 9111 0042 7B68     		ldr	r3, [r7, #4]
 9112 0044 1A62     		str	r2, [r3, #32]
 9113 0046 08E0     		b	.L459
 9114              	.L458:
3524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
3526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 244


 9115              		.loc 1 3527 45
 9116 0048 7B68     		ldr	r3, [r7, #4]
 9117 004a 1B6A     		ldr	r3, [r3, #32]
 9118              		.loc 1 3527 57
 9119 004c 591C     		adds	r1, r3, #1
 9120 004e 7A68     		ldr	r2, [r7, #4]
 9121 0050 1162     		str	r1, [r2, #32]
 9122              		.loc 1 3527 39
 9123 0052 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 9124              		.loc 1 3527 12
 9125 0054 7B68     		ldr	r3, [r7, #4]
 9126 0056 1B68     		ldr	r3, [r3]
 9127              		.loc 1 3527 27
 9128 0058 5A60     		str	r2, [r3, #4]
 9129              	.L459:
3528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (--huart->TxXferCount == 0U)
 9130              		.loc 1 3530 16
 9131 005a 7B68     		ldr	r3, [r7, #4]
 9132 005c DB8C     		ldrh	r3, [r3, #38]	@ movhi
 9133 005e 9BB2     		uxth	r3, r3
 9134              		.loc 1 3530 9
 9135 0060 013B     		subs	r3, r3, #1
 9136 0062 9BB2     		uxth	r3, r3
 9137              		.loc 1 3530 8
 9138 0064 7A68     		ldr	r2, [r7, #4]
 9139 0066 1946     		mov	r1, r3	@ movhi
 9140 0068 D184     		strh	r1, [r2, #38]	@ movhi
 9141 006a 002B     		cmp	r3, #0
 9142 006c 0FD1     		bne	.L460
3531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 9143              		.loc 1 3533 7
 9144 006e 7B68     		ldr	r3, [r7, #4]
 9145 0070 1B68     		ldr	r3, [r3]
 9146 0072 DA68     		ldr	r2, [r3, #12]
 9147 0074 7B68     		ldr	r3, [r7, #4]
 9148 0076 1B68     		ldr	r3, [r3]
 9149 0078 22F08002 		bic	r2, r2, #128
 9150 007c DA60     		str	r2, [r3, #12]
3534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 9151              		.loc 1 3536 7
 9152 007e 7B68     		ldr	r3, [r7, #4]
 9153 0080 1B68     		ldr	r3, [r3]
 9154 0082 DA68     		ldr	r2, [r3, #12]
 9155 0084 7B68     		ldr	r3, [r7, #4]
 9156 0086 1B68     		ldr	r3, [r3]
 9157 0088 42F04002 		orr	r2, r2, #64
 9158 008c DA60     		str	r2, [r3, #12]
 9159              	.L460:
3537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 9160              		.loc 1 3538 12
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 245


 9161 008e 0023     		movs	r3, #0
 9162 0090 00E0     		b	.L461
 9163              	.L457:
3539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 9164              		.loc 1 3542 12
 9165 0092 0223     		movs	r3, #2
 9166              	.L461:
3543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 9167              		.loc 1 3544 1
 9168 0094 1846     		mov	r0, r3
 9169 0096 1437     		adds	r7, r7, #20
 9170              	.LCFI312:
 9171              		.cfi_def_cfa_offset 4
 9172 0098 BD46     		mov	sp, r7
 9173              	.LCFI313:
 9174              		.cfi_def_cfa_register 13
 9175              		@ sp needed
 9176 009a 5DF8047B 		ldr	r7, [sp], #4
 9177              	.LCFI314:
 9178              		.cfi_restore 7
 9179              		.cfi_def_cfa_offset 0
 9180 009e 7047     		bx	lr
 9181              		.cfi_endproc
 9182              	.LFE273:
 9184              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 9185              		.align	1
 9186              		.syntax unified
 9187              		.thumb
 9188              		.thumb_func
 9190              	UART_EndTransmit_IT:
 9191              	.LFB274:
3545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Wraps up transmission in non blocking mode.
3548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
3551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
3553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 9192              		.loc 1 3553 1
 9193              		.cfi_startproc
 9194              		@ args = 0, pretend = 0, frame = 8
 9195              		@ frame_needed = 1, uses_anonymous_args = 0
 9196 0000 80B5     		push	{r7, lr}
 9197              	.LCFI315:
 9198              		.cfi_def_cfa_offset 8
 9199              		.cfi_offset 7, -8
 9200              		.cfi_offset 14, -4
 9201 0002 82B0     		sub	sp, sp, #8
 9202              	.LCFI316:
 9203              		.cfi_def_cfa_offset 16
 9204 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 246


 9205              	.LCFI317:
 9206              		.cfi_def_cfa_register 7
 9207 0006 7860     		str	r0, [r7, #4]
3554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
3555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 9208              		.loc 1 3555 3
 9209 0008 7B68     		ldr	r3, [r7, #4]
 9210 000a 1B68     		ldr	r3, [r3]
 9211 000c DA68     		ldr	r2, [r3, #12]
 9212 000e 7B68     		ldr	r3, [r7, #4]
 9213 0010 1B68     		ldr	r3, [r3]
 9214 0012 22F04002 		bic	r2, r2, #64
 9215 0016 DA60     		str	r2, [r3, #12]
3556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
3558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 9216              		.loc 1 3558 17
 9217 0018 7B68     		ldr	r3, [r7, #4]
 9218 001a 2022     		movs	r2, #32
 9219 001c 83F83D20 		strb	r2, [r3, #61]
3559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxCpltCallback(huart);
3563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 9220              		.loc 1 3565 3
 9221 0020 7868     		ldr	r0, [r7, #4]
 9222 0022 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
3566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 9223              		.loc 1 3568 10
 9224 0026 0023     		movs	r3, #0
3569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 9225              		.loc 1 3569 1
 9226 0028 1846     		mov	r0, r3
 9227 002a 0837     		adds	r7, r7, #8
 9228              	.LCFI318:
 9229              		.cfi_def_cfa_offset 8
 9230 002c BD46     		mov	sp, r7
 9231              	.LCFI319:
 9232              		.cfi_def_cfa_register 13
 9233              		@ sp needed
 9234 002e 80BD     		pop	{r7, pc}
 9235              		.cfi_endproc
 9236              	.LFE274:
 9238              		.section	.text.UART_Receive_IT,"ax",%progbits
 9239              		.align	1
 9240              		.syntax unified
 9241              		.thumb
 9242              		.thumb_func
 9244              	UART_Receive_IT:
 9245              	.LFB275:
3570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 247


3572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode
3573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
3576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
3578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 9246              		.loc 1 3578 1
 9247              		.cfi_startproc
 9248              		@ args = 0, pretend = 0, frame = 48
 9249              		@ frame_needed = 1, uses_anonymous_args = 0
 9250 0000 80B5     		push	{r7, lr}
 9251              	.LCFI320:
 9252              		.cfi_def_cfa_offset 8
 9253              		.cfi_offset 7, -8
 9254              		.cfi_offset 14, -4
 9255 0002 8CB0     		sub	sp, sp, #48
 9256              	.LCFI321:
 9257              		.cfi_def_cfa_offset 56
 9258 0004 00AF     		add	r7, sp, #0
 9259              	.LCFI322:
 9260              		.cfi_def_cfa_register 7
 9261 0006 7860     		str	r0, [r7, #4]
3579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint8_t  *pdata8bits;
3580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *pdata16bits;
3581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 9262              		.loc 1 3583 12
 9263 0008 7B68     		ldr	r3, [r7, #4]
 9264 000a 93F83E30 		ldrb	r3, [r3, #62]
 9265 000e DBB2     		uxtb	r3, r3
 9266              		.loc 1 3583 6
 9267 0010 222B     		cmp	r3, #34
 9268 0012 40F0AB80 		bne	.L465
3584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 9269              		.loc 1 3585 21
 9270 0016 7B68     		ldr	r3, [r7, #4]
 9271 0018 9B68     		ldr	r3, [r3, #8]
 9272              		.loc 1 3585 8
 9273 001a B3F5805F 		cmp	r3, #4096
 9274 001e 17D1     		bne	.L466
 9275              		.loc 1 3585 71 discriminator 1
 9276 0020 7B68     		ldr	r3, [r7, #4]
 9277 0022 1B69     		ldr	r3, [r3, #16]
 9278              		.loc 1 3585 56 discriminator 1
 9279 0024 002B     		cmp	r3, #0
 9280 0026 13D1     		bne	.L466
3586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = NULL;
 9281              		.loc 1 3587 19
 9282 0028 0023     		movs	r3, #0
 9283 002a FB62     		str	r3, [r7, #44]
3588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = (uint16_t *) huart->pRxBuffPtr;
 9284              		.loc 1 3588 19
 9285 002c 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 248


 9286 002e 9B6A     		ldr	r3, [r3, #40]
 9287 0030 BB62     		str	r3, [r7, #40]
3589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       *pdata16bits = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 9288              		.loc 1 3589 38
 9289 0032 7B68     		ldr	r3, [r7, #4]
 9290 0034 1B68     		ldr	r3, [r3]
 9291              		.loc 1 3589 48
 9292 0036 5B68     		ldr	r3, [r3, #4]
 9293              		.loc 1 3589 22
 9294 0038 9BB2     		uxth	r3, r3
 9295 003a C3F30803 		ubfx	r3, r3, #0, #9
 9296 003e 9AB2     		uxth	r2, r3
 9297              		.loc 1 3589 20
 9298 0040 BB6A     		ldr	r3, [r7, #40]
 9299 0042 1A80     		strh	r2, [r3]	@ movhi
3590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->pRxBuffPtr += 2U;
 9300              		.loc 1 3590 12
 9301 0044 7B68     		ldr	r3, [r7, #4]
 9302 0046 9B6A     		ldr	r3, [r3, #40]
 9303              		.loc 1 3590 25
 9304 0048 9A1C     		adds	r2, r3, #2
 9305 004a 7B68     		ldr	r3, [r7, #4]
 9306 004c 9A62     		str	r2, [r3, #40]
 9307 004e 26E0     		b	.L467
 9308              	.L466:
3591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
3593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits = (uint8_t *) huart->pRxBuffPtr;
 9309              		.loc 1 3594 18
 9310 0050 7B68     		ldr	r3, [r7, #4]
 9311 0052 9B6A     		ldr	r3, [r3, #40]
 9312 0054 FB62     		str	r3, [r7, #44]
3595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits  = NULL;
 9313              		.loc 1 3595 20
 9314 0056 0023     		movs	r3, #0
 9315 0058 BB62     		str	r3, [r7, #40]
3596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WORDLE
 9316              		.loc 1 3597 23
 9317 005a 7B68     		ldr	r3, [r7, #4]
 9318 005c 9B68     		ldr	r3, [r3, #8]
 9319              		.loc 1 3597 10
 9320 005e B3F5805F 		cmp	r3, #4096
 9321 0062 07D0     		beq	.L468
 9322              		.loc 1 3597 74 discriminator 1
 9323 0064 7B68     		ldr	r3, [r7, #4]
 9324 0066 9B68     		ldr	r3, [r3, #8]
 9325              		.loc 1 3597 58 discriminator 1
 9326 0068 002B     		cmp	r3, #0
 9327 006a 0AD1     		bne	.L469
 9328              		.loc 1 3597 124 discriminator 2
 9329 006c 7B68     		ldr	r3, [r7, #4]
 9330 006e 1B69     		ldr	r3, [r3, #16]
 9331              		.loc 1 3597 109 discriminator 2
 9332 0070 002B     		cmp	r3, #0
 9333 0072 06D1     		bne	.L469
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 249


 9334              	.L468:
3598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 9335              		.loc 1 3599 38
 9336 0074 7B68     		ldr	r3, [r7, #4]
 9337 0076 1B68     		ldr	r3, [r3]
 9338              		.loc 1 3599 48
 9339 0078 5B68     		ldr	r3, [r3, #4]
 9340              		.loc 1 3599 23
 9341 007a DAB2     		uxtb	r2, r3
 9342              		.loc 1 3599 21
 9343 007c FB6A     		ldr	r3, [r7, #44]
 9344 007e 1A70     		strb	r2, [r3]
 9345 0080 08E0     		b	.L470
 9346              	.L469:
3600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
3602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 9347              		.loc 1 3603 38
 9348 0082 7B68     		ldr	r3, [r7, #4]
 9349 0084 1B68     		ldr	r3, [r3]
 9350              		.loc 1 3603 48
 9351 0086 5B68     		ldr	r3, [r3, #4]
 9352              		.loc 1 3603 23
 9353 0088 DBB2     		uxtb	r3, r3
 9354 008a 03F07F03 		and	r3, r3, #127
 9355 008e DAB2     		uxtb	r2, r3
 9356              		.loc 1 3603 21
 9357 0090 FB6A     		ldr	r3, [r7, #44]
 9358 0092 1A70     		strb	r2, [r3]
 9359              	.L470:
3604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->pRxBuffPtr += 1U;
 9360              		.loc 1 3605 12
 9361 0094 7B68     		ldr	r3, [r7, #4]
 9362 0096 9B6A     		ldr	r3, [r3, #40]
 9363              		.loc 1 3605 25
 9364 0098 5A1C     		adds	r2, r3, #1
 9365 009a 7B68     		ldr	r3, [r7, #4]
 9366 009c 9A62     		str	r2, [r3, #40]
 9367              	.L467:
3606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (--huart->RxXferCount == 0U)
 9368              		.loc 1 3608 16
 9369 009e 7B68     		ldr	r3, [r7, #4]
 9370 00a0 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 9371 00a2 9BB2     		uxth	r3, r3
 9372              		.loc 1 3608 9
 9373 00a4 013B     		subs	r3, r3, #1
 9374 00a6 9BB2     		uxth	r3, r3
 9375              		.loc 1 3608 8
 9376 00a8 7A68     		ldr	r2, [r7, #4]
 9377 00aa 1946     		mov	r1, r3	@ movhi
 9378 00ac D185     		strh	r1, [r2, #46]	@ movhi
 9379 00ae 002B     		cmp	r3, #0
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 250


 9380 00b0 5AD1     		bne	.L471
3609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Data Register not empty Interrupt */
3611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 9381              		.loc 1 3611 7
 9382 00b2 7B68     		ldr	r3, [r7, #4]
 9383 00b4 1B68     		ldr	r3, [r3]
 9384 00b6 DA68     		ldr	r2, [r3, #12]
 9385 00b8 7B68     		ldr	r3, [r7, #4]
 9386 00ba 1B68     		ldr	r3, [r3]
 9387 00bc 22F02002 		bic	r2, r2, #32
 9388 00c0 DA60     		str	r2, [r3, #12]
3612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt */
3614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 9389              		.loc 1 3614 7
 9390 00c2 7B68     		ldr	r3, [r7, #4]
 9391 00c4 1B68     		ldr	r3, [r3]
 9392 00c6 DA68     		ldr	r2, [r3, #12]
 9393 00c8 7B68     		ldr	r3, [r7, #4]
 9394 00ca 1B68     		ldr	r3, [r3]
 9395 00cc 22F48072 		bic	r2, r2, #256
 9396 00d0 DA60     		str	r2, [r3, #12]
3615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 9397              		.loc 1 3617 7
 9398 00d2 7B68     		ldr	r3, [r7, #4]
 9399 00d4 1B68     		ldr	r3, [r3]
 9400 00d6 5A69     		ldr	r2, [r3, #20]
 9401 00d8 7B68     		ldr	r3, [r7, #4]
 9402 00da 1B68     		ldr	r3, [r3]
 9403 00dc 22F00102 		bic	r2, r2, #1
 9404 00e0 5A61     		str	r2, [r3, #20]
3618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 9405              		.loc 1 3620 22
 9406 00e2 7B68     		ldr	r3, [r7, #4]
 9407 00e4 2022     		movs	r2, #32
 9408 00e6 83F83E20 		strb	r2, [r3, #62]
3621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check current reception Mode :
3623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          If Reception till IDLE event has been selected : */
3624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 9409              		.loc 1 3624 16
 9410 00ea 7B68     		ldr	r3, [r7, #4]
 9411 00ec 1B6B     		ldr	r3, [r3, #48]
 9412              		.loc 1 3624 10
 9413 00ee 012B     		cmp	r3, #1
 9414 00f0 35D1     		bne	.L472
3625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Set reception type to Standard */
3627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 9415              		.loc 1 3627 30
 9416 00f2 7B68     		ldr	r3, [r7, #4]
 9417 00f4 0022     		movs	r2, #0
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 251


 9418 00f6 1A63     		str	r2, [r3, #48]
 9419              	.L475:
 9420              	.LBB635:
3628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable IDLE interrupt */
3630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 9421              		.loc 1 3630 9 discriminator 1
 9422 00f8 7B68     		ldr	r3, [r7, #4]
 9423 00fa 1B68     		ldr	r3, [r3]
 9424 00fc 0C33     		adds	r3, r3, #12
 9425 00fe 7B61     		str	r3, [r7, #20]
 9426              	.LBB636:
 9427              	.LBB637:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9428              		.loc 2 1072 4
 9429 0100 7B69     		ldr	r3, [r7, #20]
 9430              		.syntax unified
 9431              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9432 0102 53E8003F 		ldrex r3, [r3]
 9433              	@ 0 "" 2
 9434              		.thumb
 9435              		.syntax unified
 9436 0106 3B61     		str	r3, [r7, #16]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9437              		.loc 2 1073 10
 9438 0108 3B69     		ldr	r3, [r7, #16]
 9439              	.LBE637:
 9440              	.LBE636:
 9441              		.loc 1 3630 9 discriminator 1
 9442 010a 23F01003 		bic	r3, r3, #16
 9443 010e 7B62     		str	r3, [r7, #36]
 9444 0110 7B68     		ldr	r3, [r7, #4]
 9445 0112 1B68     		ldr	r3, [r3]
 9446 0114 0C33     		adds	r3, r3, #12
 9447 0116 7A6A     		ldr	r2, [r7, #36]
 9448 0118 3A62     		str	r2, [r7, #32]
 9449 011a FB61     		str	r3, [r7, #28]
 9450              	.LBB638:
 9451              	.LBB639:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9452              		.loc 2 1123 4
 9453 011c F969     		ldr	r1, [r7, #28]
 9454 011e 3A6A     		ldr	r2, [r7, #32]
 9455              		.syntax unified
 9456              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9457 0120 41E80023 		strex r3, r2, [r1]
 9458              	@ 0 "" 2
 9459              		.thumb
 9460              		.syntax unified
 9461 0124 BB61     		str	r3, [r7, #24]
 9462              		.loc 2 1124 10
 9463 0126 BB69     		ldr	r3, [r7, #24]
 9464              	.LBE639:
 9465              	.LBE638:
 9466              		.loc 1 3630 9 discriminator 1
 9467 0128 002B     		cmp	r3, #0
 9468 012a E5D1     		bne	.L475
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 252


 9469              	.LBE635:
3631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Check if IDLE flag is set */
3633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE))
 9470              		.loc 1 3633 13
 9471 012c 7B68     		ldr	r3, [r7, #4]
 9472 012e 1B68     		ldr	r3, [r3]
 9473 0130 1B68     		ldr	r3, [r3]
 9474 0132 03F01003 		and	r3, r3, #16
 9475              		.loc 1 3633 12
 9476 0136 102B     		cmp	r3, #16
 9477 0138 0AD1     		bne	.L476
 9478              	.LBB640:
3634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
3635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Clear IDLE flag in ISR */
3636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           __HAL_UART_CLEAR_IDLEFLAG(huart);
 9479              		.loc 1 3636 11
 9480 013a 0023     		movs	r3, #0
 9481 013c FB60     		str	r3, [r7, #12]
 9482 013e 7B68     		ldr	r3, [r7, #4]
 9483 0140 1B68     		ldr	r3, [r3]
 9484 0142 1B68     		ldr	r3, [r3]
 9485 0144 FB60     		str	r3, [r7, #12]
 9486 0146 7B68     		ldr	r3, [r7, #4]
 9487 0148 1B68     		ldr	r3, [r3]
 9488 014a 5B68     		ldr	r3, [r3, #4]
 9489 014c FB60     		str	r3, [r7, #12]
 9490 014e FB68     		ldr	r3, [r7, #12]
 9491              	.L476:
 9492              	.LBE640:
3637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
3638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call registered Rx Event callback*/
3641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxEventCallback(huart, huart->RxXferSize);
3642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
3644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 9493              		.loc 1 3644 9
 9494 0150 7B68     		ldr	r3, [r7, #4]
 9495 0152 9B8D     		ldrh	r3, [r3, #44]
 9496 0154 1946     		mov	r1, r3
 9497 0156 7868     		ldr	r0, [r7, #4]
 9498 0158 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 9499 015c 02E0     		b	.L477
 9500              	.L472:
3645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
3648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Standard reception API called */
3650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call registered Rx complete callback*/
3652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxCpltCallback(huart);
3653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
3655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 253


 9501              		.loc 1 3655 9
 9502 015e 7868     		ldr	r0, [r7, #4]
 9503 0160 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 9504              	.L477:
3656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_OK;
 9505              		.loc 1 3659 14
 9506 0164 0023     		movs	r3, #0
 9507 0166 02E0     		b	.L478
 9508              	.L471:
3660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 9509              		.loc 1 3661 12
 9510 0168 0023     		movs	r3, #0
 9511 016a 00E0     		b	.L478
 9512              	.L465:
3662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 9513              		.loc 1 3665 12
 9514 016c 0223     		movs	r3, #2
 9515              	.L478:
3666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 9516              		.loc 1 3667 1
 9517 016e 1846     		mov	r0, r3
 9518 0170 3037     		adds	r7, r7, #48
 9519              	.LCFI323:
 9520              		.cfi_def_cfa_offset 8
 9521 0172 BD46     		mov	sp, r7
 9522              	.LCFI324:
 9523              		.cfi_def_cfa_register 13
 9524              		@ sp needed
 9525 0174 80BD     		pop	{r7, pc}
 9526              		.cfi_endproc
 9527              	.LFE275:
 9529              		.global	__aeabi_uldivmod
 9530              		.section	.text.UART_SetConfig,"ax",%progbits
 9531              		.align	1
 9532              		.syntax unified
 9533              		.thumb
 9534              		.thumb_func
 9536              	UART_SetConfig:
 9537              	.LFB276:
3668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Configures the UART peripheral.
3671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart)
3676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 9538              		.loc 1 3676 1
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 254


 9539              		.cfi_startproc
 9540              		@ args = 0, pretend = 0, frame = 256
 9541              		@ frame_needed = 1, uses_anonymous_args = 0
 9542 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 9543              	.LCFI325:
 9544              		.cfi_def_cfa_offset 32
 9545              		.cfi_offset 4, -32
 9546              		.cfi_offset 5, -28
 9547              		.cfi_offset 7, -24
 9548              		.cfi_offset 8, -20
 9549              		.cfi_offset 9, -16
 9550              		.cfi_offset 10, -12
 9551              		.cfi_offset 11, -8
 9552              		.cfi_offset 14, -4
 9553 0004 C0B0     		sub	sp, sp, #256
 9554              	.LCFI326:
 9555              		.cfi_def_cfa_offset 288
 9556 0006 00AF     		add	r7, sp, #0
 9557              	.LCFI327:
 9558              		.cfi_def_cfa_register 7
 9559 0008 C7F8F400 		str	r0, [r7, #244]
3677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg;
3678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t pclk;
3679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
3681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
3682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
3683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
3684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
3685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
3687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits
3688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      according to huart->Init.StopBits value */
3689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 9560              		.loc 1 3689 3
 9561 000c D7F8F430 		ldr	r3, [r7, #244]
 9562 0010 1B68     		ldr	r3, [r3]
 9563 0012 1B69     		ldr	r3, [r3, #16]
 9564 0014 23F44050 		bic	r0, r3, #12288
 9565 0018 D7F8F430 		ldr	r3, [r7, #244]
 9566 001c D968     		ldr	r1, [r3, #12]
 9567 001e D7F8F430 		ldr	r3, [r7, #244]
 9568 0022 1A68     		ldr	r2, [r3]
 9569 0024 40EA0103 		orr	r3, r0, r1
 9570 0028 1361     		str	r3, [r2, #16]
3690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
3692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Word Length, Parity and mode:
3693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set the M bits according to huart->Init.WordLength value
3694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set PCE and PS bits according to huart->Init.Parity value
3695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set TE and RE bits according to huart->Init.Mode value
3696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set OVER8 bit according to huart->Init.OverSampling value */
3697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 9571              		.loc 1 3698 33
 9572 002a D7F8F430 		ldr	r3, [r7, #244]
 9573 002e 9A68     		ldr	r2, [r3, #8]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 255


 9574              		.loc 1 3698 58
 9575 0030 D7F8F430 		ldr	r3, [r7, #244]
 9576 0034 1B69     		ldr	r3, [r3, #16]
 9577              		.loc 1 3698 45
 9578 0036 1A43     		orrs	r2, r2, r3
 9579              		.loc 1 3698 79
 9580 0038 D7F8F430 		ldr	r3, [r7, #244]
 9581 003c 5B69     		ldr	r3, [r3, #20]
 9582              		.loc 1 3698 66
 9583 003e 1A43     		orrs	r2, r2, r3
 9584              		.loc 1 3698 98
 9585 0040 D7F8F430 		ldr	r3, [r7, #244]
 9586 0044 DB69     		ldr	r3, [r3, #28]
 9587              		.loc 1 3698 10
 9588 0046 1343     		orrs	r3, r3, r2
 9589 0048 C7F8F830 		str	r3, [r7, #248]
3699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
 9590              		.loc 1 3699 3
 9591 004c D7F8F430 		ldr	r3, [r7, #244]
 9592 0050 1B68     		ldr	r3, [r3]
 9593 0052 DB68     		ldr	r3, [r3, #12]
 9594 0054 23F41641 		bic	r1, r3, #38400
 9595 0058 21F00C01 		bic	r1, r1, #12
 9596 005c D7F8F430 		ldr	r3, [r7, #244]
 9597 0060 1A68     		ldr	r2, [r3]
 9598 0062 D7F8F830 		ldr	r3, [r7, #248]
 9599 0066 0B43     		orrs	r3, r3, r1
 9600 0068 D360     		str	r3, [r2, #12]
3700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | 
3701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              tmpreg);
3702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
3704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
3705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 9601              		.loc 1 3705 3
 9602 006a D7F8F430 		ldr	r3, [r7, #244]
 9603 006e 1B68     		ldr	r3, [r3]
 9604 0070 5B69     		ldr	r3, [r3, #20]
 9605 0072 23F44070 		bic	r0, r3, #768
 9606 0076 D7F8F430 		ldr	r3, [r7, #244]
 9607 007a 9969     		ldr	r1, [r3, #24]
 9608 007c D7F8F430 		ldr	r3, [r7, #244]
 9609 0080 1A68     		ldr	r2, [r3]
 9610 0082 40EA0103 		orr	r3, r0, r1
 9611 0086 5361     		str	r3, [r2, #20]
3706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if defined(USART6) && defined(UART9) && defined(UART10)
3709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) ||
3710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #elif defined(USART6)
3714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Instance == USART1) || (huart->Instance == USART6))
 9612              		.loc 1 3714 15
 9613 0088 D7F8F430 		ldr	r3, [r7, #244]
 9614 008c 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 256


 9615              		.loc 1 3714 8
 9616 008e 8F4B     		ldr	r3, .L486
 9617 0090 9A42     		cmp	r2, r3
 9618 0092 05D0     		beq	.L480
 9619              		.loc 1 3714 46 discriminator 1
 9620 0094 D7F8F430 		ldr	r3, [r7, #244]
 9621 0098 1A68     		ldr	r2, [r3]
 9622              		.loc 1 3714 37 discriminator 1
 9623 009a 8D4B     		ldr	r3, .L486+4
 9624 009c 9A42     		cmp	r2, r3
 9625 009e 04D1     		bne	.L481
 9626              	.L480:
3715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
 9627              		.loc 1 3716 14
 9628 00a0 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 9629 00a4 C7F8FC00 		str	r0, [r7, #252]
 9630              		.loc 1 3716 12
 9631 00a8 03E0     		b	.L482
 9632              	.L481:
3717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->Instance == USART1)
3720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USART6 */
3724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
3725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK1Freq();
 9633              		.loc 1 3726 14
 9634 00aa FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 9635 00ae C7F8FC00 		str	r0, [r7, #252]
 9636              	.L482:
3727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration ---------------------*/
3729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 9637              		.loc 1 3729 18
 9638 00b2 D7F8F430 		ldr	r3, [r7, #244]
 9639 00b6 DB69     		ldr	r3, [r3, #28]
 9640              		.loc 1 3729 6
 9641 00b8 B3F5004F 		cmp	r3, #32768
 9642 00bc 40F00C81 		bne	.L483
3730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 9643              		.loc 1 3731 28
 9644 00c0 D7F8FC30 		ldr	r3, [r7, #252]
 9645 00c4 0022     		movs	r2, #0
 9646 00c6 C7F8E830 		str	r3, [r7, #232]
 9647 00ca C7F8EC20 		str	r2, [r7, #236]
 9648 00ce D7E93A45 		ldrd	r4, [r7, #232]
 9649 00d2 2246     		mov	r2, r4
 9650 00d4 2B46     		mov	r3, r5
 9651 00d6 9118     		adds	r1, r2, r2
 9652 00d8 B965     		str	r1, [r7, #88]
 9653 00da 5B41     		adcs	r3, r3, r3
 9654 00dc FB65     		str	r3, [r7, #92]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 257


 9655 00de D7E91623 		ldrd	r2, [r7, #88]
 9656 00e2 2146     		mov	r1, r4
 9657 00e4 12EB0108 		adds	r8, r2, r1
 9658 00e8 2946     		mov	r1, r5
 9659 00ea 43EB0109 		adc	r9, r3, r1
 9660 00ee 4FF00002 		mov	r2, #0
 9661 00f2 4FF00003 		mov	r3, #0
 9662 00f6 4FEAC903 		lsl	r3, r9, #3
 9663 00fa 43EA5873 		orr	r3, r3, r8, lsr #29
 9664 00fe 4FEAC802 		lsl	r2, r8, #3
 9665 0102 9046     		mov	r8, r2
 9666 0104 9946     		mov	r9, r3
 9667 0106 2346     		mov	r3, r4
 9668 0108 18EB0303 		adds	r3, r8, r3
 9669 010c C7F8E030 		str	r3, [r7, #224]
 9670 0110 2B46     		mov	r3, r5
 9671 0112 49EB0303 		adc	r3, r9, r3
 9672 0116 C7F8E430 		str	r3, [r7, #228]
 9673 011a D7F8F430 		ldr	r3, [r7, #244]
 9674 011e 5B68     		ldr	r3, [r3, #4]
 9675 0120 0022     		movs	r2, #0
 9676 0122 C7F8D830 		str	r3, [r7, #216]
 9677 0126 C7F8DC20 		str	r2, [r7, #220]
 9678 012a D7E93612 		ldrd	r1, [r7, #216]
 9679 012e 0B46     		mov	r3, r1
 9680 0130 DB18     		adds	r3, r3, r3
 9681 0132 3B65     		str	r3, [r7, #80]
 9682 0134 1346     		mov	r3, r2
 9683 0136 42EB0303 		adc	r3, r2, r3
 9684 013a 7B65     		str	r3, [r7, #84]
 9685 013c D7E91423 		ldrd	r2, [r7, #80]
 9686 0140 D7E93801 		ldrd	r0, [r7, #224]
 9687 0144 FFF7FEFF 		bl	__aeabi_uldivmod
 9688 0148 0246     		mov	r2, r0
 9689 014a 0B46     		mov	r3, r1
 9690 014c 614B     		ldr	r3, .L486+8
 9691 014e A3FB0223 		umull	r2, r3, r3, r2
 9692 0152 5B09     		lsrs	r3, r3, #5
 9693 0154 1C01     		lsls	r4, r3, #4
 9694 0156 D7F8FC30 		ldr	r3, [r7, #252]
 9695 015a 0022     		movs	r2, #0
 9696 015c C7F8D030 		str	r3, [r7, #208]
 9697 0160 C7F8D420 		str	r2, [r7, #212]
 9698 0164 D7E93489 		ldrd	r8, [r7, #208]
 9699 0168 4246     		mov	r2, r8
 9700 016a 4B46     		mov	r3, r9
 9701 016c 9118     		adds	r1, r2, r2
 9702 016e B964     		str	r1, [r7, #72]
 9703 0170 5B41     		adcs	r3, r3, r3
 9704 0172 FB64     		str	r3, [r7, #76]
 9705 0174 D7E91223 		ldrd	r2, [r7, #72]
 9706 0178 4146     		mov	r1, r8
 9707 017a 12EB010A 		adds	r10, r2, r1
 9708 017e 4946     		mov	r1, r9
 9709 0180 43EB010B 		adc	fp, r3, r1
 9710 0184 4FF00002 		mov	r2, #0
 9711 0188 4FF00003 		mov	r3, #0
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 258


 9712 018c 4FEACB03 		lsl	r3, fp, #3
 9713 0190 43EA5A73 		orr	r3, r3, r10, lsr #29
 9714 0194 4FEACA02 		lsl	r2, r10, #3
 9715 0198 9246     		mov	r10, r2
 9716 019a 9B46     		mov	fp, r3
 9717 019c 4346     		mov	r3, r8
 9718 019e 1AEB0303 		adds	r3, r10, r3
 9719 01a2 C7F8C830 		str	r3, [r7, #200]
 9720 01a6 4B46     		mov	r3, r9
 9721 01a8 4BEB0303 		adc	r3, fp, r3
 9722 01ac C7F8CC30 		str	r3, [r7, #204]
 9723 01b0 D7F8F430 		ldr	r3, [r7, #244]
 9724 01b4 5B68     		ldr	r3, [r3, #4]
 9725 01b6 0022     		movs	r2, #0
 9726 01b8 C7F8C030 		str	r3, [r7, #192]
 9727 01bc C7F8C420 		str	r2, [r7, #196]
 9728 01c0 D7E93012 		ldrd	r1, [r7, #192]
 9729 01c4 0B46     		mov	r3, r1
 9730 01c6 DB18     		adds	r3, r3, r3
 9731 01c8 3B64     		str	r3, [r7, #64]
 9732 01ca 1346     		mov	r3, r2
 9733 01cc 42EB0303 		adc	r3, r2, r3
 9734 01d0 7B64     		str	r3, [r7, #68]
 9735 01d2 D7E91023 		ldrd	r2, [r7, #64]
 9736 01d6 D7E93201 		ldrd	r0, [r7, #200]
 9737 01da FFF7FEFF 		bl	__aeabi_uldivmod
 9738 01de 0246     		mov	r2, r0
 9739 01e0 0B46     		mov	r3, r1
 9740 01e2 1146     		mov	r1, r2
 9741 01e4 3B4B     		ldr	r3, .L486+8
 9742 01e6 A3FB0123 		umull	r2, r3, r3, r1
 9743 01ea 5B09     		lsrs	r3, r3, #5
 9744 01ec 6422     		movs	r2, #100
 9745 01ee 02FB03F3 		mul	r3, r2, r3
 9746 01f2 CB1A     		subs	r3, r1, r3
 9747 01f4 DB00     		lsls	r3, r3, #3
 9748 01f6 03F13202 		add	r2, r3, #50
 9749 01fa 364B     		ldr	r3, .L486+8
 9750 01fc A3FB0223 		umull	r2, r3, r3, r2
 9751 0200 5B09     		lsrs	r3, r3, #5
 9752 0202 5B00     		lsls	r3, r3, #1
 9753 0204 03F4F873 		and	r3, r3, #496
 9754 0208 1C44     		add	r4, r4, r3
 9755 020a D7F8FC30 		ldr	r3, [r7, #252]
 9756 020e 0022     		movs	r2, #0
 9757 0210 C7F8B830 		str	r3, [r7, #184]
 9758 0214 C7F8BC20 		str	r2, [r7, #188]
 9759 0218 D7E92E89 		ldrd	r8, [r7, #184]
 9760 021c 4246     		mov	r2, r8
 9761 021e 4B46     		mov	r3, r9
 9762 0220 9118     		adds	r1, r2, r2
 9763 0222 B963     		str	r1, [r7, #56]
 9764 0224 5B41     		adcs	r3, r3, r3
 9765 0226 FB63     		str	r3, [r7, #60]
 9766 0228 D7E90E23 		ldrd	r2, [r7, #56]
 9767 022c 4146     		mov	r1, r8
 9768 022e 5118     		adds	r1, r2, r1
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 259


 9769 0230 3963     		str	r1, [r7, #48]
 9770 0232 4946     		mov	r1, r9
 9771 0234 4B41     		adcs	r3, r3, r1
 9772 0236 7B63     		str	r3, [r7, #52]
 9773 0238 4FF00002 		mov	r2, #0
 9774 023c 4FF00003 		mov	r3, #0
 9775 0240 D7E90CAB 		ldrd	r10, [r7, #48]
 9776 0244 5946     		mov	r1, fp
 9777 0246 CB00     		lsls	r3, r1, #3
 9778 0248 5146     		mov	r1, r10
 9779 024a 43EA5173 		orr	r3, r3, r1, lsr #29
 9780 024e 5146     		mov	r1, r10
 9781 0250 CA00     		lsls	r2, r1, #3
 9782 0252 1046     		mov	r0, r2
 9783 0254 1946     		mov	r1, r3
 9784 0256 0346     		mov	r3, r0
 9785 0258 4246     		mov	r2, r8
 9786 025a 9B18     		adds	r3, r3, r2
 9787 025c C7F8B030 		str	r3, [r7, #176]
 9788 0260 4B46     		mov	r3, r9
 9789 0262 0A46     		mov	r2, r1
 9790 0264 42EB0303 		adc	r3, r2, r3
 9791 0268 C7F8B430 		str	r3, [r7, #180]
 9792 026c D7F8F430 		ldr	r3, [r7, #244]
 9793 0270 5B68     		ldr	r3, [r3, #4]
 9794 0272 0022     		movs	r2, #0
 9795 0274 C7F8A830 		str	r3, [r7, #168]
 9796 0278 C7F8AC20 		str	r2, [r7, #172]
 9797 027c D7E92A12 		ldrd	r1, [r7, #168]
 9798 0280 0B46     		mov	r3, r1
 9799 0282 DB18     		adds	r3, r3, r3
 9800 0284 BB62     		str	r3, [r7, #40]
 9801 0286 1346     		mov	r3, r2
 9802 0288 42EB0303 		adc	r3, r2, r3
 9803 028c FB62     		str	r3, [r7, #44]
 9804 028e D7E90A23 		ldrd	r2, [r7, #40]
 9805 0292 D7E92C01 		ldrd	r0, [r7, #176]
 9806 0296 FFF7FEFF 		bl	__aeabi_uldivmod
 9807 029a 0246     		mov	r2, r0
 9808 029c 0B46     		mov	r3, r1
 9809 029e 0D4B     		ldr	r3, .L486+8
 9810 02a0 A3FB0213 		umull	r1, r3, r3, r2
 9811 02a4 5B09     		lsrs	r3, r3, #5
 9812 02a6 6421     		movs	r1, #100
 9813 02a8 01FB03F3 		mul	r3, r1, r3
 9814 02ac D31A     		subs	r3, r2, r3
 9815 02ae DB00     		lsls	r3, r3, #3
 9816 02b0 3233     		adds	r3, r3, #50
 9817 02b2 084A     		ldr	r2, .L486+8
 9818 02b4 A2FB0323 		umull	r2, r3, r2, r3
 9819 02b8 5B09     		lsrs	r3, r3, #5
 9820 02ba 03F00702 		and	r2, r3, #7
 9821              		.loc 1 3731 10
 9822 02be D7F8F430 		ldr	r3, [r7, #244]
 9823 02c2 1B68     		ldr	r3, [r3]
 9824              		.loc 1 3731 28
 9825 02c4 2244     		add	r2, r2, r4
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 260


 9826              		.loc 1 3731 26
 9827 02c6 9A60     		str	r2, [r3, #8]
3732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
3736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 9828              		.loc 1 3737 1
 9829 02c8 06E1     		b	.L485
 9830              	.L487:
 9831 02ca 00BF     		.align	2
 9832              	.L486:
 9833 02cc 00100140 		.word	1073811456
 9834 02d0 00140140 		.word	1073812480
 9835 02d4 1F85EB51 		.word	1374389535
 9836              	.L483:
3735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 9837              		.loc 1 3735 28
 9838 02d8 D7F8FC30 		ldr	r3, [r7, #252]
 9839 02dc 0022     		movs	r2, #0
 9840 02de C7F8A030 		str	r3, [r7, #160]
 9841 02e2 C7F8A420 		str	r2, [r7, #164]
 9842 02e6 D7E92889 		ldrd	r8, [r7, #160]
 9843 02ea 4246     		mov	r2, r8
 9844 02ec 4B46     		mov	r3, r9
 9845 02ee 9118     		adds	r1, r2, r2
 9846 02f0 3962     		str	r1, [r7, #32]
 9847 02f2 5B41     		adcs	r3, r3, r3
 9848 02f4 7B62     		str	r3, [r7, #36]
 9849 02f6 D7E90823 		ldrd	r2, [r7, #32]
 9850 02fa 4146     		mov	r1, r8
 9851 02fc 5418     		adds	r4, r2, r1
 9852 02fe 4946     		mov	r1, r9
 9853 0300 43EB0105 		adc	r5, r3, r1
 9854 0304 4FF00002 		mov	r2, #0
 9855 0308 4FF00003 		mov	r3, #0
 9856 030c EB00     		lsls	r3, r5, #3
 9857 030e 43EA5473 		orr	r3, r3, r4, lsr #29
 9858 0312 E200     		lsls	r2, r4, #3
 9859 0314 1446     		mov	r4, r2
 9860 0316 1D46     		mov	r5, r3
 9861 0318 4346     		mov	r3, r8
 9862 031a E318     		adds	r3, r4, r3
 9863 031c C7F89830 		str	r3, [r7, #152]
 9864 0320 4B46     		mov	r3, r9
 9865 0322 45EB0303 		adc	r3, r5, r3
 9866 0326 C7F89C30 		str	r3, [r7, #156]
 9867 032a D7F8F430 		ldr	r3, [r7, #244]
 9868 032e 5B68     		ldr	r3, [r3, #4]
 9869 0330 0022     		movs	r2, #0
 9870 0332 C7F89030 		str	r3, [r7, #144]
 9871 0336 C7F89420 		str	r2, [r7, #148]
 9872 033a 4FF00002 		mov	r2, #0
 9873 033e 4FF00003 		mov	r3, #0
 9874 0342 D7E92445 		ldrd	r4, [r7, #144]
 9875 0346 2946     		mov	r1, r5
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 261


 9876 0348 8B00     		lsls	r3, r1, #2
 9877 034a 2146     		mov	r1, r4
 9878 034c 43EA9173 		orr	r3, r3, r1, lsr #30
 9879 0350 2146     		mov	r1, r4
 9880 0352 8A00     		lsls	r2, r1, #2
 9881 0354 D7E92601 		ldrd	r0, [r7, #152]
 9882 0358 FFF7FEFF 		bl	__aeabi_uldivmod
 9883 035c 0246     		mov	r2, r0
 9884 035e 0B46     		mov	r3, r1
 9885 0360 604B     		ldr	r3, .L488
 9886 0362 A3FB0223 		umull	r2, r3, r3, r2
 9887 0366 5B09     		lsrs	r3, r3, #5
 9888 0368 1C01     		lsls	r4, r3, #4
 9889 036a D7F8FC30 		ldr	r3, [r7, #252]
 9890 036e 0022     		movs	r2, #0
 9891 0370 C7F88830 		str	r3, [r7, #136]
 9892 0374 C7F88C20 		str	r2, [r7, #140]
 9893 0378 D7E92289 		ldrd	r8, [r7, #136]
 9894 037c 4246     		mov	r2, r8
 9895 037e 4B46     		mov	r3, r9
 9896 0380 9118     		adds	r1, r2, r2
 9897 0382 B961     		str	r1, [r7, #24]
 9898 0384 5B41     		adcs	r3, r3, r3
 9899 0386 FB61     		str	r3, [r7, #28]
 9900 0388 D7E90623 		ldrd	r2, [r7, #24]
 9901 038c 4146     		mov	r1, r8
 9902 038e 5118     		adds	r1, r2, r1
 9903 0390 3961     		str	r1, [r7, #16]
 9904 0392 4946     		mov	r1, r9
 9905 0394 4B41     		adcs	r3, r3, r1
 9906 0396 7B61     		str	r3, [r7, #20]
 9907 0398 4FF00002 		mov	r2, #0
 9908 039c 4FF00003 		mov	r3, #0
 9909 03a0 D7E904AB 		ldrd	r10, [r7, #16]
 9910 03a4 5946     		mov	r1, fp
 9911 03a6 CB00     		lsls	r3, r1, #3
 9912 03a8 5146     		mov	r1, r10
 9913 03aa 43EA5173 		orr	r3, r3, r1, lsr #29
 9914 03ae 5146     		mov	r1, r10
 9915 03b0 CA00     		lsls	r2, r1, #3
 9916 03b2 1046     		mov	r0, r2
 9917 03b4 1946     		mov	r1, r3
 9918 03b6 0346     		mov	r3, r0
 9919 03b8 4246     		mov	r2, r8
 9920 03ba 9B18     		adds	r3, r3, r2
 9921 03bc C7F88030 		str	r3, [r7, #128]
 9922 03c0 4B46     		mov	r3, r9
 9923 03c2 0A46     		mov	r2, r1
 9924 03c4 42EB0303 		adc	r3, r2, r3
 9925 03c8 C7F88430 		str	r3, [r7, #132]
 9926 03cc D7F8F430 		ldr	r3, [r7, #244]
 9927 03d0 5B68     		ldr	r3, [r3, #4]
 9928 03d2 0022     		movs	r2, #0
 9929 03d4 BB67     		str	r3, [r7, #120]
 9930 03d6 FA67     		str	r2, [r7, #124]
 9931 03d8 4FF00002 		mov	r2, #0
 9932 03dc 4FF00003 		mov	r3, #0
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 262


 9933 03e0 D7E91E89 		ldrd	r8, [r7, #120]
 9934 03e4 4946     		mov	r1, r9
 9935 03e6 8B00     		lsls	r3, r1, #2
 9936 03e8 4146     		mov	r1, r8
 9937 03ea 43EA9173 		orr	r3, r3, r1, lsr #30
 9938 03ee 4146     		mov	r1, r8
 9939 03f0 8A00     		lsls	r2, r1, #2
 9940 03f2 D7E92001 		ldrd	r0, [r7, #128]
 9941 03f6 FFF7FEFF 		bl	__aeabi_uldivmod
 9942 03fa 0246     		mov	r2, r0
 9943 03fc 0B46     		mov	r3, r1
 9944 03fe 1146     		mov	r1, r2
 9945 0400 384B     		ldr	r3, .L488
 9946 0402 A3FB0123 		umull	r2, r3, r3, r1
 9947 0406 5B09     		lsrs	r3, r3, #5
 9948 0408 6422     		movs	r2, #100
 9949 040a 02FB03F3 		mul	r3, r2, r3
 9950 040e CB1A     		subs	r3, r1, r3
 9951 0410 1B01     		lsls	r3, r3, #4
 9952 0412 3233     		adds	r3, r3, #50
 9953 0414 334A     		ldr	r2, .L488
 9954 0416 A2FB0323 		umull	r2, r3, r2, r3
 9955 041a 5B09     		lsrs	r3, r3, #5
 9956 041c 03F0F003 		and	r3, r3, #240
 9957 0420 1C44     		add	r4, r4, r3
 9958 0422 D7F8FC30 		ldr	r3, [r7, #252]
 9959 0426 0022     		movs	r2, #0
 9960 0428 3B67     		str	r3, [r7, #112]
 9961 042a 7A67     		str	r2, [r7, #116]
 9962 042c D7E91C89 		ldrd	r8, [r7, #112]
 9963 0430 4246     		mov	r2, r8
 9964 0432 4B46     		mov	r3, r9
 9965 0434 9118     		adds	r1, r2, r2
 9966 0436 B960     		str	r1, [r7, #8]
 9967 0438 5B41     		adcs	r3, r3, r3
 9968 043a FB60     		str	r3, [r7, #12]
 9969 043c D7E90223 		ldrd	r2, [r7, #8]
 9970 0440 4146     		mov	r1, r8
 9971 0442 5118     		adds	r1, r2, r1
 9972 0444 3960     		str	r1, [r7]
 9973 0446 4946     		mov	r1, r9
 9974 0448 4B41     		adcs	r3, r3, r1
 9975 044a 7B60     		str	r3, [r7, #4]
 9976 044c 4FF00002 		mov	r2, #0
 9977 0450 4FF00003 		mov	r3, #0
 9978 0454 D7E900AB 		ldrd	r10, [r7]
 9979 0458 5946     		mov	r1, fp
 9980 045a CB00     		lsls	r3, r1, #3
 9981 045c 5146     		mov	r1, r10
 9982 045e 43EA5173 		orr	r3, r3, r1, lsr #29
 9983 0462 5146     		mov	r1, r10
 9984 0464 CA00     		lsls	r2, r1, #3
 9985 0466 1046     		mov	r0, r2
 9986 0468 1946     		mov	r1, r3
 9987 046a 0346     		mov	r3, r0
 9988 046c 4246     		mov	r2, r8
 9989 046e 9B18     		adds	r3, r3, r2
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 263


 9990 0470 BB66     		str	r3, [r7, #104]
 9991 0472 4B46     		mov	r3, r9
 9992 0474 0A46     		mov	r2, r1
 9993 0476 42EB0303 		adc	r3, r2, r3
 9994 047a FB66     		str	r3, [r7, #108]
 9995 047c D7F8F430 		ldr	r3, [r7, #244]
 9996 0480 5B68     		ldr	r3, [r3, #4]
 9997 0482 0022     		movs	r2, #0
 9998 0484 3B66     		str	r3, [r7, #96]
 9999 0486 7A66     		str	r2, [r7, #100]
 10000 0488 4FF00002 		mov	r2, #0
 10001 048c 4FF00003 		mov	r3, #0
 10002 0490 D7E91889 		ldrd	r8, [r7, #96]
 10003 0494 4946     		mov	r1, r9
 10004 0496 8B00     		lsls	r3, r1, #2
 10005 0498 4146     		mov	r1, r8
 10006 049a 43EA9173 		orr	r3, r3, r1, lsr #30
 10007 049e 4146     		mov	r1, r8
 10008 04a0 8A00     		lsls	r2, r1, #2
 10009 04a2 D7E91A01 		ldrd	r0, [r7, #104]
 10010 04a6 FFF7FEFF 		bl	__aeabi_uldivmod
 10011 04aa 0246     		mov	r2, r0
 10012 04ac 0B46     		mov	r3, r1
 10013 04ae 0D4B     		ldr	r3, .L488
 10014 04b0 A3FB0213 		umull	r1, r3, r3, r2
 10015 04b4 5B09     		lsrs	r3, r3, #5
 10016 04b6 6421     		movs	r1, #100
 10017 04b8 01FB03F3 		mul	r3, r1, r3
 10018 04bc D31A     		subs	r3, r2, r3
 10019 04be 1B01     		lsls	r3, r3, #4
 10020 04c0 3233     		adds	r3, r3, #50
 10021 04c2 084A     		ldr	r2, .L488
 10022 04c4 A2FB0323 		umull	r2, r3, r2, r3
 10023 04c8 5B09     		lsrs	r3, r3, #5
 10024 04ca 03F00F02 		and	r2, r3, #15
3735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 10025              		.loc 1 3735 10
 10026 04ce D7F8F430 		ldr	r3, [r7, #244]
 10027 04d2 1B68     		ldr	r3, [r3]
3735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 10028              		.loc 1 3735 28
 10029 04d4 2244     		add	r2, r2, r4
3735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 10030              		.loc 1 3735 26
 10031 04d6 9A60     		str	r2, [r3, #8]
 10032              	.L485:
 10033              		.loc 1 3737 1
 10034 04d8 00BF     		nop
 10035 04da 07F58077 		add	r7, r7, #256
 10036              	.LCFI328:
 10037              		.cfi_def_cfa_offset 32
 10038 04de BD46     		mov	sp, r7
 10039              	.LCFI329:
 10040              		.cfi_def_cfa_register 13
 10041              		@ sp needed
 10042 04e0 BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 10043              	.L489:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 264


 10044              		.align	2
 10045              	.L488:
 10046 04e4 1F85EB51 		.word	1374389535
 10047              		.cfi_endproc
 10048              	.LFE276:
 10050              		.text
 10051              	.Letext0:
 10052              		.file 3 "C:/tools/arm-gnu-toolchain-13.2.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/include/m
 10053              		.file 4 "C:/tools/arm-gnu-toolchain-13.2.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/include/s
 10054              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 10055              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 10056              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 10057              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 10058              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 10059              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 10060              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 265


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hal_uart.c
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:21     .text.HAL_UART_Init:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:27     .text.HAL_UART_Init:00000000 HAL_UART_Init
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:642    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:9536   .text.UART_SetConfig:00000000 UART_SetConfig
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:136    .text.HAL_HalfDuplex_Init:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:142    .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:259    .text.HAL_LIN_Init:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:265    .text.HAL_LIN_Init:00000000 HAL_LIN_Init
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:400    .text.HAL_MultiProcessor_Init:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:406    .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:552    .text.HAL_UART_DeInit:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:558    .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:684    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:636    .text.HAL_UART_MspInit:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:678    .text.HAL_UART_MspDeInit:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:720    .text.HAL_UART_Transmit:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:726    .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:7816   .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:947    .text.HAL_UART_Receive:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:953    .text.HAL_UART_Receive:00000000 HAL_UART_Receive
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:1198   .text.HAL_UART_Transmit_IT:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:1204   .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:1316   .text.HAL_UART_Receive_IT:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:1322   .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:8018   .text.UART_Start_Receive_IT:00000000 UART_Start_Receive_IT
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:1407   .text.HAL_UART_Transmit_DMA:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:1413   .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:1611   .text.HAL_UART_Transmit_DMA:000000f0 $d
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:7140   .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:7304   .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:7700   .text.UART_DMAError:00000000 UART_DMAError
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:1618   .text.HAL_UART_Receive_DMA:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:1624   .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:8120   .text.UART_Start_Receive_DMA:00000000 UART_Start_Receive_DMA
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:1709   .text.HAL_UART_DMAPause:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:1715   .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:2027   .text.HAL_UART_DMAResume:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:2033   .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:2330   .text.HAL_UART_DMAStop:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:2336   .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:8402   .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:8498   .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:2553   .text.HAL_UARTEx_ReceiveToIdle:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:2559   .text.HAL_UARTEx_ReceiveToIdle:00000000 HAL_UARTEx_ReceiveToIdle
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:2881   .text.HAL_UARTEx_ReceiveToIdle_IT:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:2887   .text.HAL_UARTEx_ReceiveToIdle_IT:00000000 HAL_UARTEx_ReceiveToIdle_IT
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:3056   .text.HAL_UARTEx_ReceiveToIdle_DMA:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:3062   .text.HAL_UARTEx_ReceiveToIdle_DMA:00000000 HAL_UARTEx_ReceiveToIdle_DMA
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:3231   .text.HAL_UART_Abort:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:3237   .text.HAL_UART_Abort:00000000 HAL_UART_Abort
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:3650   .text.HAL_UART_AbortTransmit:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:3656   .text.HAL_UART_AbortTransmit:00000000 HAL_UART_AbortTransmit
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:3847   .text.HAL_UART_AbortReceive:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:3853   .text.HAL_UART_AbortReceive:00000000 HAL_UART_AbortReceive
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:4157   .text.HAL_UART_Abort_IT:00000000 $t
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 266


C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:4163   .text.HAL_UART_Abort_IT:00000000 HAL_UART_Abort_IT
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:6307   .text.HAL_UART_AbortCpltCallback:00000000 HAL_UART_AbortCpltCallback
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:4624   .text.HAL_UART_Abort_IT:00000220 $d
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:8759   .text.UART_DMATxAbortCallback:00000000 UART_DMATxAbortCallback
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:8852   .text.UART_DMARxAbortCallback:00000000 UART_DMARxAbortCallback
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:4630   .text.HAL_UART_AbortTransmit_IT:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:4636   .text.HAL_UART_AbortTransmit_IT:00000000 HAL_UART_AbortTransmit_IT
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:6349   .text.HAL_UART_AbortTransmitCpltCallback:00000000 HAL_UART_AbortTransmitCpltCallback
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:4839   .text.HAL_UART_AbortTransmit_IT:000000e4 $d
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:8945   .text.UART_DMATxOnlyAbortCallback:00000000 UART_DMATxOnlyAbortCallback
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:4844   .text.HAL_UART_AbortReceive_IT:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:4850   .text.HAL_UART_AbortReceive_IT:00000000 HAL_UART_AbortReceive_IT
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:6391   .text.HAL_UART_AbortReceiveCpltCallback:00000000 HAL_UART_AbortReceiveCpltCallback
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:5170   .text.HAL_UART_AbortReceive_IT:00000160 $d
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:8997   .text.UART_DMARxOnlyAbortCallback:00000000 UART_DMARxOnlyAbortCallback
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:5175   .text.HAL_UART_IRQHandler:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:5181   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:9244   .text.UART_Receive_IT:00000000 UART_Receive_IT
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:6265   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:6433   .text.HAL_UARTEx_RxEventCallback:00000000 HAL_UARTEx_RxEventCallback
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:5832   .text.HAL_UART_IRQHandler:000003dc $d
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:8707   .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:5837   .text.HAL_UART_IRQHandler:000003e0 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:9053   .text.UART_Transmit_IT:00000000 UART_Transmit_IT
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:9190   .text.UART_EndTransmit_IT:00000000 UART_EndTransmit_IT
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:6091   .text.HAL_UART_TxCpltCallback:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:6097   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:6133   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:6139   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:6175   .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:6181   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:6217   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:6223   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:6259   .text.HAL_UART_ErrorCallback:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:6301   .text.HAL_UART_AbortCpltCallback:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:6343   .text.HAL_UART_AbortTransmitCpltCallback:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:6385   .text.HAL_UART_AbortReceiveCpltCallback:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:6427   .text.HAL_UARTEx_RxEventCallback:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:6471   .text.HAL_LIN_SendBreak:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:6477   .text.HAL_LIN_SendBreak:00000000 HAL_LIN_SendBreak
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:6593   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:6599   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:6715   .text.HAL_MultiProcessor_ExitMuteMode:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:6721   .text.HAL_MultiProcessor_ExitMuteMode:00000000 HAL_MultiProcessor_ExitMuteMode
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:6837   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:6843   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:6930   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:6936   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:7023   .text.HAL_UART_GetState:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:7029   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:7090   .text.HAL_UART_GetError:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:7096   .text.HAL_UART_GetError:00000000 HAL_UART_GetError
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:7135   .text.UART_DMATransmitCplt:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:7299   .text.UART_DMATxHalfCplt:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:7343   .text.UART_DMAReceiveCplt:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:7348   .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:7632   .text.UART_DMARxHalfCplt:00000000 $t
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s 			page 267


C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:7637   .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:7695   .text.UART_DMAError:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:7811   .text.UART_WaitOnFlagUntilTimeout:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:8012   .text.UART_Start_Receive_IT:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:8114   .text.UART_Start_Receive_DMA:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:8390   .text.UART_Start_Receive_DMA:00000130 $d
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:8397   .text.UART_EndTxTransfer:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:8493   .text.UART_EndRxTransfer:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:8702   .text.UART_DMAAbortOnError:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:8754   .text.UART_DMATxAbortCallback:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:8847   .text.UART_DMARxAbortCallback:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:8940   .text.UART_DMATxOnlyAbortCallback:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:8992   .text.UART_DMARxOnlyAbortCallback:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:9048   .text.UART_Transmit_IT:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:9185   .text.UART_EndTransmit_IT:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:9239   .text.UART_Receive_IT:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:9531   .text.UART_SetConfig:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:9833   .text.UART_SetConfig:000002cc $d
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:9838   .text.UART_SetConfig:000002d8 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccl8tjWT.s:10046  .text.UART_SetConfig:000004e4 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
__aeabi_uldivmod
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetPCLK1Freq
